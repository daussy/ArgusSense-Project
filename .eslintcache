[{"D:\\前端学习\\devproject\\demo\\src\\index.js":"1","D:\\前端学习\\devproject\\demo\\src\\reportWebVitals.js":"2","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Aside\\AsideUI.jsx":"3","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\LayoutUI.jsx":"4","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\NavUI.jsx":"5","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\component\\clock\\ClockUI.jsx":"6","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\index.jsx":"7","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\index.jsx":"8","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelManagement\\index.jsx":"9","D:\\前端学习\\devproject\\demo\\src\\pages\\ImageProcessing\\index.jsx":"10","D:\\前端学习\\devproject\\demo\\src\\routerComponent\\routeConfig.js":"11","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\contentContainer\\ContentContainer.jsx":"12","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\index.jsx":"13","D:\\前端学习\\devproject\\demo\\src\\pages\\DataMining\\index.jsx":"14","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\ServiceChoose.jsx":"15","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\UserNav.jsx":"16","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\Logo.jsx":"17","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\contentContainer\\Content.jsx":"18","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Image.jsx":"19","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\index.js":"20","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\index.js":"21","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\EditDialog.jsx":"22","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\CheckZip.jsx":"23","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\DeleteBalloon.jsx":"24","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\AddImage.jsx":"25","D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\index.js":"26","D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\reducer.js":"27","D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\other.js":"28","D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\IDreducer.js":"29","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\store\\actionType.js":"30","D:\\前端学习\\devproject\\demo\\src\\Common.js":"31","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\index.jsx":"32","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\TreeIndex\\functionList.jsx":"33","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\TreeIndex\\index.jsx":"34","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\tableConfig.js":"35","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\functionList.jsx":"36","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\UploadFile.jsx":"37","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\ChooseFile.jsx":"38","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\store\\DataStoragereducer.js":"39","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\tableConfig.js":"40","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\CheckZip.jsx":"41","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\functionList.jsx":"42","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\ViewImg.jsx":"43","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\Title.jsx":"44","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\index.js":"45","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\index.js":"46","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\index.jsx":"47","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\index.js":"48","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\index.js":"49","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\index.js":"50","D:\\前端学习\\devproject\\demo\\src\\pages\\AbnormalPerception\\index.js":"51","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\index.js":"52","D:\\前端学习\\devproject\\demo\\src\\pages\\Troubleshooting\\index.js":"53","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\index.js":"54","D:\\前端学习\\devproject\\demo\\src\\pages\\FeatureScreening\\index.js":"55","D:\\前端学习\\devproject\\demo\\src\\pages\\FeatureExtraction\\index.js":"56","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\index.js":"57","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\contentContainer\\Footer.jsx":"58","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\index.jsx":"59","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\functionList.jsx":"60","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\index.jsx":"61","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Sequence.jsx":"62","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\index.js":"63","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\tableConfig.js":"64","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\functionList.jsx":"65","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\DeleteBalloon.jsx":"66","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CheckDialog.jsx":"67","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CreateLineChart.jsx":"68","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\component\\ListCard.jsx":"69","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\component\\functionList.jsx":"70","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\component\\CreateCard.jsx":"71","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\CreateProcess\\CreateProcess.jsx":"72","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\store\\DataProcessingreducer.js":"73","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\ProcessingSteps\\index.jsx":"74","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\store\\Preprocessingreducer.js":"75","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\functionList.jsx":"76","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\store\\ModelTrainingreducer.js":"77","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\Table1\\tableConfig.js":"78","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\ModelTraining.jsx":"79","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\functionList.jsx":"80","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\Table2\\tableConfig.js":"81","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\DeleteModel.jsx":"82","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\store\\ModelCheckreducer.js":"83","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\tableConfig.js":"84","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\functionList.jsx":"85","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\ModelCheck.jsx":"86","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\ChooseModel\\tableConfig.js":"87","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\store\\LifePredictionreducer.js":"88","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\tableConfig.js":"89","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\functionList.jsx":"90","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\ChooseModel\\tableConfig.js":"91","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\LifePrediction.jsx":"92","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\CheckDialog.jsx":"93","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\CreateLineChart.jsx":"94","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\store\\TagManagementreducer.js":"95","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\Table1\\tableConfig.js":"96","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\component\\functionList.jsx":"97","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\component\\UploadLabel.jsx":"98","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\component\\ViewImg.jsx":"99","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\Table1\\tableConfig.js":"100","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\functionList.jsx":"101","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\ViewImg.jsx":"102","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\store\\DatasetConstructReducer.js":"103","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\AutoDivide.jsx":"104","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\BatchOperation.jsx":"105","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\Table1\\tableConfig.js":"106","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\component\\CreateModels.jsx":"107","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\component\\functionList.jsx":"108","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\Table3\\tableConfig.js":"109","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\DetailMsg.jsx":"110","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\ImgTrainning.jsx":"111","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\store\\Modelvaluatereducer.js":"112","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\Table1\\tableConfig.js":"113","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\Imgvaluate.jsx":"114","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\DetailMsg.jsx":"115","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\functionList.jsx":"116","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\ImgValuate.jsx":"117","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\DeleteModel.jsx":"118","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\store\\StateEvaluatereducer.js":"119","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\Table1\\tableConfig.js":"120","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\Table2\\tableConfig.js":"121","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\GetResult.jsx":"122","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\functionList.jsx":"123","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\ImportZip.jsx":"124","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\ChooseModel\\tableConfig.js":"125","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\VibrationIndex.jsx":"126","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\index.js":"127","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\index.js":"128","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\index.jsx":"129","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\functionList.jsx":"130","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\UploadFile.jsx":"131","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\tableConfig.js":"132","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\tableConfig.js":"133","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\functionList.jsx":"134","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\functionList.jsx":"135","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\ChooseFile.jsx":"136","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\EditDialog.jsx":"137","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\DeleteBalloon.jsx":"138","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\CheckZip.jsx":"139","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateLine.jsx":"140","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateChart.jsx":"141","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\chart.config.js":"142","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\chart.config.js":"143","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\chart.config.js":"144","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\tableConfig.js":"145","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\PreProcessing.jsx":"146","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\CheckDialog.jsx":"147","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\CreateLineChart.jsx":"148","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\chart.config.js":"149","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\vibration\\tableConfig.js":"150","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\tableConfig.js":"151","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\vibration\\tableConfig.js":"152","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\PreProcessing.jsx":"153","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\CheckDialog.jsx":"154","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\CreateLineChart.jsx":"155","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\functionList.jsx":"156","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\chart.config.js":"157","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\vibration\\PreProcessing.jsx":"158","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\vibration\\Exchange.jsx":"159","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\store\\TableTimeFrequencyreducer.js":"160","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\Table1\\tableConfig.js":"161","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\Table2\\tableConfig.js":"162","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\component\\functionList.jsx":"163","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\component\\ViewImg.jsx":"164","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\AddCsv.jsx":"165","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\component\\AddLabel.jsx":"166","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\Table2\\tableConfig.js":"167","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\Table1\\tableConfig.js":"168","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\ViewImg.jsx":"169","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\functionList.jsx":"170","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\AutoDivide.jsx":"171","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\BatchOperation.jsx":"172","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\vibration\\Table2\\tableConfig.js":"173","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\vibration\\component\\functionList.jsx":"174","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\vibration\\component\\DetailMsg.jsx":"175","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\component\\functionList.jsx":"176","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\Table2\\tableConfig.js":"177","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\component\\DetailMsg.jsx":"178","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\component\\ChooseModel.jsx":"179","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\functionList.jsx":"180","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\ChooseModel.jsx":"181","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\Table2\\tableConfig.js":"182","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\Table1\\tableConfig.js":"183","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\CreateLine.jsx":"184","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\CreateChart.jsx":"185","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\chart.config.js":"186","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\index.jsx":"187","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\DeviceMsg.jsx":"188","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\dataConfig.js":"189","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\DeviceImg.jsx":"190","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\LineCharts.jsx":"191","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\CreateChart.jsx":"192","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\chart.config.js":"193","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\TableList.jsx":"194","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\tableConfig.js":"195","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\chart.data.js":"196","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\functionList.js":"197","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\Nav.jsx":"198","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\ModelAlgorithm.jsx":"199","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\functionList.js":"200","D:\\前端学习\\devproject\\demo\\src\\pages\\ActionChoose\\index.js":"201","D:\\前端学习\\devproject\\demo\\src\\pages\\UserLogin\\index.js":"202","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\ResultTable.jsx":"203","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\index.js":"204","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\reportWebVitals.js":"205","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\routerComponent\\routeConfig.js":"206","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\index.js":"207","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\index.js":"208","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\index.js":"209","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AbnormalPerception\\index.js":"210","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\index.js":"211","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Troubleshooting\\index.js":"212","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\index.js":"213","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\index.js":"214","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\index.js":"215","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\FeatureExtraction\\index.js":"216","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\index.js":"217","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\UserLogin\\index.js":"218","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\FeatureScreening\\index.js":"219","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ActionChoose\\index.js":"220","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\LayoutUI.jsx":"221","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\index.jsx":"222","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\index.jsx":"223","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\index.jsx":"224","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\index.jsx":"225","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\index.jsx":"226","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\index.jsx":"227","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\Table1\\tableConfig.js":"228","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Store\\index.js":"229","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\Table1\\tableConfig.js":"230","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\tableConfig.js":"231","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\Table1\\tableConfig.js":"232","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\Table1\\tableConfig.js":"233","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\Table2\\tableConfig.js":"234","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\tableConfig.js":"235","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\Table1\\tableConfig.js":"236","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\Table2\\tableConfig.js":"237","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\Table2\\tableConfig.js":"238","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\Table2\\tableConfig.js":"239","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\Table1\\tableConfig.js":"240","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\tableConfig.js":"241","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\vibration\\tableConfig.js":"242","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\component\\vibration\\tableConfig.js":"243","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\VibrationIndex.jsx":"244","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\functionList.jsx":"245","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\Table1\\tableConfig.js":"246","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\functionList.jsx":"247","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\component\\functionList.jsx":"248","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\Table3\\tableConfig.js":"249","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\Table2\\tableConfig.js":"250","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\functionList.jsx":"251","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\Table1\\tableConfig.js":"252","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\component\\functionList.jsx":"253","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\contentContainer\\Footer.jsx":"254","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\Table2\\tableConfig.js":"255","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\Table1\\tableConfig.js":"256","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\component\\functionList.jsx":"257","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\component\\ChooseModel.jsx":"258","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\ChooseModel.jsx":"259","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\functionList.jsx":"260","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\vibration\\Table2\\tableConfig.js":"261","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\contentContainer\\ContentContainer.jsx":"262","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\NavUI.jsx":"263","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\component\\CreateCard.jsx":"264","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\component\\ListCard.jsx":"265","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\component\\functionList.jsx":"266","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\functionList.jsx":"267","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\AutoDivide.jsx":"268","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\BatchOperation.jsx":"269","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\functionList.jsx":"270","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\functionList.jsx":"271","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\AutoDivide.jsx":"272","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\BatchOperation.jsx":"273","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\index.jsx":"274","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\vibration\\component\\functionList.jsx":"275","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\Common.js":"276","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Sequence.jsx":"277","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Store\\reducer.js":"278","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\DeviceImg.jsx":"279","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\DeviceMsg.jsx":"280","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ModelAlgorithm.jsx":"281","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\LineCharts.jsx":"282","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ResultTable.jsx":"283","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\Nav.jsx":"284","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\LifePrediction.jsx":"285","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\CheckDialog.jsx":"286","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\index.js":"287","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\index.js":"288","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\DeleteModel.jsx":"289","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\DetailMsg.jsx":"290","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\vibration\\PreProcessing.jsx":"291","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\component\\vibration\\Exchange.jsx":"292","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\GetResult.jsx":"293","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\ImportZip.jsx":"294","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\CheckDialog.jsx":"295","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\PreProcessing.jsx":"296","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\CreateLine.jsx":"297","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\component\\DetailMsg.jsx":"298","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\component\\ViewImg.jsx":"299","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\component\\AddLabel.jsx":"300","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\ImgValuate.jsx":"301","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\ModelCheck.jsx":"302","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\component\\ViewImg.jsx":"303","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\component\\UploadLabel.jsx":"304","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\ModelTraining.jsx":"305","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\functionList.jsx":"306","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\index.jsx":"307","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\component\\CreateModels.jsx":"308","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\vibration\\component\\DetailMsg.jsx":"309","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\ViewImg.jsx":"310","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\DeleteModel.jsx":"311","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\DetailMsg.jsx":"312","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\ImgTrainning.jsx":"313","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\ViewImg.jsx":"314","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\contentContainer\\Content.jsx":"315","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Aside\\AsideUI.jsx":"316","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\UserNav.jsx":"317","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\Title.jsx":"318","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\Logo.jsx":"319","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Image.jsx":"320","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\component\\clock\\ClockUI.jsx":"321","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\UploadFile.jsx":"322","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\store\\TableTimeFrequencyreducer.js":"323","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\tableConfig.js":"324","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\tableConfig.js":"325","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\dataConfig.js":"326","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\ChooseModel\\tableConfig.js":"327","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\functionList.js":"328","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Store\\other.js":"329","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\ChooseModel\\tableConfig.js":"330","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\store\\StateEvaluatereducer.js":"331","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\store\\Modelvaluatereducer.js":"332","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\store\\LifePredictionreducer.js":"333","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\store\\DatasetConstructReducer.js":"334","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\store\\TagManagementreducer.js":"335","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\store\\ModelCheckreducer.js":"336","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\functionList.jsx":"337","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\store\\ModelTrainingreducer.js":"338","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\store\\Preprocessingreducer.js":"339","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\CreateLineChart.jsx":"340","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\store\\DataProcessingreducer.js":"341","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\store\\DataStoragereducer.js":"342","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\index.js":"343","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\ChooseModel\\tableConfig.js":"344","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\functionList.jsx":"345","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\component\\functionList.jsx":"346","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\CreateLineChart.jsx":"347","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\functionList.jsx":"348","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\functionList.jsx":"349","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\CreateChart.jsx":"350","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\index.jsx":"351","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\functionList.jsx":"352","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\AddCsv.jsx":"353","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\component\\functionList.jsx":"354","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\CreateProcess\\CreateProcess.jsx":"355","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\ProcessingSteps\\index.jsx":"356","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\chart.config.js":"357","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\TreeIndex\\functionList.jsx":"358","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\index.js":"359","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\ChooseFile.jsx":"360","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\index.js":"361","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\tableConfig.js":"362","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\store\\actionType.js":"363","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\CheckZip.jsx":"364","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\DeleteBalloon.jsx":"365","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateLine.jsx":"366","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\EditDialog.jsx":"367","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\TreeIndex\\index.jsx":"368","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\functionList.js":"369","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\functionList.jsx":"370","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\ViewImg.jsx":"371","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\tableConfig.js":"372","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\functionList.jsx":"373","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\AddImage.jsx":"374","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CheckDialog.jsx":"375","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\DeleteBalloon.jsx":"376","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateChart.jsx":"377","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\functionList.jsx":"378","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\chart.config.js":"379","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CreateLineChart.jsx":"380","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\chart.config.js":"381","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\UploadFile.jsx":"382","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\tableConfig.js":"383","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\ChooseFile.jsx":"384","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\CheckZip.jsx":"385","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\DeleteBalloon.jsx":"386","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\EditDialog.jsx":"387","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\chart.config.js":"388","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\chart.config.js":"389","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\CreateChartDemo.jsx":"390","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\CreateRadar.jsx":"391","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\chart-config.js":"392","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\data-config.js":"393","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\index.jsx":"394","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ModelMsg\\ModelChoose.jsx":"395","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ModelMsg\\functionList.js":"396","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\component\\ModelTable.jsx":"397","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\component\\data.config.js":"398","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\component\\functionList.js":"399","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\ModelBar.jsx":"400"},{"size":1005,"mtime":1618405350684,"results":"401","hashOfConfig":"402"},{"size":362,"mtime":499162500000,"results":"403","hashOfConfig":"402"},{"size":7877,"mtime":1620302696783,"results":"404","hashOfConfig":"402"},{"size":723,"mtime":1618450370105,"results":"405","hashOfConfig":"402"},{"size":896,"mtime":1610863935229,"results":"406","hashOfConfig":"402"},{"size":621,"mtime":1608384413635,"results":"407","hashOfConfig":"402"},{"size":1202,"mtime":1614500781461,"results":"408","hashOfConfig":"402"},{"size":4819,"mtime":1615341923935,"results":"409","hashOfConfig":"402"},{"size":276,"mtime":1608535140581,"results":"410","hashOfConfig":"402"},{"size":276,"mtime":1608535121254,"results":"411","hashOfConfig":"402"},{"size":20197,"mtime":1618450140321,"results":"412","hashOfConfig":"402"},{"size":1097,"mtime":1618450454344,"results":"413","hashOfConfig":"402"},{"size":1210,"mtime":1614654729403,"results":"414","hashOfConfig":"402"},{"size":266,"mtime":1608560243801,"results":"415","hashOfConfig":"402"},{"size":1478,"mtime":1609116753764,"results":"416","hashOfConfig":"402"},{"size":2314,"mtime":1608642352355,"results":"417","hashOfConfig":"402"},{"size":478,"mtime":1610426763847,"results":"418","hashOfConfig":"402"},{"size":1975,"mtime":1620302321544,"results":"419","hashOfConfig":"402"},{"size":1096,"mtime":1614562054710,"results":"420","hashOfConfig":"402"},{"size":3432,"mtime":1614431626423,"results":"421","hashOfConfig":"402"},{"size":1793,"mtime":1614500171667,"results":"422","hashOfConfig":"402"},{"size":3013,"mtime":1610504747118,"results":"423","hashOfConfig":"402"},{"size":954,"mtime":1614582671730,"results":"424","hashOfConfig":"402"},{"size":1751,"mtime":1612266952434,"results":"425","hashOfConfig":"402"},{"size":2624,"mtime":1612680689167,"results":"426","hashOfConfig":"402"},{"size":130,"mtime":1574156954919,"results":"427","hashOfConfig":"402"},{"size":1821,"mtime":1614740263757,"results":"428","hashOfConfig":"402"},{"size":2661,"mtime":1609151940538,"results":"429","hashOfConfig":"402"},{"size":817,"mtime":1596718850395,"results":"430","hashOfConfig":"402"},{"size":149,"mtime":1574242347088,"results":"431","hashOfConfig":"402"},{"size":2103,"mtime":1614825355418,"results":"432","hashOfConfig":"402"},{"size":197,"mtime":1610514300280,"results":"433","hashOfConfig":"402"},{"size":3877,"mtime":1610700416071,"results":"434","hashOfConfig":"402"},{"size":4466,"mtime":1610419623061,"results":"435","hashOfConfig":"402"},{"size":1843,"mtime":1614562488495,"results":"436","hashOfConfig":"402"},{"size":4416,"mtime":1612687034929,"results":"437","hashOfConfig":"402"},{"size":2358,"mtime":1614217415278,"results":"438","hashOfConfig":"402"},{"size":2135,"mtime":1614582571506,"results":"439","hashOfConfig":"402"},{"size":11329,"mtime":1615364345402,"results":"440","hashOfConfig":"402"},{"size":1200,"mtime":1610854264468,"results":"441","hashOfConfig":"402"},{"size":907,"mtime":1610689775327,"results":"442","hashOfConfig":"402"},{"size":1674,"mtime":1612439802967,"results":"443","hashOfConfig":"402"},{"size":816,"mtime":1610701431372,"results":"444","hashOfConfig":"402"},{"size":269,"mtime":1618304691641,"results":"445","hashOfConfig":"402"},{"size":1371,"mtime":1614740565343,"results":"446","hashOfConfig":"402"},{"size":4631,"mtime":1615277440696,"results":"447","hashOfConfig":"402"},{"size":5257,"mtime":1615278319438,"results":"448","hashOfConfig":"402"},{"size":1241,"mtime":1612417682215,"results":"449","hashOfConfig":"402"},{"size":1272,"mtime":1614221343354,"results":"450","hashOfConfig":"402"},{"size":3416,"mtime":1615374075739,"results":"451","hashOfConfig":"402"},{"size":145,"mtime":1611380275640,"results":"452","hashOfConfig":"402"},{"size":1100,"mtime":1612425709913,"results":"453","hashOfConfig":"402"},{"size":136,"mtime":1611380316697,"results":"454","hashOfConfig":"402"},{"size":4139,"mtime":1618456590184,"results":"455","hashOfConfig":"402"},{"size":139,"mtime":1611380362415,"results":"456","hashOfConfig":"402"},{"size":142,"mtime":1611380339063,"results":"457","hashOfConfig":"402"},{"size":1254,"mtime":1614929944245,"results":"458","hashOfConfig":"402"},{"size":237,"mtime":1611388042552,"results":"459","hashOfConfig":"402"},{"size":4419,"mtime":1611412096632,"results":"460","hashOfConfig":"402"},{"size":3930,"mtime":1611412606674,"results":"461","hashOfConfig":"402"},{"size":193,"mtime":1611391767716,"results":"462","hashOfConfig":"402"},{"size":1277,"mtime":1611410844522,"results":"463","hashOfConfig":"402"},{"size":2549,"mtime":1614217466021,"results":"464","hashOfConfig":"402"},{"size":1392,"mtime":1611440141876,"results":"465","hashOfConfig":"402"},{"size":2540,"mtime":1612005258853,"results":"466","hashOfConfig":"402"},{"size":1656,"mtime":1611439561975,"results":"467","hashOfConfig":"402"},{"size":1927,"mtime":1611441734069,"results":"468","hashOfConfig":"402"},{"size":3068,"mtime":1614652426789,"results":"469","hashOfConfig":"402"},{"size":2852,"mtime":1614493713052,"results":"470","hashOfConfig":"402"},{"size":2307,"mtime":1611985702074,"results":"471","hashOfConfig":"402"},{"size":2346,"mtime":1612005961881,"results":"472","hashOfConfig":"402"},{"size":5699,"mtime":1611832706966,"results":"473","hashOfConfig":"402"},{"size":3254,"mtime":1612007198879,"results":"474","hashOfConfig":"402"},{"size":5702,"mtime":1619259616097,"results":"475","hashOfConfig":"402"},{"size":3094,"mtime":1614846869732,"results":"476","hashOfConfig":"402"},{"size":3389,"mtime":1614741390294,"results":"477","hashOfConfig":"402"},{"size":4902,"mtime":1615372077181,"results":"478","hashOfConfig":"402"},{"size":664,"mtime":1612014981071,"results":"479","hashOfConfig":"402"},{"size":5383,"mtime":1612437549877,"results":"480","hashOfConfig":"402"},{"size":4732,"mtime":1614343753287,"results":"481","hashOfConfig":"402"},{"size":1096,"mtime":1612079543279,"results":"482","hashOfConfig":"402"},{"size":1708,"mtime":1612080451435,"results":"483","hashOfConfig":"402"},{"size":1917,"mtime":1612421063577,"results":"484","hashOfConfig":"402"},{"size":782,"mtime":1612267770190,"results":"485","hashOfConfig":"402"},{"size":1772,"mtime":1612421064907,"results":"486","hashOfConfig":"402"},{"size":3463,"mtime":1612420568296,"results":"487","hashOfConfig":"402"},{"size":682,"mtime":1612269110166,"results":"488","hashOfConfig":"402"},{"size":1241,"mtime":1618455927623,"results":"489","hashOfConfig":"402"},{"size":848,"mtime":1612438499878,"results":"490","hashOfConfig":"402"},{"size":2987,"mtime":1612437732799,"results":"491","hashOfConfig":"402"},{"size":682,"mtime":1612421430178,"results":"492","hashOfConfig":"402"},{"size":5279,"mtime":1614217485365,"results":"493","hashOfConfig":"402"},{"size":1980,"mtime":1612438498177,"results":"494","hashOfConfig":"402"},{"size":2914,"mtime":1614652596846,"results":"495","hashOfConfig":"402"},{"size":6307,"mtime":1615274735843,"results":"496","hashOfConfig":"402"},{"size":1571,"mtime":1612680107189,"results":"497","hashOfConfig":"402"},{"size":2067,"mtime":1612687075837,"results":"498","hashOfConfig":"402"},{"size":1910,"mtime":1612680637951,"results":"499","hashOfConfig":"402"},{"size":1082,"mtime":1612678809121,"results":"500","hashOfConfig":"402"},{"size":1264,"mtime":1612681281842,"results":"501","hashOfConfig":"402"},{"size":3059,"mtime":1614827158979,"results":"502","hashOfConfig":"402"},{"size":1107,"mtime":1614827719902,"results":"503","hashOfConfig":"402"},{"size":6113,"mtime":1615274735843,"results":"504","hashOfConfig":"402"},{"size":5044,"mtime":1614562651438,"results":"505","hashOfConfig":"402"},{"size":2155,"mtime":1614217754586,"results":"506","hashOfConfig":"402"},{"size":1206,"mtime":1614223927294,"results":"507","hashOfConfig":"402"},{"size":7589,"mtime":1615295067079,"results":"508","hashOfConfig":"402"},{"size":1678,"mtime":1615341861200,"results":"509","hashOfConfig":"402"},{"size":943,"mtime":1614327186679,"results":"510","hashOfConfig":"402"},{"size":4643,"mtime":1614325445578,"results":"511","hashOfConfig":"402"},{"size":1429,"mtime":1614330827788,"results":"512","hashOfConfig":"402"},{"size":3745,"mtime":1615372783394,"results":"513","hashOfConfig":"402"},{"size":1370,"mtime":1614428851330,"results":"514","hashOfConfig":"402"},{"size":1320,"mtime":1614414038232,"results":"515","hashOfConfig":"402"},{"size":3694,"mtime":1615372839264,"results":"516","hashOfConfig":"402"},{"size":3004,"mtime":1614417727805,"results":"517","hashOfConfig":"402"},{"size":1939,"mtime":1614417511414,"results":"518","hashOfConfig":"402"},{"size":1696,"mtime":1614412618523,"results":"519","hashOfConfig":"402"},{"size":2229,"mtime":1618456590217,"results":"520","hashOfConfig":"402"},{"size":1266,"mtime":1614432564425,"results":"521","hashOfConfig":"402"},{"size":1085,"mtime":1614427010405,"results":"522","hashOfConfig":"402"},{"size":540,"mtime":1614426443207,"results":"523","hashOfConfig":"402"},{"size":2493,"mtime":1614429142138,"results":"524","hashOfConfig":"402"},{"size":4836,"mtime":1614493833844,"results":"525","hashOfConfig":"402"},{"size":620,"mtime":1614425966726,"results":"526","hashOfConfig":"402"},{"size":1117,"mtime":1614501079141,"results":"527","hashOfConfig":"402"},{"size":1809,"mtime":1614581027411,"results":"528","hashOfConfig":"402"},{"size":2806,"mtime":1615364420336,"results":"529","hashOfConfig":"402"},{"size":4481,"mtime":1614500760860,"results":"530","hashOfConfig":"402"},{"size":3933,"mtime":1614580996171,"results":"531","hashOfConfig":"402"},{"size":2400,"mtime":1614581188612,"results":"532","hashOfConfig":"402"},{"size":1800,"mtime":1614581005925,"results":"533","hashOfConfig":"402"},{"size":1269,"mtime":1614599229017,"results":"534","hashOfConfig":"402"},{"size":4473,"mtime":1614668653308,"results":"535","hashOfConfig":"402"},{"size":2301,"mtime":1615364339479,"results":"536","hashOfConfig":"402"},{"size":2240,"mtime":1614581803962,"results":"537","hashOfConfig":"402"},{"size":3013,"mtime":1614500551607,"results":"538","hashOfConfig":"402"},{"size":1751,"mtime":1614561909873,"results":"539","hashOfConfig":"402"},{"size":954,"mtime":1614500551584,"results":"540","hashOfConfig":"402"},{"size":1160,"mtime":1614599974012,"results":"541","hashOfConfig":"402"},{"size":4224,"mtime":1614600030849,"results":"542","hashOfConfig":"402"},{"size":3606,"mtime":1614600776376,"results":"543","hashOfConfig":"402"},{"size":3535,"mtime":1614652458131,"results":"544","hashOfConfig":"402"},{"size":3535,"mtime":1614652510729,"results":"545","hashOfConfig":"402"},{"size":1303,"mtime":1614669464203,"results":"546","hashOfConfig":"402"},{"size":2660,"mtime":1614669475364,"results":"547","hashOfConfig":"402"},{"size":1981,"mtime":1614669510787,"results":"548","hashOfConfig":"402"},{"size":2924,"mtime":1614669528851,"results":"549","hashOfConfig":"402"},{"size":3535,"mtime":1614669419039,"results":"550","hashOfConfig":"402"},{"size":970,"mtime":1614687906753,"results":"551","hashOfConfig":"402"},{"size":1303,"mtime":1614676953711,"results":"552","hashOfConfig":"402"},{"size":1090,"mtime":1614754683780,"results":"553","hashOfConfig":"402"},{"size":2660,"mtime":1614676953701,"results":"554","hashOfConfig":"402"},{"size":1981,"mtime":1614676953681,"results":"555","hashOfConfig":"402"},{"size":2924,"mtime":1614676953689,"results":"556","hashOfConfig":"402"},{"size":1450,"mtime":1615342647022,"results":"557","hashOfConfig":"402"},{"size":3535,"mtime":1614676953707,"results":"558","hashOfConfig":"402"},{"size":3194,"mtime":1614762662998,"results":"559","hashOfConfig":"402"},{"size":5027,"mtime":1614762662998,"results":"560","hashOfConfig":"402"},{"size":1848,"mtime":1614757974715,"results":"561","hashOfConfig":"402"},{"size":433,"mtime":1614761801196,"results":"562","hashOfConfig":"402"},{"size":1714,"mtime":1614932970262,"results":"563","hashOfConfig":"402"},{"size":2603,"mtime":1615274735843,"results":"564","hashOfConfig":"402"},{"size":1208,"mtime":1614763887645,"results":"565","hashOfConfig":"402"},{"size":2625,"mtime":1614760761553,"results":"566","hashOfConfig":"402"},{"size":3393,"mtime":1615188080328,"results":"567","hashOfConfig":"402"},{"size":1155,"mtime":1614828321598,"results":"568","hashOfConfig":"402"},{"size":433,"mtime":1614827904719,"results":"569","hashOfConfig":"402"},{"size":1208,"mtime":1614828306159,"results":"570","hashOfConfig":"402"},{"size":4281,"mtime":1615342600886,"results":"571","hashOfConfig":"402"},{"size":5064,"mtime":1615274735843,"results":"572","hashOfConfig":"402"},{"size":1993,"mtime":1614933829421,"results":"573","hashOfConfig":"402"},{"size":2215,"mtime":1618450822278,"results":"574","hashOfConfig":"402"},{"size":2396,"mtime":1615342548936,"results":"575","hashOfConfig":"402"},{"size":3832,"mtime":1618450822278,"results":"576","hashOfConfig":"402"},{"size":4211,"mtime":1615882646725,"results":"577","hashOfConfig":"402"},{"size":1677,"mtime":1616055863382,"results":"578","hashOfConfig":"402"},{"size":2577,"mtime":1616059263915,"results":"579","hashOfConfig":"402"},{"size":4230,"mtime":1615971339127,"results":"580","hashOfConfig":"402"},{"size":5246,"mtime":1618456539476,"results":"581","hashOfConfig":"402"},{"size":4920,"mtime":1616056599946,"results":"582","hashOfConfig":"402"},{"size":1535,"mtime":1616060093908,"results":"583","hashOfConfig":"402"},{"size":1675,"mtime":1616060102948,"results":"584","hashOfConfig":"402"},{"size":1160,"mtime":1615383432806,"results":"585","hashOfConfig":"402"},{"size":4224,"mtime":1615381548759,"results":"586","hashOfConfig":"402"},{"size":3606,"mtime":1615382095539,"results":"587","hashOfConfig":"402"},{"size":1815,"mtime":1618456645484,"results":"588","hashOfConfig":"402"},{"size":2556,"mtime":1618055304000,"results":"589","hashOfConfig":"402"},{"size":4695,"mtime":1618457437102,"results":"590","hashOfConfig":"402"},{"size":2836,"mtime":1618298041385,"results":"591","hashOfConfig":"402"},{"size":606,"mtime":1618316700526,"results":"592","hashOfConfig":"402"},{"size":6325,"mtime":1618302053950,"results":"593","hashOfConfig":"402"},{"size":2345,"mtime":1618057842776,"results":"594","hashOfConfig":"402"},{"size":634,"mtime":1617625042822,"results":"595","hashOfConfig":"402"},{"size":1547,"mtime":1617623641575,"results":"596","hashOfConfig":"402"},{"size":13657,"mtime":1618058505651,"results":"597","hashOfConfig":"402"},{"size":955,"mtime":1618296957475,"results":"598","hashOfConfig":"402"},{"size":506,"mtime":1618448546645,"results":"599","hashOfConfig":"402"},{"size":2354,"mtime":1618451613909,"results":"600","hashOfConfig":"402"},{"size":2275,"mtime":1618456590184,"results":"601","hashOfConfig":"402"},{"size":474,"mtime":1618402031481,"results":"602","hashOfConfig":"402"},{"size":3037,"mtime":1618401634564,"results":"603","hashOfConfig":"402"},{"size":2136,"mtime":1618456664073,"results":"604","hashOfConfig":"402"},{"size":1005,"mtime":1618405350684,"results":"605","hashOfConfig":"606"},{"size":362,"mtime":499162500000,"results":"607","hashOfConfig":"606"},{"size":20932,"mtime":1623394342867,"results":"608","hashOfConfig":"606"},{"size":4631,"mtime":1615277440696,"results":"609","hashOfConfig":"606"},{"size":1272,"mtime":1614221343354,"results":"610","hashOfConfig":"606"},{"size":1241,"mtime":1622465902679,"results":"611","hashOfConfig":"606"},{"size":145,"mtime":1611380275640,"results":"612","hashOfConfig":"606"},{"size":3499,"mtime":1622534638911,"results":"613","hashOfConfig":"606"},{"size":136,"mtime":1611380316697,"results":"614","hashOfConfig":"606"},{"size":4612,"mtime":1622536327729,"results":"615","hashOfConfig":"606"},{"size":1371,"mtime":1614740565343,"results":"616","hashOfConfig":"606"},{"size":1414,"mtime":1620304236965,"results":"617","hashOfConfig":"606"},{"size":142,"mtime":1611380339063,"results":"618","hashOfConfig":"606"},{"size":1254,"mtime":1614929944245,"results":"619","hashOfConfig":"606"},{"size":3225,"mtime":1622349803176,"results":"620","hashOfConfig":"606"},{"size":139,"mtime":1611380362415,"results":"621","hashOfConfig":"606"},{"size":1432,"mtime":1622210396520,"results":"622","hashOfConfig":"606"},{"size":723,"mtime":1618450370105,"results":"623","hashOfConfig":"606"},{"size":1210,"mtime":1614654729403,"results":"624","hashOfConfig":"606"},{"size":5415,"mtime":1622539879144,"results":"625","hashOfConfig":"606"},{"size":1202,"mtime":1614500781461,"results":"626","hashOfConfig":"606"},{"size":4819,"mtime":1615341923935,"results":"627","hashOfConfig":"606"},{"size":193,"mtime":1611391767716,"results":"628","hashOfConfig":"606"},{"size":3026,"mtime":1623401978608,"results":"629","hashOfConfig":"606"},{"size":1571,"mtime":1612680107189,"results":"630","hashOfConfig":"606"},{"size":130,"mtime":1574156954919,"results":"631","hashOfConfig":"606"},{"size":1206,"mtime":1614223927294,"results":"632","hashOfConfig":"606"},{"size":782,"mtime":1612267770190,"results":"633","hashOfConfig":"606"},{"size":1370,"mtime":1614428851330,"results":"634","hashOfConfig":"606"},{"size":1189,"mtime":1622535324411,"results":"635","hashOfConfig":"606"},{"size":1476,"mtime":1622515698538,"results":"636","hashOfConfig":"606"},{"size":848,"mtime":1612438499878,"results":"637","hashOfConfig":"606"},{"size":433,"mtime":1614761801196,"results":"638","hashOfConfig":"606"},{"size":1714,"mtime":1614932970262,"results":"639","hashOfConfig":"606"},{"size":1677,"mtime":1616055863382,"results":"640","hashOfConfig":"606"},{"size":1535,"mtime":1616060093908,"results":"641","hashOfConfig":"606"},{"size":1675,"mtime":1616060102948,"results":"642","hashOfConfig":"606"},{"size":1303,"mtime":1614669464203,"results":"643","hashOfConfig":"606"},{"size":970,"mtime":1614687906753,"results":"644","hashOfConfig":"606"},{"size":1090,"mtime":1614754683780,"results":"645","hashOfConfig":"606"},{"size":1117,"mtime":1614501079141,"results":"646","hashOfConfig":"606"},{"size":1790,"mtime":1622465902679,"results":"647","hashOfConfig":"606"},{"size":1264,"mtime":1612681281842,"results":"648","hashOfConfig":"606"},{"size":2978,"mtime":1622466242809,"results":"649","hashOfConfig":"606"},{"size":2067,"mtime":1612687075837,"results":"650","hashOfConfig":"606"},{"size":943,"mtime":1614327186679,"results":"651","hashOfConfig":"606"},{"size":1096,"mtime":1612079543279,"results":"652","hashOfConfig":"606"},{"size":3004,"mtime":1614417727805,"results":"653","hashOfConfig":"606"},{"size":664,"mtime":1612014981071,"results":"654","hashOfConfig":"606"},{"size":2603,"mtime":1615274735843,"results":"655","hashOfConfig":"606"},{"size":237,"mtime":1611388042552,"results":"656","hashOfConfig":"606"},{"size":1155,"mtime":1614828321598,"results":"657","hashOfConfig":"606"},{"size":433,"mtime":1614827904719,"results":"658","hashOfConfig":"606"},{"size":4211,"mtime":1615882646725,"results":"659","hashOfConfig":"606"},{"size":4230,"mtime":1615971339127,"results":"660","hashOfConfig":"606"},{"size":4920,"mtime":1616056599946,"results":"661","hashOfConfig":"606"},{"size":5246,"mtime":1618456539476,"results":"662","hashOfConfig":"606"},{"size":2215,"mtime":1618450822278,"results":"663","hashOfConfig":"606"},{"size":1097,"mtime":1618450454344,"results":"664","hashOfConfig":"606"},{"size":896,"mtime":1620651956795,"results":"665","hashOfConfig":"606"},{"size":2346,"mtime":1612005961881,"results":"666","hashOfConfig":"606"},{"size":2852,"mtime":1614493713052,"results":"667","hashOfConfig":"606"},{"size":2307,"mtime":1611985702074,"results":"668","hashOfConfig":"606"},{"size":3059,"mtime":1614827158979,"results":"669","hashOfConfig":"606"},{"size":5044,"mtime":1614562651438,"results":"670","hashOfConfig":"606"},{"size":2609,"mtime":1622539845581,"results":"671","hashOfConfig":"606"},{"size":4748,"mtime":1622464378524,"results":"672","hashOfConfig":"606"},{"size":4281,"mtime":1615342600886,"results":"673","hashOfConfig":"606"},{"size":5064,"mtime":1615274735843,"results":"674","hashOfConfig":"606"},{"size":2138,"mtime":1622539490017,"results":"675","hashOfConfig":"606"},{"size":197,"mtime":1610514300280,"results":"676","hashOfConfig":"606"},{"size":2396,"mtime":1615342548936,"results":"677","hashOfConfig":"606"},{"size":2103,"mtime":1614825355418,"results":"678","hashOfConfig":"606"},{"size":1277,"mtime":1611410844522,"results":"679","hashOfConfig":"606"},{"size":1821,"mtime":1614740263757,"results":"680","hashOfConfig":"606"},{"size":2653,"mtime":1622691923708,"results":"681","hashOfConfig":"606"},{"size":2688,"mtime":1622691278556,"results":"682","hashOfConfig":"606"},{"size":3847,"mtime":1623401935209,"results":"683","hashOfConfig":"606"},{"size":479,"mtime":1620891868642,"results":"684","hashOfConfig":"606"},{"size":3902,"mtime":1621325225168,"results":"685","hashOfConfig":"606"},{"size":664,"mtime":1621745048737,"results":"686","hashOfConfig":"606"},{"size":5330,"mtime":1622466242809,"results":"687","hashOfConfig":"606"},{"size":1980,"mtime":1612438498177,"results":"688","hashOfConfig":"606"},{"size":2806,"mtime":1615364420336,"results":"689","hashOfConfig":"606"},{"size":1809,"mtime":1614581027411,"results":"690","hashOfConfig":"606"},{"size":1696,"mtime":1614412618523,"results":"691","hashOfConfig":"606"},{"size":3694,"mtime":1615372839264,"results":"692","hashOfConfig":"606"},{"size":3194,"mtime":1614762662998,"results":"693","hashOfConfig":"606"},{"size":5027,"mtime":1614762662998,"results":"694","hashOfConfig":"606"},{"size":749,"mtime":1622536327729,"results":"695","hashOfConfig":"606"},{"size":4839,"mtime":1622469753535,"results":"696","hashOfConfig":"606"},{"size":1981,"mtime":1614669510787,"results":"697","hashOfConfig":"606"},{"size":2660,"mtime":1614669475364,"results":"698","hashOfConfig":"606"},{"size":1197,"mtime":1622534245761,"results":"699","hashOfConfig":"606"},{"size":2577,"mtime":1616059263915,"results":"700","hashOfConfig":"606"},{"size":1208,"mtime":1614763887645,"results":"701","hashOfConfig":"606"},{"size":3393,"mtime":1615188080328,"results":"702","hashOfConfig":"606"},{"size":1939,"mtime":1614417511414,"results":"703","hashOfConfig":"606"},{"size":3493,"mtime":1622464138769,"results":"704","hashOfConfig":"606"},{"size":1082,"mtime":1612678809121,"results":"705","hashOfConfig":"606"},{"size":1910,"mtime":1612680637951,"results":"706","hashOfConfig":"606"},{"size":5383,"mtime":1612437549877,"results":"707","hashOfConfig":"606"},{"size":3933,"mtime":1614580996171,"results":"708","hashOfConfig":"606"},{"size":4481,"mtime":1614500760860,"results":"709","hashOfConfig":"606"},{"size":7589,"mtime":1615295067079,"results":"710","hashOfConfig":"606"},{"size":3832,"mtime":1618450822278,"results":"711","hashOfConfig":"606"},{"size":1208,"mtime":1614828306159,"results":"712","hashOfConfig":"606"},{"size":1708,"mtime":1612080451435,"results":"713","hashOfConfig":"606"},{"size":4643,"mtime":1614325445578,"results":"714","hashOfConfig":"606"},{"size":1429,"mtime":1614330827788,"results":"715","hashOfConfig":"606"},{"size":1107,"mtime":1614827719902,"results":"716","hashOfConfig":"606"},{"size":1975,"mtime":1620302321544,"results":"717","hashOfConfig":"606"},{"size":7921,"mtime":1623394627701,"results":"718","hashOfConfig":"606"},{"size":3561,"mtime":1620651944368,"results":"719","hashOfConfig":"606"},{"size":269,"mtime":1620437532114,"results":"720","hashOfConfig":"606"},{"size":478,"mtime":1610426763847,"results":"721","hashOfConfig":"606"},{"size":1096,"mtime":1614562054710,"results":"722","hashOfConfig":"606"},{"size":621,"mtime":1608384413635,"results":"723","hashOfConfig":"606"},{"size":2400,"mtime":1614581188612,"results":"724","hashOfConfig":"606"},{"size":1848,"mtime":1614757974715,"results":"725","hashOfConfig":"606"},{"size":1800,"mtime":1614581005925,"results":"726","hashOfConfig":"606"},{"size":1269,"mtime":1614599229017,"results":"727","hashOfConfig":"606"},{"size":5981,"mtime":1622691316681,"results":"728","hashOfConfig":"606"},{"size":682,"mtime":1612421430178,"results":"729","hashOfConfig":"606"},{"size":2275,"mtime":1618456590184,"results":"730","hashOfConfig":"606"},{"size":2661,"mtime":1609151940538,"results":"731","hashOfConfig":"606"},{"size":620,"mtime":1614425966726,"results":"732","hashOfConfig":"606"},{"size":2741,"mtime":1622537400344,"results":"733","hashOfConfig":"606"},{"size":3745,"mtime":1615372783394,"results":"734","hashOfConfig":"606"},{"size":1241,"mtime":1618455927623,"results":"735","hashOfConfig":"606"},{"size":6113,"mtime":1615274735843,"results":"736","hashOfConfig":"606"},{"size":6307,"mtime":1615274735843,"results":"737","hashOfConfig":"606"},{"size":1951,"mtime":1622464537782,"results":"738","hashOfConfig":"606"},{"size":3930,"mtime":1611412606674,"results":"739","hashOfConfig":"606"},{"size":4902,"mtime":1615372077181,"results":"740","hashOfConfig":"606"},{"size":3094,"mtime":1614846869732,"results":"741","hashOfConfig":"606"},{"size":2914,"mtime":1614652596846,"results":"742","hashOfConfig":"606"},{"size":3254,"mtime":1612007198879,"results":"743","hashOfConfig":"606"},{"size":11329,"mtime":1615364345402,"results":"744","hashOfConfig":"606"},{"size":2549,"mtime":1614217466021,"results":"745","hashOfConfig":"606"},{"size":682,"mtime":1612269110166,"results":"746","hashOfConfig":"606"},{"size":3389,"mtime":1614741390294,"results":"747","hashOfConfig":"606"},{"size":1450,"mtime":1615342647022,"results":"748","hashOfConfig":"606"},{"size":2924,"mtime":1614669528851,"results":"749","hashOfConfig":"606"},{"size":4473,"mtime":1614668653308,"results":"750","hashOfConfig":"606"},{"size":3652,"mtime":1622537400344,"results":"751","hashOfConfig":"606"},{"size":4224,"mtime":1615381548759,"results":"752","hashOfConfig":"606"},{"size":4419,"mtime":1611412096632,"results":"753","hashOfConfig":"606"},{"size":2301,"mtime":1615364339479,"results":"754","hashOfConfig":"606"},{"size":2625,"mtime":1614760761553,"results":"755","hashOfConfig":"606"},{"size":1678,"mtime":1615341861200,"results":"756","hashOfConfig":"606"},{"size":5699,"mtime":1611832706966,"results":"757","hashOfConfig":"606"},{"size":5702,"mtime":1619259616097,"results":"758","hashOfConfig":"606"},{"size":3535,"mtime":1614652510729,"results":"759","hashOfConfig":"606"},{"size":3877,"mtime":1610700416071,"results":"760","hashOfConfig":"606"},{"size":3432,"mtime":1614431626423,"results":"761","hashOfConfig":"606"},{"size":2240,"mtime":1614581803962,"results":"762","hashOfConfig":"606"},{"size":1796,"mtime":1622466462256,"results":"763","hashOfConfig":"606"},{"size":1392,"mtime":1611440141876,"results":"764","hashOfConfig":"606"},{"size":149,"mtime":1574242347088,"results":"765","hashOfConfig":"606"},{"size":954,"mtime":1614500551584,"results":"766","hashOfConfig":"606"},{"size":1751,"mtime":1614561909873,"results":"767","hashOfConfig":"606"},{"size":1160,"mtime":1614599974012,"results":"768","hashOfConfig":"606"},{"size":3013,"mtime":1614500551607,"results":"769","hashOfConfig":"606"},{"size":4466,"mtime":1610419623061,"results":"770","hashOfConfig":"606"},{"size":955,"mtime":1618296957475,"results":"771","hashOfConfig":"606"},{"size":2540,"mtime":1612005258853,"results":"772","hashOfConfig":"606"},{"size":816,"mtime":1610701431372,"results":"773","hashOfConfig":"606"},{"size":1200,"mtime":1610854264468,"results":"774","hashOfConfig":"606"},{"size":1674,"mtime":1612439802967,"results":"775","hashOfConfig":"606"},{"size":2624,"mtime":1612680689167,"results":"776","hashOfConfig":"606"},{"size":1927,"mtime":1611441734069,"results":"777","hashOfConfig":"606"},{"size":1656,"mtime":1611439561975,"results":"778","hashOfConfig":"606"},{"size":4224,"mtime":1614600030849,"results":"779","hashOfConfig":"606"},{"size":4416,"mtime":1612687034929,"results":"780","hashOfConfig":"606"},{"size":3606,"mtime":1614600776376,"results":"781","hashOfConfig":"606"},{"size":3068,"mtime":1614652426789,"results":"782","hashOfConfig":"606"},{"size":3535,"mtime":1614652458131,"results":"783","hashOfConfig":"606"},{"size":2370,"mtime":1622466462256,"results":"784","hashOfConfig":"606"},{"size":1843,"mtime":1614562488495,"results":"785","hashOfConfig":"606"},{"size":2135,"mtime":1614582571506,"results":"786","hashOfConfig":"606"},{"size":954,"mtime":1614582671730,"results":"787","hashOfConfig":"606"},{"size":1751,"mtime":1612266952434,"results":"788","hashOfConfig":"606"},{"size":3013,"mtime":1610504747118,"results":"789","hashOfConfig":"606"},{"size":3606,"mtime":1615382095539,"results":"790","hashOfConfig":"606"},{"size":3535,"mtime":1614669419039,"results":"791","hashOfConfig":"606"},{"size":8201,"mtime":1623399161885,"results":"792","hashOfConfig":"606"},{"size":2350,"mtime":1620894459809,"results":"793","hashOfConfig":"606"},{"size":2132,"mtime":1620891865039,"results":"794","hashOfConfig":"606"},{"size":2984,"mtime":1620894401921,"results":"795","hashOfConfig":"606"},{"size":6090,"mtime":1621751896230,"results":"796","hashOfConfig":"606"},{"size":7187,"mtime":1621561977731,"results":"797","hashOfConfig":"606"},{"size":3253,"mtime":1621088268255,"results":"798","hashOfConfig":"606"},{"size":4427,"mtime":1621751969915,"results":"799","hashOfConfig":"606"},{"size":1606,"mtime":1621568552496,"results":"800","hashOfConfig":"606"},{"size":3249,"mtime":1621748215261,"results":"801","hashOfConfig":"606"},{"size":4360,"mtime":1623401999611,"results":"802","hashOfConfig":"606"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"806"},"wnyzxj",{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"806"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"806"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"826"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"826"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"806"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"826"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"843"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"806"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"806"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"806"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"806"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"806"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"877"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"806"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"806"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"806"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"806"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"806"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901","usedDeprecatedRules":"806"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"806"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"806"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"910","messages":"911","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"806"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"806"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"806"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"806"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"806"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"806"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"806"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"806"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"806"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"806"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"806"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"806"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"806"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"806"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"806"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"806"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"806"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"806"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"806"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985","usedDeprecatedRules":"806"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"988","usedDeprecatedRules":"806"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993","usedDeprecatedRules":"806"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"806"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1003","usedDeprecatedRules":"806"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"806"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"806"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"806"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"806"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"806"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1027","usedDeprecatedRules":"806"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1030","usedDeprecatedRules":"806"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"806"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1044","usedDeprecatedRules":"806"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"806"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"806"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1053","usedDeprecatedRules":"806"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056","usedDeprecatedRules":"806"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059","usedDeprecatedRules":"806"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"806"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1065","usedDeprecatedRules":"806"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"806"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071","usedDeprecatedRules":"806"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074","usedDeprecatedRules":"806"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077","usedDeprecatedRules":"806"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1082","usedDeprecatedRules":"806"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"806"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1088","usedDeprecatedRules":"806"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"806"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"806"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"806"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102","usedDeprecatedRules":"806"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"806"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"806"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"806"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118","usedDeprecatedRules":"806"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"806"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126","usedDeprecatedRules":"806"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129","usedDeprecatedRules":"806"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1132","usedDeprecatedRules":"806"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1135","usedDeprecatedRules":"806"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"806"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"806"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148","usedDeprecatedRules":"806"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"806"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"806"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"806"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"806"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"806"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"806"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"806"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"806"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"806"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1191","usedDeprecatedRules":"806"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194","usedDeprecatedRules":"806"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"806"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"806"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"806"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"806"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229","usedDeprecatedRules":"806"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"806"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"806"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"806"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"806"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"806"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"806"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"806"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"806"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"806"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"806"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"806"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"806"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"806"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1278","usedDeprecatedRules":"806"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"806"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1286","usedDeprecatedRules":"806"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1289","usedDeprecatedRules":"806"},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"806"},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"806"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"806"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304","usedDeprecatedRules":"806"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1307","usedDeprecatedRules":"806"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310","usedDeprecatedRules":"806"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1315"},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1318","usedDeprecatedRules":"1315"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1323","usedDeprecatedRules":"806"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"806"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1331","usedDeprecatedRules":"806"},{"filePath":"1332","messages":"1333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"806"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1336","usedDeprecatedRules":"806"},{"filePath":"1337","messages":"1338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"806"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"1342"},"1qgna0k",{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"1342"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"1342"},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"1342"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"1342"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"1342"},{"filePath":"1363","messages":"1364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"1342"},{"filePath":"1365","messages":"1366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1367","usedDeprecatedRules":"1342"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"1342"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"1342"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1377","messages":"1378","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1379","usedDeprecatedRules":"1342"},{"filePath":"1380","messages":"1381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1382","messages":"1383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"1342"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1389","messages":"1390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1391","messages":"1392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1395","messages":"1396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056","usedDeprecatedRules":"1342"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"1342"},{"filePath":"1401","messages":"1402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1403","messages":"1404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"1342"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"1342"},{"filePath":"1407","messages":"1408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"1342"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1412","messages":"1413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229","usedDeprecatedRules":"1342"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"1342"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"1342"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1286","usedDeprecatedRules":"1342"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1428","messages":"1429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1430","messages":"1431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1432","usedDeprecatedRules":"1342"},{"filePath":"1433","messages":"1434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"1342"},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"1342"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059","usedDeprecatedRules":"1342"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"1342"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"1342"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"1342"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"1342"},{"filePath":"1448","messages":"1449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"1342"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1452","messages":"1453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1454","messages":"1455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"1342"},{"filePath":"1458","messages":"1459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"1342"},{"filePath":"1460","messages":"1461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1278","usedDeprecatedRules":"1342"},{"filePath":"1464","messages":"1465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"1342"},{"filePath":"1466","messages":"1467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1470","usedDeprecatedRules":"1342"},{"filePath":"1471","messages":"1472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985","usedDeprecatedRules":"1342"},{"filePath":"1475","messages":"1476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"988","usedDeprecatedRules":"1342"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071","usedDeprecatedRules":"1342"},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"1342"},{"filePath":"1484","messages":"1485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486","usedDeprecatedRules":"1342"},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"1342"},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1491","messages":"1492","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1493","usedDeprecatedRules":"1342"},{"filePath":"1494","messages":"1495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1496","messages":"1497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"1342"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"1342"},{"filePath":"1500","messages":"1501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"1342"},{"filePath":"1502","messages":"1503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"1342"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"1342"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1512","messages":"1513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1514","messages":"1515","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1516","usedDeprecatedRules":"1342"},{"filePath":"1517","messages":"1518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"1342"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"1342"},{"filePath":"1524","messages":"1525","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"1342"},{"filePath":"1526","messages":"1527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"1342"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118","usedDeprecatedRules":"1342"},{"filePath":"1530","messages":"1531","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"1342"},{"filePath":"1532","messages":"1533","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"1342"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"1342"},{"filePath":"1536","messages":"1537","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1538","usedDeprecatedRules":"1342"},{"filePath":"1539","messages":"1540","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1135","usedDeprecatedRules":"1342"},{"filePath":"1541","messages":"1542","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194","usedDeprecatedRules":"1342"},{"filePath":"1543","messages":"1544","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1191","usedDeprecatedRules":"1342"},{"filePath":"1545","messages":"1546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1547","usedDeprecatedRules":"1342"},{"filePath":"1548","messages":"1549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"1342"},{"filePath":"1550","messages":"1551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"1342"},{"filePath":"1552","messages":"1553","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"1342"},{"filePath":"1554","messages":"1555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1556","messages":"1557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1558","usedDeprecatedRules":"1342"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1065","usedDeprecatedRules":"1342"},{"filePath":"1561","messages":"1562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"1342"},{"filePath":"1563","messages":"1564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1565","messages":"1566","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"1342"},{"filePath":"1567","messages":"1568","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148","usedDeprecatedRules":"1342"},{"filePath":"1569","messages":"1570","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1088","usedDeprecatedRules":"1342"},{"filePath":"1571","messages":"1572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1573","usedDeprecatedRules":"1342"},{"filePath":"1574","messages":"1575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"1342"},{"filePath":"1576","messages":"1577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"1342"},{"filePath":"1578","messages":"1579","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"1342"},{"filePath":"1580","messages":"1581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1582","messages":"1583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074","usedDeprecatedRules":"1342"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1586","messages":"1587","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1588","usedDeprecatedRules":"1342"},{"filePath":"1589","messages":"1590","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1591","usedDeprecatedRules":"1342"},{"filePath":"1592","messages":"1593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1594","usedDeprecatedRules":"1342"},{"filePath":"1595","messages":"1596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1597","messages":"1598","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"1342"},{"filePath":"1599","messages":"1600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"1342"},{"filePath":"1601","messages":"1602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"1342"},{"filePath":"1603","messages":"1604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1605","messages":"1606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"1342"},{"filePath":"1607","messages":"1608","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"1342"},{"filePath":"1609","messages":"1610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1611","messages":"1612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1613","messages":"1614","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1615","usedDeprecatedRules":"1342"},{"filePath":"1616","messages":"1617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1622","messages":"1623","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102","usedDeprecatedRules":"1342"},{"filePath":"1624","messages":"1625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077","usedDeprecatedRules":"1342"},{"filePath":"1628","messages":"1629","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1053","usedDeprecatedRules":"1342"},{"filePath":"1630","messages":"1631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1632","messages":"1633","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"1342"},{"filePath":"1634","messages":"1635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"1342"},{"filePath":"1636","messages":"1637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1638","messages":"1639","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"1342"},{"filePath":"1640","messages":"1641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"1342"},{"filePath":"1642","messages":"1643","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"1342"},{"filePath":"1644","messages":"1645","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"1342"},{"filePath":"1646","messages":"1647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1648","messages":"1649","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1003","usedDeprecatedRules":"1342"},{"filePath":"1650","messages":"1651","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"1342"},{"filePath":"1652","messages":"1653","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"1342"},{"filePath":"1654","messages":"1655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1656","messages":"1657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1658","usedDeprecatedRules":"1342"},{"filePath":"1659","messages":"1660","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"1342"},{"filePath":"1661","messages":"1662","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"1342"},{"filePath":"1663","messages":"1664","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"1342"},{"filePath":"1665","messages":"1666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1667","messages":"1668","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"1342"},{"filePath":"1669","messages":"1670","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993","usedDeprecatedRules":"1342"},{"filePath":"1671","messages":"1672","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1673","usedDeprecatedRules":"1342"},{"filePath":"1674","messages":"1675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1676","messages":"1677","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"1342"},{"filePath":"1678","messages":"1679","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"1342"},{"filePath":"1680","messages":"1681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"1342"},{"filePath":"1682","messages":"1683","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684","usedDeprecatedRules":"1342"},{"filePath":"1685","messages":"1686","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"1342"},{"filePath":"1687","messages":"1688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1689","messages":"1690","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"1342"},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1693","messages":"1694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"1342"},{"filePath":"1695","messages":"1696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1697","messages":"1698","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"1342"},{"filePath":"1699","messages":"1700","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1323","usedDeprecatedRules":"1701"},{"filePath":"1702","messages":"1703","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"1342"},{"filePath":"1704","messages":"1705","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"1342"},{"filePath":"1706","messages":"1707","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"1342"},{"filePath":"1708","messages":"1709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"1342"},{"filePath":"1710","messages":"1711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1712","messages":"1713","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"1342"},{"filePath":"1714","messages":"1715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1716","messages":"1717","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"1342"},{"filePath":"1718","messages":"1719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1720","messages":"1721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1722","messages":"1723","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"1342"},{"filePath":"1724","messages":"1725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1726","messages":"1727","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"1342"},{"filePath":"1728","messages":"1729","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"1342"},{"filePath":"1730","messages":"1731","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901","usedDeprecatedRules":"1342"},{"filePath":"1732","messages":"1733","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"1342"},{"filePath":"1734","messages":"1735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1736","messages":"1737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1738","messages":"1739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1740","messages":"1741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1742","messages":"1743","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1744","usedDeprecatedRules":"1342"},{"filePath":"1745","messages":"1746","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1747","usedDeprecatedRules":"1342"},{"filePath":"1748","messages":"1749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1750","messages":"1751","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1752","usedDeprecatedRules":"1342"},{"filePath":"1753","messages":"1754","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1755","usedDeprecatedRules":"1342"},{"filePath":"1756","messages":"1757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1758","messages":"1759","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1760","usedDeprecatedRules":"1342"},{"filePath":"1761","messages":"1762","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1763","usedDeprecatedRules":"1342"},{"filePath":"1764","messages":"1765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1766","messages":"1767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1342"},{"filePath":"1768","messages":"1769","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\前端学习\\devproject\\demo\\src\\index.js",["1770"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\n// router\nimport {BrowserRouter,Route,Switch,Redirect} from 'react-router-dom';\nimport routerConfig from '../src/routerComponent/routeConfig';\nReactDOM.render(\n\n<BrowserRouter>\n<div className='app'>\n  <Switch>\n    {\n      //路由表有数据才遍历路由数据\n      routerConfig.length > 0 && routerConfig.map((item, index) => {\n        if (item.exact) {\n          return <Route key={index} exact={item.exact} path={item.path} component={item.component}></Route>\n        } else {\n        }\n      })\n    }\n  </Switch>\n  <Redirect to = \"/UserLogin\"></Redirect>\n</div>\n</BrowserRouter>\n  ,document.getElementById('bootstrap-layout')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["1771","1772"],"D:\\前端学习\\devproject\\demo\\src\\reportWebVitals.js",[],"D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Aside\\AsideUI.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\LayoutUI.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\NavUI.jsx",["1773","1774","1775"],"import React,{Component} from 'react';\r\nimport style from './style.scss'\r\nimport ClockUI from '../component/clock/ClockUI'\r\n\r\n\r\n//导入Logo\r\nimport Logo from './Logo'\r\nimport Title from './Title'\r\n//导入UserNav\r\nimport UserNav from './UserNav'\r\nconst NavUI = (props) =>{\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light nav-self \">\r\n            <div className=\"collapse navbar-collapse  \" id=\"navbarNavDropdown\">\r\n                    <div className = \"col-1\">\r\n                    <Logo></Logo>\r\n                    </div>\r\n                    <div className = \"col-9\">\r\n                    <Title></Title>\r\n                    </div>\r\n                    \r\n                    <div className = \"col-2\">\r\n                    <UserNav></UserNav>\r\n\r\n                    </div>\r\n            \r\n            </div>\r\n            </nav>\r\n       \r\n);\r\n}\r\nexport default NavUI;","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\component\\clock\\ClockUI.jsx",["1776"],"import React,{ Component} from 'react'\r\nimport style from './clock.scss'\r\n\r\nexport default class ClockUI extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            time: new Date()\r\n        }\r\n        setInterval(function(){\r\n \r\n            this.setState({\r\n                time:new Date()\r\n            });\r\n    \r\n            }.bind(this),1000);\r\n    }\r\n\r\n    //更新时间\r\n    render(){\r\n        return(\r\n            <span className = \"clock-container\">{this.state.time.toLocaleDateString()} \r\n            {this.state.time.toLocaleTimeString()}</span>\r\n        );\r\n    }\r\n\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\index.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\index.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\ModelManagement\\index.jsx",["1777"],"import React,{Component} from 'react'\r\n\r\nexport default class ModelManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <h1>\r\n                ModelManagement\r\n            </h1>\r\n        );\r\n    }\r\n}",["1778","1779"],"D:\\前端学习\\devproject\\demo\\src\\pages\\ImageProcessing\\index.jsx",["1780"],"import React,{Component} from 'react'\r\n\r\nexport default class ImageProcessing extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <h1>\r\n                ImageProcessing\r\n            </h1>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\routerComponent\\routeConfig.js",["1781"],"//布局组件\r\nimport LayoutUI from '../layoutComponent/LayoutUI';\r\n\r\n//引入组件\r\nimport DataStorage from '../pages/DataStorage/index';\r\nimport DataProcessing from '../pages/DataProcessing/index';\r\n// 模型训练\r\nimport TagManagement from '../pages/TagManagement/index';\r\nimport DatasetConstruct from '../pages/DatasetConstruct/index';\r\nimport ModelTraining from '../pages/ModelTtrainning/index';\r\nimport ModelCheck from '../pages/ModelCheck/index';\r\nimport AlgorithmManagement from '../pages/AlgorithmManagement/index';\r\nimport Modelvaluate from '../pages/Modelvaluate/index';\r\n// 模型应用\r\nimport AbnormalPerception from '../pages/AbnormalPerception/index';\r\nimport StateEvaluate from '../pages/StateEvaluate/index';\r\nimport Troubleshooting from '../pages/Troubleshooting/index';\r\nimport LifePrediction from '../pages/LifePrediction/index';\r\n// 数据挖掘\r\nimport Preprocessing from '../pages/Preprocessing/index'; //数据处理;\r\nimport FeatureExtraction from '../pages/FeatureExtraction/index';\r\nimport FeatureScreening from '../pages/FeatureScreening/index';\r\nimport TableTimeFrequency from '../pages/TableTimeFrequency/index';\r\n\r\n// 可视化\r\nimport Visualization from '../pages/Visualization';\r\n// 登录\r\nimport UserIndex from '../pages/UserLogin/index';\r\n// 操作选择\r\nimport ActionChoose from '../pages/ActionChoose/index';\r\n\r\nimport {Link} from 'react-router-dom';\r\nconst routeConfig =[\r\n  {\r\n    path:'/UserLogin',\r\n    title:\"登录\",\r\n    exact:true,\r\n    component:UserIndex,\r\n    children:[]\r\n  },\r\n  {\r\n    path:'/ActionChoose',\r\n    title:\"操作选择\",\r\n    exact:true,\r\n    component:ActionChoose,\r\n    children:[]\r\n  },\r\n  {\r\n   \r\n    path:\"/Visualization\",\r\n    title:\"可视化系统\",\r\n    component:Visualization,\r\n     exact:true,\r\n     children:[]\r\n  },\r\n    {\r\n        //装备远程运维与健康管理系统\r\n        path:'/Devproject',\r\n        // component:ContentContainer,\r\n        title:\"桨轴传动系统故障诊断软件\",\r\n        component:LayoutUI,\r\n        exact:true,\r\n        children:[\r\n            {\r\n                path:'/Devproject/DataStorage',\r\n                component:DataStorage,\r\n                title:\"数据存储管理\",\r\n                exact:false,\r\n                img:(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-house-door\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\"/>\r\n                    </svg>\r\n                ),\r\n                \r\n            },\r\n            {\r\n                path:\"/Devproject/DataProcessing\",\r\n                component:DataProcessing,\r\n                title:\"数据处理流程\",\r\n                exact:false,\r\n                img:(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-layout-wtf\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M5 1v8H1V1h4zM1 0a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1H1zm13 2v5H9V2h5zM9 1a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9zM5 13v2H3v-2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H3zm12-1v2H9v-2h6zm-6-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H9z\"/>\r\n                  </svg>\r\n                ),\r\n\r\n            },\r\n\r\n            {\r\n                path:\"/Devproject/ModelTtrainning\",\r\n                // component:ModelTtrainning,\r\n                title:\"模型训练\",\r\n                // exact:false,\r\n                img:(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-x-diamond\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M7.987 16a1.526 1.526 0 0 1-1.07-.448L.45 9.082a1.531 1.531 0 0 1 0-2.165L6.917.45a1.531 1.531 0 0 1 2.166 0l6.469 6.468A1.526 1.526 0 0 1 16 8.013a1.526 1.526 0 0 1-.448 1.07l-6.47 6.469A1.526 1.526 0 0 1 7.988 16zM7.639 1.17L4.766 4.044 8 7.278l3.234-3.234L8.361 1.17a.51.51 0 0 0-.722 0zM8.722 8l3.234 3.234 2.873-2.873c.2-.2.2-.523 0-.722l-2.873-2.873L8.722 8zM8 8.722l-3.234 3.234 2.873 2.873c.2.2.523.2.722 0l2.873-2.873L8 8.722zM7.278 8L4.044 4.766 1.17 7.639a.511.511 0 0 0 0 .722l2.874 2.873L7.278 8z\"/>\r\n                </svg>\r\n                ),\r\n                children:[\r\n                    { title: '标签管理',\r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-seam\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d={\"M0 3.5A.5.5 0 0 1 .5 3h15a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-2zm0 5A.5.5 0 0 1 .5 8h15a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-1zm0 4a.5.5 0 0 1 .5-.5h15a.5.5 0 0 1 0 1H.5a.5.5 0 0 1-.5-.5z\"}/>\r\n                    </svg>\r\n                    ),\r\n                     path: '/Devproject/ModelTtrainning/TagManagement' ,component:TagManagement},\r\n                    { title: '数据集构建', \r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-ui-checks\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M5 2V0H0v5h2v6H0v5h5v-2h6v2h5v-5h-2V5h2V0h-5v2H5zm6 1v2h2v6h-2v2H5v-2H3V5h2V3h6zm1-2h3v3h-3V1zm3 11v3h-3v-3h3zM4 15H1v-3h3v3zM1 4V1h3v3H1z\"/>\r\n                        </svg>),\r\n                    path: '/Devproject/ModelTtrainning/DatasetConstruct', component:DatasetConstruct },\r\n                    { title: '模型训练',\r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-diamond\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M7.987 16a1.526 1.526 0 0 1-1.07-.448L.45 9.082a1.531 1.531 0 0 1 0-2.165L6.917.45a1.531 1.531 0 0 1 2.166 0l6.469 6.468A1.526 1.526 0 0 1 16 8.013a1.526 1.526 0 0 1-.448 1.07l-6.47 6.469A1.526 1.526 0 0 1 7.988 16zM7.639 1.17L4.766 4.044 8 7.278l3.234-3.234L8.361 1.17a.51.51 0 0 0-.722 0zM8.722 8l3.234 3.234 2.873-2.873c.2-.2.2-.523 0-.722l-2.873-2.873L8.722 8zM8 8.722l-3.234 3.234 2.873 2.873c.2.2.523.2.722 0l2.873-2.873L8 8.722zM7.278 8L4.044 4.766 1.17 7.639a.511.511 0 0 0 0 .722l2.874 2.873L7.278 8z\"/>\r\n                    </svg>\r\n                    ),\r\n                     path: '/Devproject/ModelTtrainning/ModelTraining',component:ModelTraining },\r\n                    { title: '模型校验',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-symmetry-vertical\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M7 2.5a.5.5 0 0 0-.939-.24l-6 11A.5.5 0 0 0 .5 14h6a.5.5 0 0 0 .5-.5v-11zm2.376-.485a.5.5 0 0 1 .563.246l6 11A.5.5 0 0 1 15.5 14h-6a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .376-.485zM10 4.461V13h4.658L10 4.46z\"/>\r\n                  </svg>),\r\n                     path: '/Devproject/ModelTtrainning/ModelCheck',component: ModelCheck},\r\n                    {title:'算法管理',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-vector-pen\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M10.646.646a.5.5 0 0 1 .708 0l4 4a.5.5 0 0 1 0 .708l-1.902 1.902-.829 3.313a1.5 1.5 0 0 1-1.024 1.073L1.254 14.746 4.358 4.4A1.5 1.5 0 0 1 5.43 3.377l3.313-.828L10.646.646zm-1.8 2.908l-3.173.793a.5.5 0 0 0-.358.342l-2.57 8.565 8.567-2.57a.5.5 0 0 0 .34-.357l.794-3.174-3.6-3.6z\"/>\r\n                    <path fill-rule=\"evenodd\" d=\"M2.832 13.228L8 9a1 1 0 1 0-1-1l-4.228 5.168-.026.086.086-.026z\"/>\r\n                  </svg>),\r\n                    path:'/Devproject/ModelTtrainning/AlgorithmManagement',component:AlgorithmManagement},\r\n                    {title:'模型评估',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-ui-checks\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-1zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2H2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708l-2 2zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708l-2 2zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-1zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\r\n                  </svg>),\r\n                    path:'/Devproject/ModelTtrainning/Modelvaluate',component:Modelvaluate},\r\n                  ],\r\n            },\r\n        \r\n            {\r\n                path:\"/Devproject/ModelTapplication\",\r\n                // component:ModelManagement,\r\n                title:'模型应用',\r\n                img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-slack\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3.362 10.11c0 .926-.756 1.681-1.681 1.681S0 11.036 0 10.111C0 9.186.756 8.43 1.68 8.43h1.682v1.68zm.846 0c0-.924.756-1.68 1.681-1.68s1.681.756 1.681 1.68v4.21c0 .924-.756 1.68-1.68 1.68a1.685 1.685 0 0 1-1.682-1.68v-4.21zM5.89 3.362c-.926 0-1.682-.756-1.682-1.681S4.964 0 5.89 0s1.68.756 1.68 1.68v1.682H5.89zm0 .846c.924 0 1.68.756 1.68 1.681S6.814 7.57 5.89 7.57H1.68C.757 7.57 0 6.814 0 5.89c0-.926.756-1.682 1.68-1.682h4.21zm6.749 1.682c0-.926.755-1.682 1.68-1.682.925 0 1.681.756 1.681 1.681s-.756 1.681-1.68 1.681h-1.681V5.89zm-.848 0c0 .924-.755 1.68-1.68 1.68A1.685 1.685 0 0 1 8.43 5.89V1.68C8.43.757 9.186 0 10.11 0c.926 0 1.681.756 1.681 1.68v4.21zm-1.681 6.748c.926 0 1.682.756 1.682 1.681S11.036 16 10.11 16s-1.681-.756-1.681-1.68v-1.682h1.68zm0-.847c-.924 0-1.68-.755-1.68-1.68 0-.925.756-1.681 1.68-1.681h4.21c.924 0 1.68.756 1.68 1.68 0 .926-.756 1.681-1.68 1.681h-4.21z\"/>\r\n              </svg>),\r\n                exact:false,\r\n                children: [\r\n                    { title: '异常感知',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-shield-exclamation\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M5.338 1.59a61.44 61.44 0 0 0-2.837.856.481.481 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.725 10.725 0 0 0 2.287 2.233c.346.244.652.42.893.533.12.057.218.095.293.118a.55.55 0 0 0 .101.025.615.615 0 0 0 .1-.025c.076-.023.174-.061.294-.118.24-.113.547-.29.893-.533a10.726 10.726 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.775 11.775 0 0 1-2.517 2.453 7.159 7.159 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7.158 7.158 0 0 1-1.048-.625 11.777 11.777 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 62.456 62.456 0 0 1 5.072.56z\"/>\r\n                    <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\r\n                  </svg>),\r\n                   path: '/Devproject/ModelTapplication/AbnormalPerception' ,component:AbnormalPerception},\r\n                    { title: '状态评估',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-thermometer-half\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 1.75a.25.25 0 0 1 .25.25v9.02a1.5 1.5 0 1 1-.5 0V2A.25.25 0 0 1 8 1.75z\"/>\r\n                    <path d=\"M6 2a2 2 0 1 1 4 0v7.627a3.5 3.5 0 1 1-4 0V2zm2-1a1 1 0 0 0-1 1v7.901a.5.5 0 0 1-.25.433A2.499 2.499 0 0 0 8 15a2.5 2.5 0 0 0 1.25-4.666.5.5 0 0 1-.25-.433V2a1 1 0 0 0-1-1z\"/>\r\n                  </svg>) ,\r\n                  path: '/Devproject/ModelTapplication/StateEvaluate',component:StateEvaluate },\r\n                    { title: '故障诊断',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-tools\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M1 0L0 1l2.2 3.081a1 1 0 0 0 .815.419h.07a1 1 0 0 1 .708.293l2.675 2.675-2.617 2.654A3.003 3.003 0 0 0 0 13a3 3 0 1 0 5.878-.851l2.654-2.617.968.968-.305.914a1 1 0 0 0 .242 1.023l3.356 3.356a1 1 0 0 0 1.414 0l1.586-1.586a1 1 0 0 0 0-1.414l-3.356-3.356a1 1 0 0 0-1.023-.242L10.5 9.5l-.96-.96 2.68-2.643A3.005 3.005 0 0 0 16 3c0-.269-.035-.53-.102-.777l-2.14 2.141L12 4l-.364-1.757L13.777.102a3 3 0 0 0-3.675 3.68L7.462 6.46 4.793 3.793a1 1 0 0 1-.293-.707v-.071a1 1 0 0 0-.419-.814L1 0zm9.646 10.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708zM3 11l.471.242.529.026.287.445.445.287.026.529L5 13l-.242.471-.026.529-.445.287-.287.445-.529.026L3 15l-.471-.242L2 14.732l-.287-.445L1.268 14l-.026-.529L1 13l.242-.471.026-.529.445-.287.287-.445.529-.026L3 11z\"/>\r\n                  </svg>),\r\n                   path: '/Devproject/ModelTapplication/Troubleshooting' ,component:Troubleshooting},\r\n                    { title: '寿命预测',\r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"/>\r\n                        </svg>\r\n                    ),\r\n                    path: '/Devproject/ModelTapplication/LifePrediction', component:LifePrediction},\r\n                  ],\r\n            },\r\n            {\r\n                path:\"/Devproject/DataMining\",\r\n                // component:DataMining,\r\n                title:\"数据挖掘\",\r\n                exact:false,\r\n                img:(\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-geo\" viewBox=\"0 0 16 16\">\r\n                  <path fill-rule=\"evenodd\" d=\"M8 1a3 3 0 1 0 0 6 3 3 0 0 0 0-6zM4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999zm2.493 8.574a.5.5 0 0 1-.411.575c-.712.118-1.28.295-1.655.493a1.319 1.319 0 0 0-.37.265.301.301 0 0 0-.057.09V14l.002.008a.147.147 0 0 0 .016.033.617.617 0 0 0 .145.15c.165.13.435.27.813.395.751.25 1.82.414 3.024.414s2.273-.163 3.024-.414c.378-.126.648-.265.813-.395a.619.619 0 0 0 .146-.15.148.148 0 0 0 .015-.033L12 14v-.004a.301.301 0 0 0-.057-.09 1.318 1.318 0 0 0-.37-.264c-.376-.198-.943-.375-1.655-.493a.5.5 0 1 1 .164-.986c.77.127 1.452.328 1.957.594C12.5 13 13 13.4 13 14c0 .426-.26.752-.544.977-.29.228-.68.413-1.116.558-.878.293-2.059.465-3.34.465-1.281 0-2.462-.172-3.34-.465-.436-.145-.826-.33-1.116-.558C3.26 14.752 3 14.426 3 14c0-.599.5-1 .961-1.243.505-.266 1.187-.467 1.957-.594a.5.5 0 0 1 .575.411z\"/>\r\n                </svg>\r\n                ),\r\n                children: [\r\n                      { title: '数据预处理', path: '/Devproject/DataMining/Preprocessing' ,\r\n                      component:Preprocessing,\r\n                        exact:false,\r\n                        img:(\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-file-spreadsheet\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm2-1a1 1 0 0 0-1 1v4h10V2a1 1 0 0 0-1-1H4zm9 6h-3v2h3V7zm0 3h-3v2h3v-2zm0 3h-3v2h2a1 1 0 0 0 1-1v-1zm-4 2v-2H6v2h3zm-4 0v-2H3v1a1 1 0 0 0 1 1h1zm-2-3h2v-2H3v2zm0-3h2V7H3v2zm3-2v2h3V7H6zm3 3H6v2h3v-2z\"/>\r\n                        </svg>\r\n                        ),\r\n\r\n                    },\r\n                      { title: '特征提取', \r\n                      img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-intersect\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M0 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-2H2a2 2 0 0 1-2-2V2zm5 10v2a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2v5a2 2 0 0 1-2 2H5zm6-8V2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h2V6a2 2 0 0 1 2-2h5z\"/>\r\n                      </svg>\r\n                      ),\r\n                      path: '/Devproject/DataMining/FeatureExtraction' ,component:FeatureExtraction},\r\n                      { title: '特征筛选', \r\n                      img:(\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-inboxes\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M4.98 1a.5.5 0 0 0-.39.188L1.54 5H6a.5.5 0 0 1 .5.5 1.5 1.5 0 0 0 3 0A.5.5 0 0 1 10 5h4.46l-3.05-3.812A.5.5 0 0 0 11.02 1H4.98zm9.954 5H10.45a2.5 2.5 0 0 1-4.9 0H1.066l.32 2.562A.5.5 0 0 0 1.884 9h12.234a.5.5 0 0 0 .496-.438L14.933 6zM3.809.563A1.5 1.5 0 0 1 4.981 0h6.038a1.5 1.5 0 0 1 1.172.563l3.7 4.625a.5.5 0 0 1 .105.374l-.39 3.124A1.5 1.5 0 0 1 14.117 10H1.883A1.5 1.5 0 0 1 .394 8.686l-.39-3.124a.5.5 0 0 1 .106-.374L3.81.563zM.125 11.17A.5.5 0 0 1 .5 11H6a.5.5 0 0 1 .5.5 1.5 1.5 0 0 0 3 0 .5.5 0 0 1 .5-.5h5.5a.5.5 0 0 1 .496.562l-.39 3.124A1.5 1.5 0 0 1 14.117 16H1.883a1.5 1.5 0 0 1-1.489-1.314l-.39-3.124a.5.5 0 0 1 .121-.393zm.941.83l.32 2.562a.5.5 0 0 0 .497.438h12.234a.5.5 0 0 0 .496-.438l.32-2.562H10.45a2.5 2.5 0 0 1-4.9 0H1.066z\"/>\r\n                    </svg>),\r\n                    path: '/Devproject/DataMining/FeatureScreening',component:FeatureScreening },\r\n                      { title: '时频图像转换',\r\n                      img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-shuffle\" viewBox=\"0 0 16 16\">\r\n                      <path fill-rule=\"evenodd\" d=\"M0 3.5A.5.5 0 0 1 .5 3H1c2.202 0 3.827 1.24 4.874 2.418.49.552.865 1.102 1.126 1.532.26-.43.636-.98 1.126-1.532C9.173 4.24 10.798 3 13 3v1c-1.798 0-3.173 1.01-4.126 2.082A9.624 9.624 0 0 0 7.556 8a9.624 9.624 0 0 0 1.317 1.918C9.828 10.99 11.204 12 13 12v1c-2.202 0-3.827-1.24-4.874-2.418A10.595 10.595 0 0 1 7 9.05c-.26.43-.636.98-1.126 1.532C4.827 11.76 3.202 13 1 13H.5a.5.5 0 0 1 0-1H1c1.798 0 3.173-1.01 4.126-2.082A9.624 9.624 0 0 0 6.444 8a9.624 9.624 0 0 0-1.317-1.918C4.172 5.01 2.796 4 1 4H.5a.5.5 0 0 1-.5-.5z\"/>\r\n                      <path d=\"M13 5.466V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192zm0 9v-3.932a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192z\"/>\r\n                    </svg>),\r\n                     path: '/Devproject/DataMining/TableTimeFrequency',component:TableTimeFrequency },\r\n                    ]\r\n                 \r\n\r\n            },\r\n            // {\r\n            //   path:\"/Visualization\",\r\n            //   title:\"可视化窗口\",\r\n            //   component:Visualization,\r\n            //   exact:false,\r\n            //   img:(\r\n            //     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-cast\" viewBox=\"0 0 16 16\">\r\n            //   <path d=\"m7.646 9.354-3.792 3.792a.5.5 0 0 0 .353.854h7.586a.5.5 0 0 0 .354-.854L8.354 9.354a.5.5 0 0 0-.708 0z\"/>\r\n            //   <path d=\"M11.414 11H14.5a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h3.086l-1 1H1.5A1.5 1.5 0 0 1 0 10.5v-7A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v7a1.5 1.5 0 0 1-1.5 1.5h-2.086l-1-1z\"/>\r\n            // </svg>\r\n            //   ),\r\n            // }\r\n          \r\n        ]\r\n    },\r\n   \r\n];\r\n\r\n\r\nexport default routeConfig;","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\contentContainer\\ContentContainer.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\index.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataMining\\index.jsx",["1782"],"import React,{Component} from 'react'\r\n\r\nexport default class DataMining extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <h1>\r\n                DataMining\r\n            </h1>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\ServiceChoose.jsx",["1783","1784","1785","1786"],"import React,{Component} from 'react';\r\nimport style from './style.scss'\r\n\r\n\r\nimport {NavLink,Redirect} from 'react-router-dom'\r\nimport routeConfig from '@/routerComponent/routeConfig.js'\r\n\r\nexport default class ServiceChoose extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    // onClick =(e)=>{\r\n    //     console.log(e,'e')\r\n    // }\r\n  \r\n    render(){\r\n         return(\r\n        <ul class=\"nav nav-tabs narbar-nav-self1\" id=\"myTab\" role=\"tablist\">\r\n            {\r\n                routeConfig.map((item,index)=>{\r\n                    if(item.children&&item.children.length>0){\r\n                        return(\r\n                            <NavLink key ={index} to={item.path}  exact ={true} \r\n                            className=\"nav-link link-container \"\r\n                                activeClassName =\"active-navlink\"\r\n                                id=\"v-pills-home-tab\" data-toggle=\"pill\"  role=\"tab\" aria-controls=\"v-pills-home\" >\r\n                                    <li className=\"nav-item\" role=\"presentation\">\r\n                                        <span >\r\n                                            {item.title}</span>\r\n                                    </li>\r\n                            </NavLink>\r\n        \r\n                            )\r\n                    }\r\n                \r\n                })\r\n            }\r\n            {/* <Redirect to={\"/Devproject\"}></Redirect> */}\r\n\r\n  \r\n        </ul>\r\n         );\r\n    }\r\n}",["1787","1788"],"D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\UserNav.jsx",["1789","1790","1791","1792","1793"],"import React,{Component } from 'react'\r\nimport style from './style.scss'\r\n\r\nexport default class UserNav extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ul className=\"navbar-nav narbar-nav-self2\">\r\n            <li className=\"nav-item \">\r\n\r\n                <a className=\"nav-link link-container\" href=\"#\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-twitch\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3.857 0L1 2.857v10.286h3.429V16l2.857-2.857H9.57L14.714 8V0H3.857zm9.714 7.429l-2.285 2.285H9l-2 2v-2H4.429V1.143h9.142v6.286z\"/>\r\n                <path d=\"M11.857 3.143h-1.143V6.57h1.143V3.143zm-3.143 0H7.571V6.57h1.143V3.143z\"/>\r\n                </svg>\r\n                  Messages</a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link link-container\" href=\"#\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-lines-fill\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm7 1.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm2 9a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5z\"/>\r\n                    </svg>\r\n                </a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle link-container\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-nut-fill\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M4.58 1a1 1 0 0 0-.868.504l-3.429 6a1 1 0 0 0 0 .992l3.429 6A1 1 0 0 0 4.58 15h6.84a1 1 0 0 0 .868-.504l3.428-6a1 1 0 0 0 0-.992l-3.428-6A1 1 0 0 0 11.42 1H4.58zm5.018 9.696a3 3 0 1 0-3-5.196 3 3 0 0 0 3 5.196z\"/>\r\n                    </svg>\r\n                </a>\r\n\r\n            </li>\r\n            </ul>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\Logo.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\contentContainer\\Content.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Image.jsx",["1794","1795"],"import React, { Component, PureComponent } from 'react';\r\n\r\n// 组件\r\nimport TreeIndex from './TreeIndex/index';\r\nimport Table1 from './Table1/index'\r\nimport Table2 from './Table2/index'\r\n\r\n// store\r\nimport store from '../../Store/index'\r\n\r\n// antd\r\nimport { Row, Col } from 'antd';\r\n\r\n// style\r\nimport './index.scss'\r\n\r\n// 导入方法\r\nimport {_treeInitial} from './TreeIndex/functionList'\r\n\r\nexport default class Image extends Component {\r\n\r\n  static displayName = 'Image';\r\n  static contextTypes = {\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      treeKey: '',  //当前选中的树节点\r\n    };\r\n    \r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    _treeInitial()\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n   <Row gutter = {16}>\r\n    <Col span={4}>\r\n      <div  className =\"treeIndex\">\r\n      <TreeIndex ></TreeIndex>\r\n\r\n      </div>\r\n    </Col>\r\n      <Col span={20}> \r\n      <div  className = \"table1\">\r\n      <Table1/>    \r\n      </div>\r\n      <div  className = \"table2\">\r\n      <Table2></Table2>\r\n        \r\n        </div> \r\n      </Col>\r\n  </Row>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\index.js",["1796","1797"],"import React, { Component } from 'react';\r\n// antd\r\nimport {Button, Table, Tag, Space ,Modal,message,Pagination} from 'antd';\r\n// columns\r\nimport tableColumns from './tableConfig'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../index.scss'\r\n// 组件\r\nimport AddImage from './TabTable/components/AddImage'\r\n// 方法\r\nimport {_checkZip} from '../Table1/TabTable/components/functionList'\r\nimport {_deleteImage,_refresh,_imgList} from './TabTable/components/functionList'\r\nclass  Table2 extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      //表格勾选的id\r\n      selectedRowKeys: [],\r\n      tableData:store.getState().DataStoragereducer.imagedata.zipTable,\r\n      visible:false,\r\n      content:null,\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n  handleStoreChange = ()=>{\r\n    this.setState({\r\n      tableData:store.getState().DataStoragereducer.imagedata.zipTable,\r\n\r\n    })\r\n    let content = store.getState().DataStoragereducer.ModalContent\r\n    if(content !=null){\r\n      this.setState({\r\n        visible:true,\r\n        content:content,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  messageFunc =(flag,text) =>{\r\n    if(flag){\r\n      message.success(`${text}成功！`)\r\n    }else{\r\n      message.error(`${text}失败！`)\r\n    }\r\n  }\r\n\r\n// 刷新\r\n  refresh =()=>{\r\n    _refresh();\r\n  }\r\n\r\n  // 批量删除\r\n  deleteImg =()=>{\r\n    let e =_deleteImage(this.state.selectedRowKeys)\r\n    this.messageFunc(e,'删除')\r\n  }\r\n\r\n  /**\r\n   * 表格选择\r\n   */\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  onClose = ()=>{\r\n    this.setState({\r\n      visible:false\r\n    })\r\n    const action = {\r\n      type:\"cancelView\"\r\n    }\r\n    store.dispatch(action)\r\n  }\r\n  // 打开弹窗\r\n  onOpen =(a)=>{\r\n    // console.log(a)\r\n    this.setState({\r\n      visible:true,\r\n      // content:a\r\n    })\r\n  }\r\n// 添加图片\r\naddImg = ()=>{\r\n\r\n}\r\n// 翻页器\r\npageonChange=(page, pageSize)=>{\r\n  // console.log(page, pageSize,'page, pageSize')\r\n  _imgList(page)\r\n}\r\n\r\n  render(){\r\n    const { tableData,visible,selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n      return(\r\n        <div style ={{margin:\"0 5px 0 5px\"}}>\r\n          <Space>\r\n          <Button className = \"normalBtn\" onClick = {this.refresh} > 刷新 </Button>\r\n          <AddImage onClose = {this.onClose}></AddImage>\r\n          <Button  className = \"deleteBtn\" type =\"danger\" onClick = {this.deleteImg} > 批量删除</Button>\r\n          </Space>\r\n        <Table \r\n           rowSelection={{\r\n            ...rowSelection,\r\n          }}\r\n          rowKey = {\"id\"}\r\n          pagination = {false}\r\n        columns={tableColumns} dataSource={tableData} />\r\n          <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n        <Modal\r\n          title=\"查看图片\" \r\n          visible ={visible}\r\n          width = {320}\r\n          footer={null}\r\n          onCancel = {this.onClose}\r\n        >\r\n          <div id = \"imgModal\">\r\n            {this.state.content}\r\n            </div>          \r\n      \r\n        </Modal>\r\n    </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Table2;","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\index.js",["1798","1799"],"import React, { Component } from 'react';\r\n\r\n// antd\r\nimport {Button, Table, Tag, Space ,Modal} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n// columns\r\nimport tableColumns from './tableConfig'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// 组件\r\nimport UploadFile from './TabTable/components/UploadFile.jsx';\r\n// style\r\nimport '../index.scss'\r\n\r\nclass  Table1 extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      //表格勾选的id\r\n      selectedRowKeys: [],\r\n      dataSource: store.getState().DataStoragereducer.imagedata.imageTable,\r\n      visible:false,\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.imagedata.imageTable,\r\n      treeKey: store.getState().DataStoragereducer.treeKey,\r\n    })\r\n  }\r\n    /**\r\n   * 打开输入数据集信息弹窗\r\n   */\r\n   onOpen=()=>{\r\n    this.setState({\r\n      visible:true,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭弹窗\r\n   */\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {dataSource,visible,treeKey} = this.state;\r\n    return(\r\n      <div style ={{margin:\"0 5px 0 5px\"}}>\r\n      <Button className = \"normalBtn\" onClick = {this.onOpen}  icon={<UploadOutlined />}> 上传文件</Button>\r\n      <Table columns={tableColumns} dataSource={dataSource} />\r\n      <Modal\r\n      destroyOnClose  = {true}\r\n        title=\"上传文件\" \r\n        visible ={visible}\r\n        width = {320}\r\n        onCancel = {this.onClose}\r\n        footer={null}\r\n      >\r\n        <UploadFile onClose ={this.onClose} treeKey ={treeKey} disabled={false}></UploadFile>\r\n      </Modal>\r\n  </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default Table1;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\EditDialog.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\CheckZip.jsx",["1800"],"import React,{Component} from 'react'\r\n//antd\r\nimport {Button} from 'antd'\r\nimport { _checkZip } from './functionList';\r\n\r\nexport default class CheckZip extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    CheckZip = ()=>{\r\n        let record =  this.props.onClick()\r\n        if(record){\r\n            // console.log(record,'record111')\r\n            let datasetName = record.name\r\n            let id = record.id\r\n            _checkZip(1,id,datasetName)\r\n        }\r\n   }\r\n\r\n    render(){\r\n        return(\r\n            <div style={styles.CheckZip}>\r\n                 <Button\r\n                  size=\"small\"\r\n                  onClick = {this.CheckZip}\r\n                >\r\n                  {/* {this.props.btnText} */}\r\n                  查看\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    CheckZip: {\r\n      display: 'inline-block',\r\n      marginRight: '5px',\r\n    },\r\n  };\r\n  ","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\DeleteBalloon.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\AddImage.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\reducer.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\other.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Store\\IDreducer.js",[],["1801","1802"],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\store\\actionType.js",[],"D:\\前端学习\\devproject\\demo\\src\\Common.js",["1803"],"const headerToken ='Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyTmFtZSI6InJvb3QiLCJleHAiOjE1NjkxNzM4OTR9.AajK9v0wzR3w4uu85rtHkAgvhmgEVfZVFiu2pGN7odkgLb4uQtxYbuaWiJXZmJ4pO3bxACUjFOA0i92RBFqcQw'\r\n\r\n\r\nconst hostPort ='http://192.168.1.173:9001/'\r\n\r\nexport {headerToken,hostPort}\r\n//  shuju.flag == true\r\n\r\n// 获取当前日期\r\nexport function _getDate(){\r\n    var date = new Date();\r\n    var year = date.getFullYear(); //获取年份\r\n    var month  = date.getMonth() + 1  ; //获取月份 但是返回的月份会小一月\r\n    var dates = date.getDate(); //获取日期\r\n    var arr  = ['周日','周一','周二','周三', '周四', '周五' , '周六'] \r\n    var week = date.getDay() ; //获取星期几，但是返回的是阿拉伯数字，且周日为0\r\n    var hours = date.getHours(); //获取小时\r\n    var minutes = date.getMinutes(); //获取分钟\r\n\r\n    return `${year}-${month}-${dates} ${arr[week]} ${hours}:${minutes}`\r\n} \r\n\r\n// 返回当前时分秒 格式 08:08:08\r\nexport function _getTime(){\r\n    var time = new Date();\r\n    var h = time.getHours(); //获取小时\r\n    h = h < 10 ? \"0\" + h : h; //小于10填充0\r\n    var m = time.getMinutes(); //获取分钟\r\n    m = m < 10 ? \"0\" + m : m; //小于10填充0\r\n    var s = time.getSeconds(); //获取分钟\r\n    s = s < 10 ? \"0\" + s : s; //小于10填充0\r\n    return `${h}:${m}:${s}`\r\n}\r\n\r\n// 倒计时组件\r\n// 不能用时分秒相减，否则会出现负数\r\nexport function _countDown(time){\r\n    var nowTime = +new Date(); //返回的是当前时间的总毫秒数\r\n    var inputTime = +new Date(time) ; // 返回的是用户输入时间的总毫秒数\r\n    var times = (inputTime - nowTime ) / 1000 ; //times 是剩余时间的总秒数\r\n    var d = parseInt(times/60/60/24) ; //计算天数\r\n    var h = parseInt(times/60/60%24) ; //计算小时\r\n    var m = parseInt(times/60%60) ; //计算分钟\r\n    var s = parseInt(times%60) ; //计算当前秒数\r\n    h = h < 10 ? \"0\" + h : h; //小于10填充0\r\n    m = m < 10 ? \"0\" + m : m; //小于10填充0\r\n    s = s < 10 ? \"0\" + s : s; //小于10填充0\r\n    return `${h}:${m}:${s}`\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\index.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\TreeIndex\\functionList.jsx",["1804","1805","1806"],"import $ from 'jquery'\r\nimport {headerToken,hostPort} from '@/Common'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 树节点初始化\r\n */\r\nexport function _treeInitial(){\r\n    let dataConfig10\r\n    $.ajax({\r\n      type:\"get\",\r\n      url:hostPort+\"equip/menu/buildMenu\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){ \r\n         dataConfig10=res.data[0]\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    if(dataConfig10){\r\n        let dataConfig2=JSON.parse(JSON.stringify(dataConfig10).replace(/\"menuName\"/g,' \"title\"'))  ;\r\n        let dataConfig3=JSON.parse(JSON.stringify(dataConfig2).replace(/\"id\"/g,' \"key\"'))  ;\r\n        let dataConfig1=JSON.parse(JSON.stringify(dataConfig3).replace(/\"child\"/g,' \"children\"'))   ;\r\n        const action ={\r\n          type:'ImageComponentDidMount',\r\n          dataConfig:dataConfig1\r\n        }\r\n        store.dispatch(action)\r\n    }\r\n}\r\n\r\n/**\r\n * 树节点选择\r\n * @param {*} id \r\n */\r\nexport  function _onSelect(id,label){\r\n    let tableList= []\r\n    let receiveData\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/image/selectPage\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify(\r\n          {\r\n            \"pageNo\": 1,\r\n            \"pageSize\": 10,\r\n            \"queryParameter\": {\r\n              \"menuId\": id\r\n            }\r\n          }\r\n        ),\r\n        success:function(res){\r\n          if(res.flag){\r\n            res.data.pageList.map((item,index)=>{\r\n              tableList.push({\r\n                id:item.id,\r\n                name:item.name,\r\n                downloadURL:hostPort+'equip/file/download/'+item.id,\r\n                state: 'done',\r\n                nodeName:label,\r\n                importer:'admin',\r\n                menuId:item.menuId\r\n            })\r\n           })\r\n           const action ={\r\n            type:'getImageTreekey',\r\n            treeKey:id,\r\n            tableList,\r\n            label\r\n          }\r\n        store.dispatch(action)\r\n          }\r\n\r\n        },\r\n        error:function(){\r\n            return false;\r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 新增子节点\r\n */\r\nexport function _newTreeNode(treeid){\r\n\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/menu/saveOrUpdate\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n            \"pId\":treeid,\r\n            \"menuName\":\"新增\",\r\n            \"dataType\":\"1\"\r\n          }),\r\n        success:function(res){\r\n          if(res.flag){\r\n              _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n \r\n}\r\n\r\n/**\r\n * 修改节点名称\r\n */\r\nexport function _onEditFinish(treeid,dataSource,label){\r\n  \r\n      $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/menu/saveOrUpdate\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n            id:treeid,\r\n            \"menuName\":label,\r\n            \"dataType\":\"1\"\r\n        }),\r\n        success:function(res){\r\n          if(res.flag){\r\n        //   dataConfig10=res.data[0]\r\n          _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 删除节点\r\n */\r\nexport function _deleteTreeNode(treeid,dataSource){\r\n    $.ajax({\r\n        type:\"DELETE\",\r\n        url:hostPort+\"equip/menu/delete/\"+treeid,\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        success:function(res){\r\n          if(res.flag){\r\n            // console.log('20:41 _deleteTreeNode',res)\r\n            _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\TreeIndex\\index.jsx",["1807","1808","1809","1810","1811","1812"],"import React,{Component} from 'react'\r\n// antd\r\nimport { Tree ,Modal,Button,Space,message,Input  } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// style\r\nimport '../index.scss'\r\n\r\n// 导入方法\r\nimport {_onSelect,_newTreeNode,_onEditFinish,_deleteTreeNode} from './functionList'\r\n\r\nclass TreeIndex extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      dataSource:store.getState().DataStoragereducer.ImageDataConfig,  //树列表的数据\r\n      selectedKey:'',//选择的树节点的key\r\n      title:\"\",//选择的树节点的名称\r\n      isModalVisible:false,\r\n      inputValue:\"\", //输入框值\r\n    }\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  // 获取变化的树节点\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.ImageDataConfig,\r\n    })\r\n\r\n  }\r\n\r\n  // 展开节点\r\n  onExpand = () => {\r\n    // console.log('Trigger Expand');\r\n  };\r\n\r\n  // 左边点击触发\r\n   onSelect = (selectedKeys, info) => {\r\n    // console.log('selected', selectedKeys, info);\r\n    _onSelect(selectedKeys[0],info.node.title)\r\n    this.setState({\r\n      selectedKey:selectedKeys[0],\r\n      title:info.node.title\r\n    })\r\n  };\r\n  \r\n  // 右击触发\r\n  onRightClick = ({event, node}) =>{\r\n    // console.log('onrightclick',{event, node},node.key,node.active)\r\n    this.setState(\r\n      {\r\n        isModalVisible:true,\r\n        selectedKey:node.key,\r\n        title:node.title,\r\n      }\r\n    )\r\n  }\r\n\r\n  // 新增子节点\r\n  newTreeNode = ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      _newTreeNode(this.state.selectedKey)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n    }else{\r\n      message.error({\r\n        content: '新增错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // 修改节点名称\r\n  onEditFinish = ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      if(this.state.inputValue!=''){\r\n\r\n        _onEditFinish(this.state.selectedKey,this.state.dataSource,this.state.inputValue)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n      }\r\n\r\n    }else{\r\n      message.error({\r\n        content: '修改节点名称错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // 删除节点\r\n  deleteTreeNode= ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      _deleteTreeNode(this.state.selectedKey,this.state.dataSource)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n    }else{\r\n      message.error({\r\n        content: '删除节点错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // modal关闭\r\n  onClose = () => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n    });\r\n  };\r\n\r\n  // 输入框\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    this.setState({\r\n      inputValue:inputValue\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {dataSource,isModalVisible,title}  = this.state;\r\n    return (\r\n      <div>\r\n      <Tree\r\n          showLine\r\n          switcherIcon={<DownOutlined />}\r\n          onSelect={this.onSelect}\r\n          treeData={dataSource}\r\n          onExpand={this.onExpand}\r\n          onRightClick ={this.onRightClick}\r\n          />\r\n      <Modal\r\n        title=\"节点操作\" \r\n        visible ={isModalVisible}\r\n        width = {320}\r\n        onCancel = {this.onClose}\r\n        footer={[\r\n          <Button type = \"normal\" onClick={this.onClose}>\r\n            关闭\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Space style = {{marginLeft:\"20px\",marginLeft:\"20px\",width:\"300px\",marginBottom:\"50px\"}}>\r\n          <Input placeholder = {title} onChange = {this.onChange} ></Input>\r\n           <Button  className = {\"ModelBtn\"} onClick={this.onEditFinish}>\r\n            重命名\r\n          </Button>\r\n        </Space>\r\n        \r\n         <Space style = {{marginLeft:\"20px\",marginLeft:\"20px\",width:\"300px\"}}>\r\n          <Button className = {\"ModelBtn\"} onClick={this.newTreeNode}>\r\n            新增\r\n          </Button>\r\n          <Button  className = {\"deleteBtn\"} onClick={this.deleteTreeNode}>\r\n            删除\r\n          </Button>\r\n       \r\n         </Space>\r\n         \r\n   \r\n      </Modal>\r\n      </div>\r\n\r\n   \r\n   \r\n    );\r\n  }\r\n} \r\n\r\nexport default TreeIndex;","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\tableConfig.js",["1813","1814"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Tags,Space} from 'antd'\r\n\r\nimport { Link } from 'react-router-dom';\r\n// 导入组件\r\nimport EditDialog from '../Table1/TabTable/components/EditDialog';\r\nimport DeleteBalloon from '../Table1/TabTable/components/DeleteBalloon';\r\nimport CheckZip from './TabTable/components/CheckZip'\r\n\r\n// 导入方法\r\nimport {_LinkToList} from './TabTable/components/functionList'\r\n\r\n\r\n const tableColumns = [\r\n    {\r\n      title: '所属部件',\r\n      dataIndex: 'nodeName',\r\n      key: 'nodeName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: '数据集名称',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: '录入时间',\r\n      dataIndex: 'uploadTime',\r\n      key: 'uploadTime',\r\n    },\r\n    {\r\n        title: '最近修改时间',\r\n        dataIndex: 'modifiedTime',\r\n        key: 'modifiedTime',\r\n      },\r\n      {\r\n        title: '操作人员',\r\n        dataIndex: 'importer',\r\n        key: 'importer',\r\n      },\r\n\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n        <CheckZip\r\n           onClick={( )=>{\r\n             console.log('调用')\r\n            return record;\r\n         }}\r\n        ></CheckZip>\r\n        <EditDialog\r\n            onClick={( )=>{\r\n                return record;\r\n             }}\r\n          />\r\n        <DeleteBalloon\r\n         onClick={( )=>{\r\n            return record;\r\n         }}\r\n        />\r\n        <Link to=\"/Devproject/DataProcessing\" >\r\n        <Button\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          onClick={( )=>{\r\n          _LinkToList(record)\r\n            return record;\r\n         }}\r\n        >\r\n          流程\r\n        </Button>\r\n      </Link>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\functionList.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\UploadFile.jsx",["1815"],"import React,{Component} from 'react'\r\n\r\n// antd\r\nimport {Button, message, Form,Input, Space } from 'antd';\r\n\r\n// 引入方法\r\nimport {_newSet} from './functionList'\r\n// 引入组件\r\nimport ChooseFile from './ChooseFile'\r\nexport default class UploadFile extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            disabled:false,\r\n            inputValue:\"\",//输入框输入的值\r\n            datasetName:\"\",//数据集名字\r\n            setid:\"\",//生成的数据集id\r\n        }\r\n    }\r\n\r\n      /**\r\n   * 确认输入\r\n   */\r\n  onOk = ()=>{\r\n    this.setState({\r\n      datasetName:this.state.inputValue,\r\n      disabled:true,\r\n    })\r\n\r\n    let setid = _newSet(this.state.inputValue,this.props.treeKey);\r\n    if(setid!=undefined){\r\n        this.setState({\r\n            setid:setid,\r\n        })\r\n        message.success({\r\n            content: '生成数据集成功！',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '20vh',\r\n            },\r\n          });\r\n    }else{\r\n        message.error({\r\n            content: '生成数据集失败！',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '20vh',\r\n            },\r\n          });\r\n        this.props.onClose();\r\n    }\r\n  }\r\n\r\n  \r\n  /**\r\n   * 输入框\r\n   * @param {*} e \r\n   */\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    // console.log(inputValue)\r\n    this.setState({\r\n      inputValue:inputValue\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Form\r\n            layout={{  labelCol: { span: 8 },\r\n            wrapperCol: { span: 16 }}\r\n            }\r\n            name=\"上传文件\"\r\n            initialValues={{ remember: true }}\r\n          >\r\n            <Form.Item\r\n              label=\"生成数据集：\"\r\n              name=\"name\"\r\n              rules={[{ required: true, message: '必填选项' }]}\r\n            >\r\n                <Space >\r\n\r\n                    <Input disabled ={this.state.disabled}  onChange = {this.onChange}/> \r\n                    <Button    className = {\"ModelBtn\"}  onClick = {this.onOk}>确认数据集名称</Button>\r\n                </Space>\r\n\r\n            </Form.Item>\r\n            <ChooseFile onClose = {this.onClose} />\r\n\r\n          </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\ChooseFile.jsx",["1816"],"import React, { Component } from 'react';\r\nimport $ from 'jquery'\r\n\r\n// antd\r\nimport { Upload, message, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport  {hostPort} from '@/Common'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// 方法\r\nimport {_refreshForm  } from \"./functionList\";\r\n\r\nexport default class ChooseFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          datasetName :this.props.datasetName,\r\n          datasetID: store.getState().DataStoragereducer.imagedata.datasetID,\r\n          treeKey: store.getState().DataStoragereducer.treeKey,\r\n          label: store.getState().DataStoragereducer.label,\r\n\r\n        };\r\n        store.subscribe(this.handleStoreChange);\r\n    }\r\n    handleStoreChange =()=>{\r\n        this.setState({\r\n          datasetID: store.getState().DataStoragereducer.imagedata.datasetID,\r\n        })\r\n    }\r\n    onChange=(info)=> {\r\n        if (info.file.response) {\r\n            let response = info.file.response\r\n            if(response.flag){\r\n                // console.log(response)\r\n            message.success(`${info.file.name} 上传成功！`);\r\n            _refreshForm(this.state.treeKey,this.state.label)\r\n            }else{\r\n            message.error(`${info.file.name}上传失败！`);\r\n            }\r\n            this.props.onClose()\r\n        }\r\n      }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n             <Upload {...props}\r\n                    // action={hostPort+\"equip/image/uploadImageSets\"}\r\n                    onChange = {this.onChange}\r\n                    data = {{\r\n                        setId:this.state.datasetID\r\n                    }}\r\n                    >\r\n                        \r\n                <Button icon={<UploadOutlined />}>选择文件</Button>\r\n            </Upload>,\r\n                    \r\n            </div>);\r\n    }\r\n}\r\nconst props = {\r\n    name: 'file',\r\n    action: `${hostPort}equip/image/uploadImageSets`,\r\n    // headers: {\r\n    //   authorization: 'authorization-text',\r\n    // },  //请求头\r\n    showUploadList:false,\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\store\\DataStoragereducer.js",["1817","1818","1819","1820","1821","1822","1823"],"import ViewImg from '../Image/Table2/TabTable/components/ViewImg';\r\nimport {CHANGE_INPUT_VALUE,ADD_TODO_ITEM,DELETE_TODO_ITEM} from '../store/actionType'\r\n\r\n\r\n\r\nconst dataStorage={\r\n  VibrationDataConfig:[\r\n    {\r\n      title: '振动',\r\n      key: '/tree12',\r\n      path:'12',\r\n      children: [\r\n        {\r\n          title: '振动12',\r\n          key: '/tree1.12',\r\n          path:'12',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  SequenceDataConfig:[\r\n    {\r\n      title: '时序',\r\n      key: '/tree13',\r\n      path:'13',\r\n      children: [\r\n        {\r\n          title: '时序13',\r\n          key: '/tree1.13',\r\n          path:'13',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  ImageDataConfig:[\r\n    {\r\n      title: '图像',\r\n      key: '/tree11',\r\n      path:'11',\r\n      children: [\r\n        {\r\n          title: '图像11',\r\n          key: '/tree1.11',\r\n          path:'11',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n\r\n  sequenceFile:[{\r\n            name: 'IMG.png',\r\n            state: 'done',\r\n            size: 1024,\r\n            id:\"6525856256256\",\r\n            downloadURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n            fileURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n            imgURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg'\r\n  }],\r\n  sequenceTable:[\r\n    {\r\n      name:'数据存储管理',\r\n      nodeName:'节点1'\r\n    }\r\n  ],\r\n\r\n  vibrationdata:{\r\n    vibrationTable:[\r\n     { \r\n      childNode:'数据存储管理',\r\n      nodeName:123,\r\n      name:123,\r\n      uploadTime:'2020.01.01',\r\n      importer:33,\r\n      equipment:33,\r\n      time:33,\r\n      createDate:'',\r\n      modifiedTime:\"\",\r\n    },\r\n    ],\r\n    vibrationFile:[{\r\n      name: '0-0.csv',\r\n      state: 'done',\r\n      size: 1024,\r\n      id:\"6525856256256\",\r\n      downloadURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n      fileURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n      imgURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg'\r\n}],\r\n    zipTable :[\r\n      {\r\n        // imageName:'',\r\n        // imageFileId:'',  //用于预览图片\r\n        // setId:'',\r\n        // labelFileId:'',\r\n        // id:'',\r\n        // tagName:'',\r\n        // tag:'否'\r\n      }\r\n    ],\r\n    datasetID:\"\",//数据集id\r\n\r\n  },\r\n\r\n  imagedata:{\r\n    imageTable:[\r\n      {\r\n        nodeName:233,\r\n        name:233,\r\n        uploadTime:'',\r\n        importer:55,\r\n        equipment:55,\r\n        time:55,\r\n        createDate:'',\r\n        modifiedTime:\"\",\r\n      },\r\n      {\r\n        nodeName:55,\r\n        name:55,\r\n        uploadTime:'',\r\n        importer:55,\r\n        equipment:55,\r\n        createDate:55,\r\n        modifiedTime:\"\",\r\n      },\r\n    ],\r\n    imageFile:[{\r\n      name: 'IMG.png',\r\n      state: 'done',\r\n      size: 1024,\r\n      id:\"6525856256256\",\r\n      downloadURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n      fileURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n      imgURL: 'https://img.alicdn.com/tps/TB19O79MVXXXXcZXVXXXXXXXXXX-1024-1024.jpg',\r\n      uploadTime:'2020-09-10',\r\n}],\r\n    zipTable :[\r\n      {\r\n        // imageName:'',\r\n        // imageFileId:'',  //用于预览图片\r\n        // setId:'',\r\n        // labelFileId:'',\r\n        // id:'',\r\n        // tagName:'',\r\n        // tag:'否'\r\n      }\r\n    ],\r\n    \r\n    datasetID:'',//数据集id\r\n\r\n    TagNum:'', //有标签的图片的数量\r\n\r\n    \r\n\r\n  },\r\n\r\n  treeKey:'',//当前选中的树节点\r\n\r\n  label:'',//当前处理的节点的名称\r\n  \r\n  fileID:'',//当前选中的处理文件的ID\r\n\r\n  fileName:[{     //这个是用于在后续的模型训练和数据预处理时，需要标出待处理的原始文件名\r\n    name:'数据集1',\r\n    id:1\r\n  }] ,//当前选中的处理文件名\r\n\r\n  selectedRecords:[], //当前选中的数据集的具体信息\r\n\r\n  deleteID:'', //当前要删除的文件的id\r\n\r\n  dataType:'', //1图像 2时序 3振动\r\n\r\n  datasetName:'',//当前处理的数据集名\r\n\r\n  flag:0, //0表示当前未上传， 1表示正在上传，2表示上传完毕\r\n\r\n  ModalContent:null,\r\n  totalCount:\"\" ,//当前压缩包中的总图片数\r\n}\r\n//reducer可以接受state，但是不能修改state，所以必须要拷贝一份\r\nconst DataStoragereducer = (state=dataStorage,action)=>{\r\n    // vibration\r\n    // 树节点初始化\r\n    if(action.type==='VibrationComponenDidMount'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.VibrationDataConfig=action.dataConfig\r\n      return newState;\r\n     }\r\n    //  选择树节点\r\n    if(action.type==='getVibrationTreekey'){   \r\n      const newState=JSON.parse(JSON.stringify(state));\r\n\r\n      newState.label = action.label\r\n     newState.vibrationdata.vibrationFile=action.tableList\r\n     newState.treeKey=action.treeKey\r\n     newState.vibrationdata.vibrationTable=action.tableList\r\n     newState.flag = action.flag\r\n       return newState;\r\n     }\r\n        //获取振动数据集压缩包中的文件\r\n     if(action.type ==='getVibZipData'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.fileName[0].id = action.id\r\n      newState.fileName[0].name =  action.datasetName\r\n      newState.totalCount = action.totalCount\r\n      newState.vibrationdata.zipTable = []\r\n      action.pageList.map((item,index)=>{\r\n        newState.vibrationdata.zipTable.push({\r\n          ...item,\r\n          datasetName:action.datasetName,\r\n          nodeName:newState.label\r\n        })\r\n        \r\n      })\r\n\r\n      \r\n      return newState;\r\n    }\r\n    // 新建数据集\r\n    if(action.type === 'createVibDataset'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.vibrationdata.datasetID = action.e\r\n      return newState;\r\n\r\n    }\r\n\r\n     if(action.type==='VibrationFileID'){    //当前选择的文件ID\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.fileID=action.id\r\n      // console.log('2020.7.25 17:20',action)\r\n      newState.fileName[0].name=action.record.name\r\n      return newState;\r\n     }\r\n\r\n\r\n     //sequence\r\n    if(action.type==='SequenceComponenDidMount'){  //pages\\DataStorage\\Sequence\\Sequence.jsx\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.SequenceDataConfig=action.dataConfig\r\n      return newState;\r\n     }\r\n\r\n\r\n     if(action.type==='getSequenceTreekey'){   //pages\\DataStorage\\Sequence\\Sequence.jsx\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      action.tableList.map((item,index)=>{\r\n        item.nodeName = action.label\r\n      })\r\n      newState.treeKey=action.treeKey\r\n      newState.sequenceTable=action.tableList\r\n      newState.sequenceFile=action.tableList\r\n       return newState;\r\n     }\r\n\r\n   \r\n    \r\n\r\n     // image \r\n     if(action.type==='ImageComponentDidMount'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.ImageDataConfig=action.dataConfig\r\n      return newState;\r\n     }\r\n\r\n\r\n     //上传之前，创造数据集\r\n     if(action.type ==='createDataset'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.imagedata.datasetID = action.e\r\n      return newState;\r\n     }\r\n     \r\n\r\n     if(action.type==='getImageTreekey'){   //pages\\DataStorage\\Sequence\\Sequence.jsx\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n\r\n      newState.label = action.label\r\n     newState.imagedata.imageFile=action.tableList\r\n     newState.treeKey=action.treeKey\r\n     newState.imagedata.imageTable=action.tableList\r\n    //  newState.flag = action.flag\r\n       return newState;\r\n     }\r\n\r\n\r\n     //获取压缩包中的文件\r\n     if(action.type ==='getZipData'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.datasetName = action.datasetName\r\n      newState.dataType = 1\r\n      newState.fileName[0].id = action.id\r\n      newState.fileName[0].name =  action.datasetName\r\n      newState.fileID = action.id\r\n      newState.imagedata.zipTable = []\r\n      newState.imagedata.TagNum = 0\r\n      newState.totalCount = action.totalCount\r\n      action.pageList.map((item,index)=>{\r\n        if(item.labelFileLocation==null){\r\n          //没有标签\r\n          if(item.setType ===null){\r\n            //没有划分\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              tagName:item.labelName,\r\n              id:item.id,\r\n              tag:'否',\r\n              setType:'未划分', \r\n  \r\n            })\r\n          }else{\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              tagName:item.labelName,\r\n              id:item.id,\r\n              tag:'否',\r\n              setType:item.setType, \r\n  \r\n            })\r\n       \r\n          }\r\n        }else{\r\n          if(item.setType ===null){\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              tagName:item.labelName,\r\n              id:item.id,\r\n              tag:'是',\r\n              setType:'未划分', \r\n            })\r\n          }else{\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              tagName:item.labelName,\r\n              id:item.id,\r\n              tag:'是',\r\n              setType:item.setType, \r\n            })\r\n          }\r\n\r\n\r\n          newState.imagedata.TagNum++\r\n\r\n        }\r\n      })\r\n      // console.log('newstate.imagedata.ziptable', newState.imagedata.zipTable)\r\n      return newState;\r\n     }\r\n\r\n         //  获取要查看的图片\r\n     if(action.type ==='ViewImg'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      // newState.deleteID = action.id\r\n      // console.log('fjowejio')\r\n      newState.ModalContent = action.ImgDiv\r\n      return newState;\r\n     }\r\n     /**\r\n      * 删除单张图片\r\n      */\r\n     if(action.type === 'Deleteiamge'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.imagedata.zipTable = action.tableData\r\n      return newState;\r\n     }\r\n\r\n            //   取消要查看的图片\r\n            // 一定要清除 否则会报错\r\n            if(action.type ==='cancelView'){\r\n              const newState=JSON.parse(JSON.stringify(state));\r\n              newState.ModalContent = null\r\n              return newState;\r\n             }\r\n     \r\n\r\n\r\n    return state;  //state存放的是所有的信息，整个store仓库里存储的数据 action指用户传过来的那句话\r\n   \r\n}\r\nexport default DataStoragereducer","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\tableConfig.js",["1824","1825","1826","1827","1828","1829"],"import {Component} from 'react'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport {Button,Tags,Space,Image,Modal} from 'antd'\r\n\r\n// 方法\r\nimport {_createImg,_deleteImage} from './TabTable/components/functionList'\r\nimport store from '../../../Store';\r\n\r\n const tableColumns = [\r\n    {\r\n      title: '图片文件名',\r\n      dataIndex: 'imageName',\r\n      key: 'imageName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: '所属部件',\r\n      dataIndex: 'nodeName',\r\n      key: 'nodeName',\r\n    },\r\n    {\r\n      title: '所属数据集',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n\r\n    {\r\n      title: '操作',\r\n      // key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n\r\n         <Button \r\n          onClick={()=>{\r\n          // console.log(\"查看\",text)  \r\n          _createImg(text.id)\r\n          }}\r\n        >查看</Button>\r\n \r\n        <Button \r\n          type =\"danger\"\r\n          onClick={()=>{\r\n          let Arr = []\r\n          Arr.push(text.id)\r\n          _deleteImage(Arr)\r\n\r\n        }}\r\n        className = 'deleteBtn'\r\n        >删除</Button>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\CheckZip.jsx",["1830"],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\functionList.jsx",["1831"],"import $ from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message ,Image } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// 导入方法\r\nimport {_checkZip} from '../../../Table1/TabTable/components/functionList'\r\n  /**\r\n   * 删除图片\r\n   */\r\n export  function  _deleteImage(idArr){\r\n     let flag = false\r\n    $.ajax({\r\n      type:\"DELETE\",\r\n      //DELETE /equip/image/deleteOne\r\n      url:hostPort+\"equip/image/deleteOne\",\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      data:JSON.stringify(\r\n        idArr\r\n      ),\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n        flag = true\r\n        _refresh();\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    return flag;\r\n  }\r\n/**\r\n * 刷新图片\r\n */\r\n  export function _refresh(){\r\n    let id = store.getState().DataStoragereducer.fileID\r\n    let datasetName = store.getState().DataStoragereducer.datasetName\r\n    _checkZip(1,id,datasetName)\r\n  }\r\n/**\r\n * 生成图片\r\n * @param {*} id                             \r\n */\r\n  export function _createImg(id){\r\n    // console.log('id',id)\r\n    const ImgDiv = (\r\n        \r\n      <Image\r\n      width={200}\r\n      src={`${hostPort}equip/image/view?imageId=${id}&type=image`}\r\n    />\r\n    )\r\n    const action = {\r\n      type:'ViewImg',\r\n      ImgDiv\r\n    }\r\n    store.dispatch(action)\r\n    \r\n  }\r\n\r\n\r\n/**\r\n * 图片列表\r\n */\r\n  export function _imgList(page){\r\n      let id = store.getState().DataStoragereducer.fileName[0].id\r\n      let datasetName =  store.getState().DataStoragereducer.fileName[0].name\r\n      _checkZip(page,id,datasetName)\r\n  }","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\ViewImg.jsx",["1832"],"import {Button,Image,Modal} from 'antd'\r\nimport React, { useState } from 'react';\r\nconst  ViewImg = (props) =>{\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n    return(\r\n        <div>\r\n        <Button \r\n         onClick={showModal}\r\n        >查看</Button>\r\n        \r\n        <Modal\r\n          title=\"查看图片\" \r\n          visible={isModalVisible}\r\n          onCancel={handleCancel}\r\n          width = {320}\r\n          footer={null}\r\n        >\r\n          123\r\n          {/* {\r\n              props.gettext()\r\n          } */}\r\n          {/* {props.text} */}\r\n        {props}\r\n        </Modal>\r\n        </div>\r\n    )\r\n}    \r\nexport default ViewImg;","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\Nav\\Title.jsx",["1833"],"import  './style.scss'\r\nconst Title =(props) =>(\r\n        <ul class=\"nav\">\r\n            <li class=\"nav-item title\">\r\n              <a class=\"nav-link active\" href=\"#\">桨轴传动系统故障诊断软件</a>\r\n            </li>\r\n          </ul>\r\n)\r\nexport default Title;","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\index.js",["1834"],"import React,{Component} from 'react'\r\n// antd\r\nimport { Table } from 'antd';\r\n// columns\r\nimport sequencetableColumns from './component/sequence/tableConfig'\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// style\r\nimport './style.scss'\r\nimport vibrationtableColumns from './component/vibration/tableConfig';\r\nexport default class Preprocessing extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            dataSource:store.getState().Preprocessingreducer.preProcessingTable,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            dataSource:store.getState().Preprocessingreducer.preProcessingTable,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {dataSource,dataType} = this.state\r\n        let  tableColumns = sequencetableColumns \r\n        if(dataType == 2){\r\n            tableColumns = sequencetableColumns\r\n        }else{\r\n            tableColumns = vibrationtableColumns\r\n        }\r\n        return(\r\n            <div>\r\n                <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={tableColumns} dataSource={dataSource} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\index.js",["1835","1836"],"import React,{Component} from 'react'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// antd\r\nimport { Table ,Pagination,Button} from 'antd';\r\n// table\r\n import tableConfig from './Table1/tableConfig'\r\n import vibtableConfig01 from './vibration/Table1/tableConfig'\r\n import vibtableConfig02 from './vibration/Table2/tableConfig'\r\n\r\n// style\r\nimport './style.scss'\r\n// 方法\r\nimport {_checkZip} from './component/functionList'\r\nimport {_vibPngSelectPage} from './vibration/component/functionList'\r\nimport {_deleteLabel} from './vibration/component/functionList'\r\n\r\n// 组件\r\nexport default class TagManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            selectedRowKeys: [],\r\n            zipMsg:store.getState().TagManagementreducer.zipMsg,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n            zipTable :store.getState().TagManagementreducer.imagedata.zipTable,\r\n            vibTask :store.getState().TagManagementreducer.vibTable.taskTable, //振动数据任务\r\n            vibFileList:store.getState().TagManagementreducer.vibTable.imageTable,\r\n            vibtotalCount:store.getState().TagManagementreducer.vibTable.totalCount,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n  \r\n    componentDidMount(){\r\n        const {zipMsg,dataType} = this.state;\r\n        if(dataType == 1){\r\n            _checkZip(1,zipMsg.id,zipMsg.name)\r\n        }else{\r\n            _vibPngSelectPage(1)\r\n        }\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            zipMsg:store.getState().TagManagementreducer.zipMsg,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n            zipTable :store.getState().TagManagementreducer.imagedata.zipTable,\r\n            vibTask :store.getState().TagManagementreducer.vibTable.taskTable,\r\n            vibFileList:store.getState().TagManagementreducer.vibTable.imageTable,\r\n            vibtotalCount:store.getState().TagManagementreducer.vibTable.totalCount,\r\n        })\r\n    }\r\n    /**\r\n   * 表格选择\r\n   */\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n \r\n      pageonChange=(page, pageSize)=>{\r\n        const {zipMsg} = this.state;\r\n        _checkZip(page,zipMsg.id,zipMsg.name)\r\n      }\r\n      vibPageChange = (page)=>{\r\n        _vibPngSelectPage(page)\r\n      }\r\n      batchDelete = ()=>{\r\n        // console.log(this.state.selectedRowKeys);\r\n        _deleteLabel(this.state.selectedRowKeys)\r\n      }\r\n    render(){\r\n        const {zipTable,dataType,vibTask,vibFileList,selectedRowKeys,vibtotalCount} = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n          };\r\n        return(\r\n            \r\n            <div>\r\n                  {\r\n                dataType == 1 ? <div>\r\n                    <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={tableConfig}\r\n                      pagination = {false} dataSource={zipTable} />\r\n                    <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n                </div>: <div>\r\n                <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={vibtableConfig01}\r\n                  pagination = {false}\r\n                dataSource={vibTask} />\r\n                <div className = \"table2\" >\r\n                <Button  \r\n                        style = {{marginLeft:\"10px\",marginBottom:\"10px\"}}\r\n                        className = \"deleteBtn\"\r\n                        type =\"danger\" \r\n                        onClick = {this.batchDelete}\r\n                        >批量删除标签</Button>\r\n                <Table  size=\"middle\"  bordered ={true} columns={vibtableConfig02} \r\n                 pagination = {false} dataSource={vibFileList} \r\n                 rowSelection={{\r\n                    ...rowSelection,\r\n                  }}\r\n                  rowKey = {'id'}\r\n                  style = {{marginBottom:\"10px\"}}\r\n                 />\r\n\r\n                    <Pagination\r\n                    onChange = {this.vibPageChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={vibtotalCount}\r\n                    />\r\n\r\n                </div>\r\n              \r\n                </div>\r\n\r\n                }\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\index.jsx",["1837","1838","1839","1840"],"\r\n\r\nimport React,{Component} from 'react'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// antd\r\nimport { Table ,Pagination,Space,Button} from 'antd';\r\n// table\r\n import tableConfig from './Table1/tableConfig'\r\n import vibtableConfig01 from './vibration/Table1/tableConfig'\r\n import vibtableConfig02 from './vibration/Table2/tableConfig'\r\n// style\r\nimport './style.scss'\r\n// 方法\r\nimport {_checkZip} from './component/functionList'\r\nimport { _vibPngSelectPage } from './vibration/component/functionList';\r\n\r\n// 组件\r\nimport AutoDivide from './component/AutoDivide'\r\nimport BatchOperation from './component/BatchOperation'\r\nimport VibAutoDivide from './vibration/component/AutoDivide'\r\nimport VibBatchOperation from './vibration/component/BatchOperation'\r\nexport default class DatasetConstruct extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            selectedRowKeys: [],\r\n            zipMsg:store.getState().DatasetConstructReducer.zipMsg,\r\n            zipTable :store.getState().DatasetConstructReducer.imagedata.zipTable,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n            vibFileList:store.getState().DatasetConstructReducer.vibTable.imageTable,\r\n            vibTask :store.getState().TagManagementreducer.vibTable.taskTable, //振动数据任务\r\n            vibtotalCount:store.getState().TagManagementreducer.vibTable.totalCount,\r\n\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n  \r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            zipMsg:store.getState().DatasetConstructReducer.zipMsg,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n            zipTable :store.getState().DatasetConstructReducer.imagedata.zipTable,\r\n            vibFileList:store.getState().DatasetConstructReducer.vibTable.imageTable,\r\n            vibTask :store.getState().TagManagementreducer.vibTable.taskTable, //振动数据任务\r\n            vibtotalCount:store.getState().TagManagementreducer.vibTable.totalCount,\r\n\r\n        })\r\n    }\r\n \r\n      pageonChange=(page, pageSize)=>{\r\n        \r\n        if(this.state.dataType == 1){\r\n          const {zipMsg} = this.state;\r\n          _checkZip(page,zipMsg.id,zipMsg.name)\r\n        }else{\r\n          _vibPngSelectPage(page)\r\n        }\r\n  \r\n      }\r\n    //   刷新\r\n      refresh=()=>{\r\n        if(this.state.dataType  == 1){\r\n          const {zipMsg} = this.state;\r\n          _checkZip(1,zipMsg.id,zipMsg.name)\r\n        }else{\r\n          _vibPngSelectPage(1)\r\n        }\r\n     \r\n      }\r\n      \r\n        /**\r\n   * 表格选择\r\n   */\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n    render(){\r\n        const {zipTable,selectedRowKeys,dataType,vibFileList,vibTask,vibtotalCount} = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n          };\r\n        return(\r\n            <div>\r\n                    <Space style ={{float:\"left\",padding:\"10px 0 10px 0\"}}>\r\n                    <Button size = \"large\" onClick ={this.refresh}>刷新</Button>\r\n                    {dataType == 1 ? <Space>\r\n                      <BatchOperation  getRecords = {()=>{\r\n                        // console.log(this.state.selectedRowKeys)\r\n                        return this.state.selectedRowKeys\r\n                    }}></BatchOperation>\r\n                    <AutoDivide></AutoDivide>\r\n                    </Space>: <Space>\r\n                    <VibBatchOperation  getRecords = {()=>{\r\n                        // console.log(this.state.selectedRowKeys)\r\n                        return this.state.selectedRowKeys\r\n                    }}></VibBatchOperation>\r\n                    <VibAutoDivide></VibAutoDivide>\r\n                      </Space>}\r\n                   \r\n                   \r\n                  </Space>\r\n              {\r\n\r\n                dataType == 1 ?<Table \r\n                      rowSelection={{\r\n                        ...rowSelection,\r\n                      }}\r\n                      rowKey = {\"id\"}\r\n                      pagination ={false}\r\n                    className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={zipTable} />\r\n                    : <div>\r\n                    <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={vibtableConfig01}\r\n                      pagination = {false}\r\n                    dataSource={vibTask} />\r\n                    <Table \r\n                      rowSelection={{\r\n                        ...rowSelection,\r\n                      }}\r\n                      rowKey = {\"id\"}\r\n                      pagination ={false}\r\n                    className = \"table2\" size=\"middle\"  bordered ={true} columns={vibtableConfig02} dataSource={vibFileList} />\r\n                    </div>\r\n                   \r\n             \r\n              }\r\n                <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={vibtotalCount}\r\n                    />\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\index.js",["1841"],"import React,{Component} from 'react'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// antd\r\nimport { Table } from 'antd';\r\n// table\r\n import tableConfig from './component/tableConfig'\r\n\r\n// style\r\nimport './style.scss'\r\nimport {_modelList} from './component/functionList'\r\nexport default class ModelCheck extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            dataSource:store.getState().ModelTrainingreducer.tableData,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n  \r\n    componentDidMount(){\r\n        let id = store.getState().ModelTrainingreducer.tableData[0].originID\r\n        _modelList(1,id)\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            dataSource:store.getState().ModelTrainingreducer.tableData,\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {dataSource,modelList} = this.state\r\n        return(\r\n            <div>\r\n                    <Table  className = \"table1\" size=\"small\"  bordered ={true} columns={tableConfig} dataSource={dataSource} \r\n                    pagination = {false}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\index.js",["1842","1843","1844"],"import React,{Component} from 'react'\r\n\r\n// antd\r\nimport { Table ,Pagination,Space,Button} from 'antd';\r\n// table\r\nimport tableConfig from './Table1/tableConfig'\r\n// style\r\nimport './style.scss'\r\nconst dataSource =[\r\n    {\r\n        algorithm: 'Faster R-CNN',\r\n        task:  '腐蚀检测',\r\n        modelSize:'108MB',\r\n        inputFormat:'JPG、XML',\r\n        modifiedTime:\"2020/08/24\",\r\n    },\r\n    {\r\n        algorithm: '双向LSTM',\r\n        task:  '剩余寿命预测',\r\n        modelSize:'50MB',\r\n        inputFormat:'CSV',\r\n        modifiedTime:\"2020/08/24\",\r\n    },\r\n    {\r\n        algorithm: 'CWT-CNN',\r\n        task:  '故障诊断',\r\n        modelSize:'25MB',\r\n        inputFormat:'CSV',\r\n        modifiedTime:\"2020/08/24\",\r\n    },\r\n  ]\r\nexport default class AlgorithmManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n        }\r\n    }\r\n\r\n    render(){\r\n     \r\n        return(\r\n            <div>\r\n                    <Table \r\n                    style = {{margin:\"0px 5px 0px 5px\"}}\r\n                      rowKey = {\"id\"}\r\n                    className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={dataSource} />\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\AbnormalPerception\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\index.js",["1845"],"\r\nimport React,{Component} from 'react'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// antd\r\nimport { Table } from 'antd';\r\n// table\r\n import tableConfig from './component/tableConfig'\r\n\r\n// style\r\nimport './style.scss'\r\nimport {_modelList} from './component/functionList'\r\nexport default class LifePrediction extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            dataSource:store.getState().LifePredictionreducer.tableData,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            dataSource:store.getState().LifePredictionreducer.tableData,\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {dataSource} = this.state\r\n        return(\r\n            <div>\r\n                    <Table  className = \"table1\" size=\"small\"  bordered ={true} columns={tableConfig} dataSource={dataSource} \r\n                    pagination = {false}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\Troubleshooting\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\index.js",["1846"],"import React,{Component} from 'react';\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport './style.scss'\r\n// antd\r\nimport { Table ,Pagination} from 'antd';\r\n\r\n// 组件\r\nimport ChooseModel from './vibration/component/ChooseModel'\r\n\r\n// table\r\nimport tableColumns01 from './Table1/tableConfig'\r\nimport tableColumns02 from './Table2/tableConfig'\r\nimport vibtableColumns01 from './vibration/Table1/tableConfig'\r\nimport vibtableColumns02 from './vibration/Table2/tableConfig'\r\n\r\n// 方法\r\nimport {_vibTaskpageonChange} from './vibration/component/functionList' \r\nexport default class StateEvaluate extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n            task:store.getState().StateEvaluatereducer.imageStateValuate.task,\r\n            resultList:store.getState().StateEvaluatereducer.imageStateValuate.resultList,\r\n            vibtaskList:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibresultList:store.getState().StateEvaluatereducer.vibStateValuate.resultList,\r\n            taskTotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            resultList:store.getState().StateEvaluatereducer.imageStateValuate.resultList,\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n            task:store.getState().StateEvaluatereducer.imageStateValuate.task,\r\n            vibtaskList:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibresultList:store.getState().StateEvaluatereducer.vibStateValuate.resultList,\r\n            taskTotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        _vibTaskpageonChange(1)\r\n    }\r\n      \r\n    pageonChange=(page, pageSize)=>{\r\n        // 结果列表的页数改变\r\n        // _imgModelList(page)\r\n    }\r\n\r\n    vibTaskpageonChange=page=>{\r\n        _vibTaskpageonChange(page)\r\n    }\r\n\r\n\r\n    render(){\r\n        const {resultList,dataType,task,vibtaskList,vibresultList,taskTotalCount} = this.state\r\n\r\n        console.log(vibtaskList,vibresultList);\r\n        return(\r\n            <div>\r\n                {\r\n                    dataType == 1 ? <div> \r\n                        {/* 图像数据 */}\r\n                   \r\n                    <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={tableColumns01} dataSource={task} \r\n                    pagination = {false}\r\n                    />\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableColumns02} dataSource={resultList} \r\n                      pagination = {false}\r\n                    />\r\n                     <Pagination\r\n                        style = {{marginTop:\"10px\"}}\r\n                        onChange = {this.pageonChange}\r\n                        showSizeChanger\r\n                        defaultCurrent={1}\r\n                        total={100}\r\n                        />\r\n                    </div>:<div>\r\n                    <ChooseModel ></ChooseModel>\r\n                    \r\n                    <Table  className = \"table2\" size=\"middle\"  \r\n                    bordered ={true} columns={vibtableColumns01} dataSource={vibtaskList} pagination ={false} />\r\n                    <Pagination\r\n                        style = {{marginTop:\"10px\"}}\r\n                        onChange = {this.vibTaskpageonChange}\r\n                        showSizeChanger\r\n                        defaultCurrent={1}\r\n                        total={taskTotalCount}\r\n                        />\r\n                     <Table  className = \"table2\" size=\"middle\"  \r\n                    bordered ={true} columns={vibtableColumns02} dataSource={vibresultList} pagination ={false} />\r\n                   \r\n                    </div>\r\n                }\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\FeatureScreening\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\FeatureExtraction\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\index.js",["1847"],"import React,{Component} from 'react'\r\n// antd\r\nimport { Table } from 'antd';\r\n// columns\r\n// import sequencetableColumns from './component/sequence/tableConfig'\r\nimport vibrationtableColumns from './component/vibration/tableConfig';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// style\r\nimport './style.scss'\r\nexport default class TableTimeFrequency extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            dataSource:store.getState().TableTimeFrequencyreducer.taskTable,\r\n            // dataType:store.getState().TableTimeFrequencyreducer.preProcessingTable,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            dataSource:store.getState().TableTimeFrequencyreducer.taskTable,\r\n            // dataType:store.getState().TableTimeFrequencyreducer.preProcessingTable,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {dataSource,dataType} = this.state\r\n        let  tableColumns = vibrationtableColumns \r\n        return(\r\n            <div>\r\n                <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableColumns} dataSource={dataSource} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n","D:\\前端学习\\devproject\\demo\\src\\layoutComponent\\contentContainer\\Footer.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\index.jsx",["1848","1849","1850","1851","1852","1853"],"import React,{Component} from 'react'\r\n// antd\r\nimport { Tree ,Modal,Button,Space,message,Input  } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// style\r\nimport '../index.scss'\r\n\r\n// 导入方法\r\nimport {_onSelect,_newTreeNode,_onEditFinish,_deleteTreeNode} from './functionList'\r\n\r\nclass TreeIndex extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      dataSource:store.getState().DataStoragereducer.SequenceDataConfig,  //树列表的数据\r\n      selectedKey:'',//选择的树节点的key\r\n      title:\"\",//选择的树节点的名称\r\n      isModalVisible:false,\r\n      inputValue:\"\", //输入框值\r\n    }\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  // 获取变化的树节点\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.SequenceDataConfig,\r\n    })\r\n\r\n  }\r\n\r\n  // 展开节点\r\n  onExpand = () => {\r\n    // console.log('Trigger Expand');\r\n  };\r\n\r\n  // 左边点击触发\r\n   onSelect = (selectedKeys, info) => {\r\n    _onSelect(selectedKeys[0],info.node.title)\r\n    this.setState({\r\n      selectedKey:selectedKeys[0],\r\n      title:info.node.title\r\n    })\r\n  };\r\n  \r\n  // 右击触发\r\n  onRightClick = ({event, node}) =>{\r\n    // console.log('onrightclick',{event, node},node.key,node.active)\r\n    this.setState(\r\n      {\r\n        isModalVisible:true,\r\n        selectedKey:node.key,\r\n        title:node.title,\r\n      }\r\n    )\r\n  }\r\n\r\n  // 新增子节点\r\n  newTreeNode = ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      _newTreeNode(this.state.selectedKey)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n    }else{\r\n      message.error({\r\n        content: '新增错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // 修改节点名称\r\n  onEditFinish = ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      if(this.state.inputValue!=''){\r\n\r\n        _onEditFinish(this.state.selectedKey,this.state.dataSource,this.state.inputValue)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n      }\r\n\r\n    }else{\r\n      message.error({\r\n        content: '修改节点名称错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // 删除节点\r\n  deleteTreeNode= ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      _deleteTreeNode(this.state.selectedKey,this.state.dataSource)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n    }else{\r\n      message.error({\r\n        content: '删除节点错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // modal关闭\r\n  onClose = () => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n    });\r\n  };\r\n\r\n  // 输入框\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    this.setState({\r\n      inputValue:inputValue\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {dataSource,isModalVisible,title}  = this.state;\r\n    return (\r\n      <div>\r\n      <Tree\r\n          showLine\r\n          switcherIcon={<DownOutlined />}\r\n          onSelect={this.onSelect}\r\n          treeData={dataSource}\r\n          onExpand={this.onExpand}\r\n          onRightClick ={this.onRightClick}\r\n          />\r\n      <Modal\r\n        title=\"节点操作\" \r\n        visible ={isModalVisible}\r\n        width = {320}\r\n        onCancel = {this.onClose}\r\n        footer={[\r\n          <Button type = \"normal\" onClick={this.onClose}>\r\n            关闭\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Space style = {{marginLeft:\"20px\",marginLeft:\"20px\",width:\"300px\",marginBottom:\"50px\"}}>\r\n          <Input placeholder = {title} onChange = {this.onChange} ></Input>\r\n           <Button  className = {\"ModelBtn\"} onClick={this.onEditFinish}>\r\n            重命名\r\n          </Button>\r\n        </Space>\r\n        \r\n         <Space style = {{marginLeft:\"20px\",marginLeft:\"20px\",width:\"300px\"}}>\r\n          <Button className = {\"ModelBtn\"} onClick={this.newTreeNode}>\r\n            新增\r\n          </Button>\r\n          <Button  className = {\"deleteBtn\"} onClick={this.deleteTreeNode}>\r\n            删除\r\n          </Button>\r\n       \r\n         </Space>\r\n         \r\n   \r\n      </Modal>\r\n      </div>\r\n\r\n   \r\n   \r\n    );\r\n  }\r\n} \r\n\r\nexport default TreeIndex;","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\functionList.jsx",["1854","1855","1856"],"import $ from 'jquery'\r\nimport {headerToken,hostPort} from '@/Common'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 树节点初始化\r\n */\r\nexport function _treeInitial(){\r\n    let dataConfig10\r\n    $.ajax({\r\n      type:\"get\",\r\n      url:hostPort+\"equip/menu/buildMenu\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){ \r\n         dataConfig10=res.data[1]\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    if(dataConfig10){\r\n        let dataConfig2=JSON.parse(JSON.stringify(dataConfig10).replace(/\"menuName\"/g,' \"title\"'))  ;\r\n        let dataConfig3=JSON.parse(JSON.stringify(dataConfig2).replace(/\"id\"/g,' \"key\"'))  ;\r\n        let dataConfig1=JSON.parse(JSON.stringify(dataConfig3).replace(/\"child\"/g,' \"children\"'))   ;\r\n        const action ={\r\n          type:'SequenceComponenDidMount',\r\n          dataConfig:dataConfig1\r\n        }\r\n        store.dispatch(action)\r\n    }\r\n}\r\n\r\n/**\r\n * 树节点选择\r\n * @param {*} id \r\n */\r\nexport  function _onSelect(id,label){\r\n    let tableList= []\r\n    let receiveData\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/file/selectPage\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify(\r\n          {\r\n            \"pageNo\": 1,\r\n            \"pageSize\": 10,\r\n            \"queryParameter\": {\r\n              \"dataId\": id\r\n            }\r\n          }\r\n        ),\r\n        success:function(res){\r\n          if(res.flag){\r\n            res.data.pageList.map((item,index)=>{\r\n              tableList.push({\r\n                id:item.id,\r\n                name:item.fileName,\r\n                downloadURL:hostPort+'equip/file/download/'+item.id,\r\n                state: 'done',\r\n                nodeName:label,\r\n                importer:'admin',\r\n                menuId:item.dataId,\r\n                uploadTime:item.uploadTime\r\n            })\r\n           })\r\n           const action ={\r\n            type:'getSequenceTreekey',\r\n            treeKey:id,\r\n            tableList,\r\n            label\r\n          }\r\n        store.dispatch(action)\r\n          }\r\n\r\n        },\r\n        error:function(){\r\n            return false;\r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 新增子节点\r\n */\r\nexport function _newTreeNode(treeid){\r\n\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/menu/saveOrUpdate\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n            \"pId\":treeid,\r\n            \"menuName\":\"新增\",\r\n            \"dataType\":\"2\"\r\n          }),\r\n        success:function(res){\r\n          if(res.flag){\r\n              _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n \r\n}\r\n\r\n/**\r\n * 修改节点名称\r\n */\r\nexport function _onEditFinish(treeid,dataSource,label){\r\n  \r\n      $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/menu/saveOrUpdate\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n            id:treeid,\r\n            \"menuName\":label,\r\n            \"dataType\":\"2\"\r\n        }),\r\n        success:function(res){\r\n          if(res.flag){\r\n        //   dataConfig10=res.data[0]\r\n          _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 删除节点\r\n */\r\nexport function _deleteTreeNode(treeid,dataSource){\r\n    $.ajax({\r\n        type:\"DELETE\",\r\n        url:hostPort+\"equip/menu/delete/\"+treeid,\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        success:function(res){\r\n          if(res.flag){\r\n            // console.log('20:41 _deleteTreeNode',res)\r\n            _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\index.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Sequence.jsx",["1857"],"import React, { Component, PureComponent } from 'react';\r\n\r\n// 组件\r\nimport TreeIndex from './TreeIndex/index';\r\nimport Table1 from './Table1/index'\r\n\r\n// store\r\nimport store from '../../Store/index'\r\n\r\n// antd\r\nimport { Row, Col } from 'antd';\r\n\r\n// style\r\nimport './index.scss'\r\n\r\n// 导入方法\r\nimport {_treeInitial} from './TreeIndex/functionList'\r\n\r\n\r\nexport default class Sequence extends Component {\r\n\r\n  static displayName = 'Image';\r\n  static contextTypes = {\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayName: 'none',\r\n      dataConfig: store.getState().DataStoragereducer.SequenceDataConfig,\r\n      treeKey: '',  //当前选中的树节点\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n  }\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataConfig: store.getState().DataStoragereducer.SequenceDataConfig,\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    _treeInitial()\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n   <Row gutter = {16}>\r\n    <Col span={4}>\r\n      <div  className =\"treeIndex\">\r\n      <TreeIndex ></TreeIndex>\r\n\r\n      </div>\r\n    </Col>\r\n      <Col span={20}> \r\n    \r\n      <div  className = \"table1\">\r\n      <Table1></Table1>\r\n        \r\n        </div> \r\n      </Col>\r\n  </Row>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\index.js",["1858","1859","1860","1861","1862"],"import React, { Component } from 'react';\r\n\r\n// antd\r\nimport {Button, Table, Tag, Space ,Modal,Upload,message} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n// \r\nimport  {hostPort} from '@/Common'\r\n\r\n// columns\r\nimport tableColumns from './tableConfig'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../index.scss'\r\n\r\nimport {_refresh} from './TabTable/components/functionList'\r\nclass  Table1 extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      //表格勾选的id\r\n      selectedRowKeys: [],\r\n      dataSource: store.getState().DataStoragereducer.sequenceTable,\r\n      label:store.getState().DataStoragereducer.label,\r\n      visible:false,\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.sequenceTable,\r\n      treeKey: store.getState().DataStoragereducer.treeKey,\r\n      label:store.getState().DataStoragereducer.label,\r\n\r\n    })\r\n  }\r\n    /**\r\n   * 打开上传文件按钮\r\n   */\r\n   onOpen=()=>{\r\n    this.setState({\r\n      visible:true,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭弹窗\r\n   */\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n  // 上传文件\r\n  onChange=(info)=> {\r\n    if (info.file.response) {\r\n        let response = info.file.response\r\n        if(response.flag){\r\n        message.success(`${info.file.name} 上传成功！`);  \r\n        _refresh(this.state.treeKey,this.state.label)\r\n        this.onClose();\r\n\r\n        }else{\r\n        message.error(`${info.file.name}上传失败！`);\r\n        this.onClose();\r\n\r\n        }\r\n    }\r\n  } \r\n\r\n  render(){\r\n    const {dataSource,visible,treeKey} = this.state;\r\n    return(\r\n      <div style ={{margin:\"0 5px 0 5px\"}}>\r\n      <Upload\r\n                    \r\n                    name = 'file'\r\n                    onChange = {this.onChange}\r\n                    action={`${hostPort}equip/file/upload`}\r\n                    data = {{\r\n                        dataId:this.state.treeKey,\r\n                        dataType:2\r\n                    }}\r\n                    showUploadList ={false}\r\n                    >\r\n            <Button icon={<UploadOutlined />} className = \"normalBtn\" \r\n            > 上传文件</Button>\r\n        </Upload>\r\n      {/* <Button className = \"normalBtn\" onClick = {this.onOpen} > 上传文件</Button> */}\r\n      <Table columns={tableColumns} dataSource={dataSource} />\r\n   \r\n  </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Table1;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\tableConfig.js",["1863","1864"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Tags,Space} from 'antd'\r\n\r\nimport { Link } from 'react-router-dom';\r\n// 导入组件\r\nimport DeleteBalloon from '../Table1/TabTable/components/DeleteBalloon';\r\nimport CheckDialog from './TabTable/components/CheckDialog'\r\n\r\n// 导入方法\r\nimport {_LinkToList} from './TabTable/components/functionList'\r\n\r\n const tableColumns = [\r\n  {\r\n    title: '数据集名称',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n    {\r\n      title: '所属部件',\r\n      dataIndex: 'nodeName',\r\n      key: 'nodeName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title:\"上传时间\",\r\n      dataIndex:\"uploadTime\",\r\n      key:\"uploadTime\"\r\n    },\r\n\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n        <CheckDialog\r\n           onClick={( )=>{\r\n            return record;\r\n         }}\r\n        ></CheckDialog>\r\n        <DeleteBalloon\r\n         onClick={( )=>{\r\n            return record;\r\n         }}\r\n        />\r\n        <Link to=\"/Devproject/DataProcessing\" >\r\n        <Button\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          onClick={( )=>{\r\n          _LinkToList(record)\r\n            return record;\r\n         }}\r\n        >\r\n          流程\r\n        </Button>\r\n      </Link>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\functionList.jsx",["1865","1866","1867"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// 引入方法\r\nimport {_onSelect} from '../../../TreeIndex/functionList'\r\n\r\n\r\n/**\r\n * 查看数据\r\n */\r\nexport function _checkDialog(id){\r\n    let dataTable ={\r\n      length:\"\",\r\n      data:[],\r\n      column:[\r\n        {\r\n          title: '采样时间',\r\n          dataIndex: '第1列',\r\n          key: '第1列',\r\n          width:100,\r\n\r\n        },\r\n      ],\r\n    }\r\n    let data=[]\r\n    $.ajax({\r\n      type:\"get\",\r\n     url:hostPort+\"equip/file/read/\"+id,\r\n      // url:hostPort+\"equip/sequence/read/1279625219525873665\",\r\n      dataType:'JSON',\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n          dataTable.length = res.data.length-1\r\n          // 第0列是乱码\r\n          data = res.data.splice(1) \r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    // 处理数据\r\n     let index //传感器个数\r\n    data.map((item,j)=>{\r\n       index = 0\r\n      for(var prop in item){\r\n        if(prop=='第1列'){\r\n          // 第一列 修改为\r\n          item[\"第1列\"] = j;\r\n        }else{\r\n          index++;\r\n        }\r\n      } \r\n    })\r\n    dataTable.data = data\r\n    // 生成列\r\n    for(var i=1;i<=index;i++){\r\n      dataTable.column.push({\r\n        title:`传感器${i}`,\r\n        dataIndex:`第${i+1}列`,\r\n        key:`第${i+1}列`,\r\n        width:100,\r\n      })\r\n    }\r\n    return dataTable;\r\n}\r\n\r\n/**\r\n * 删除文件\r\n */\r\nexport function _deleteFile(id,label,treeKey){\r\n    $.ajax({\r\n        type:\"DELETE\",\r\n        //   url:hostPort+\"equip/file/delete/\"+record.id,\r\n        url:hostPort+\"equip/file/delete/\"+id,\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        success:function(res){\r\n          if(res.flag){\r\n        //   删除完成 刷新\r\n            _refresh(treeKey,label)\r\n            message.success('删除成功！')\r\n          }else{\r\n            message.error('删除失败！')\r\n\r\n          }\r\n        },\r\n        error:function(){\r\n            \r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 刷新表格\r\n */\r\nexport function _refresh(treeKey,label){\r\n  _onSelect(treeKey,label)\r\n}\r\n\r\n/**\r\n * 流程按钮\r\n */\r\nexport function _LinkToList(record){\r\n  const action ={\r\n    type:'sequenceFileID',\r\n    id: record.id,\r\n    record,\r\n    dataType:2,\r\n  }\r\n  store.dispatch(action)\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\DeleteBalloon.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CheckDialog.jsx",["1868"],"import React,{Component} from 'react'\r\n//antd\r\nimport {Button,Modal,Table,InputNumber} from 'antd'\r\n// 导入方法\r\nimport {_checkDialog} from './functionList'\r\n// 导入组件\r\nimport CreateLineChart from './CreateLineChart'\r\nexport default class CheckZip extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            visible:false,\r\n            column:[],\r\n            dataSource:[],\r\n        }\r\n    }\r\n\r\n    CheckZip = ()=>{\r\n        let record =  this.props.onClick()\r\n        this.setState({\r\n            visible:true,\r\n        })\r\n        let dataTable \r\n        if(record){\r\n            let id = record.id\r\n            dataTable = _checkDialog(id)\r\n            this.setState({\r\n                column:dataTable.column,\r\n                dataSource:dataTable.data\r\n            })\r\n        }\r\n   }\r\n\r\n   onClose = ()=>{\r\n       this.setState({\r\n           visible:false,\r\n       })\r\n   }\r\n\r\n    render(){\r\n        const {visible,column,dataSource}  = this.state;\r\n        return(\r\n            <div style={styles.checkDialog}>\r\n\r\n                <Button\r\n                size=\"small\"\r\n                type=\"normal\"\r\n                onClick={this.CheckZip}\r\n                >\r\n                查看\r\n                </Button>\r\n            <Modal\r\n                destroyOnClose  = {true}\r\n                title=\"查看数据\" \r\n                visible ={visible}\r\n                width = {1500}\r\n                onCancel = {this.onClose}\r\n                footer={null}\r\n            >\r\n                <CreateLineChart max= {this.state.column.length-1} dataSource={dataSource} ></CreateLineChart>\r\n                <Table columns={column} dataSource={dataSource} scroll={{ x: 1000, y: 400 }} ></Table>\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    checkDialog: {\r\n      display: 'inline-block',\r\n      marginRight: '5px',\r\n    },\r\n  };\r\n  ","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CreateLineChart.jsx",["1869","1870","1871","1872"],"import React,{Component } from 'react'\r\n// antd\r\nimport {Button,Modal,InputNumber,Space} from 'antd'\r\n\r\nimport {_createChart} from './chart.config.js'\r\n\r\n// echarts\r\n/**\r\n * 说明：第一个import echarts是必须的\r\n * 第二个是引入的具体的一个图表类型 （可选）\r\n * 第三个是表的title(可选)\r\n */\r\nimport echarts from 'echarts/lib/echarts' \r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nclass CreateLineChart extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            num:'',\r\n            visible:false,\r\n            dataSource:[],\r\n            max:\"\",\r\n            min:\"\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n      // this.getOption()\r\n\r\n    }\r\n\r\n    onOk=()=>{\r\n        let valueArr = []\r\n        let xArr =[]\r\n        this.props.dataSource.map((item,index)=>{\r\n            // 拿出每一个对象中的 “第num+1列” 的数据\r\n                valueArr.push(item[`第${this.state.num+1}列`])\r\n                xArr.push(index)\r\n        })\r\n        let max= valueArr[0]\r\n        let min = valueArr[0]\r\n        let dataSource = []\r\n\r\n        valueArr.map((item,index)=>{\r\n            if(item>max){\r\n                max= item\r\n              }\r\n              if(item<min){\r\n                min= item\r\n              }\r\n              dataSource.push([\r\n                index,Number(item)\r\n              ])\r\n        })\r\n         max = Math.ceil(max) //向上取整\r\n         min = parseInt(min) //向下取整\r\n        this.setState({\r\n          max:max,min:min,dataSource:dataSource,\r\n          visible:true,\r\n        })\r\n    }\r\n\r\n    // 数字输入框改变\r\n    onChange=(value)=>{\r\n        this.setState({\r\n            num:value\r\n        })\r\n    }\r\n    // 关闭\r\n    onClose=()=>{\r\n        this.setState({\r\n            visible:false,\r\n        })\r\n    }\r\n\r\n    getOption=()=>{\r\n      const {max,min,dataSource} = this.state;\r\n      let result = _createChart(max,min,dataSource)\r\n      return result;\r\n    }\r\n\r\n      render(){\r\n          const {visible,dataSource} = this.state;\r\n      \r\n        \r\n        return(\r\n            <div>\r\n                <Space>\r\n                <span>请输入需要生成折线图的传感器编号：</span><InputNumber min={1} max={this.props.max}  onChange = {this.onChange}>\r\n                        </InputNumber><Button type =\"primary\"  size=\"middle\" onClick={this.onOk}> 确认</Button>\r\n                </Space>\r\n                <Modal\r\n                destroyOnClose  = {true}\r\n                title=\"查看折线图\" \r\n                visible ={visible}\r\n                width = {1500}\r\n                onCancel = {this.onClose}\r\n                footer={null}\r\n            >\r\n              <ReactEcharts style={{width:'950 px',height:'1000px',margin:'0px'}} option={this.getOption()} />\r\n                {/* <Line {...config} /> */}\r\n            </Modal>\r\n            </div>\r\n        )\r\n      }\r\n  \r\n}\r\nexport default CreateLineChart;","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\component\\ListCard.jsx",["1873","1874"],"import {Component} from 'react';\r\n// antd\r\nimport { Card, Avatar,Space,message } from 'antd';\r\nimport {CheckCircleTwoTone, EditTwoTone,DeleteTwoTone } from '@ant-design/icons';\r\n\r\nimport store from '@/pages/Store/index'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// style\r\nimport   './style.scss'\r\n\r\n// 导入方法\r\nimport {_deleteCard,_useCard} from './functionList'\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,mes){\r\n  if(flag){\r\n      message.success(`${mes}成功`)\r\n\r\n  }else{\r\n      message.error(`${mes}失败`)\r\n  }\r\n}\r\nconst { Meta } = Card;\r\nexport default  class  ListCard extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      id:this.props.message.id,\r\n      title:this.props.message.title,\r\n      cards:this.props.message.cards,\r\n      description:this.props.message.description,\r\n\r\n    }\r\n  }\r\n\r\n  edit = ()=>{\r\n    const  {id,cards,title} = this.state;\r\n    const action ={\r\n      type:\"editCard\",\r\n      id,\r\n      cards,\r\n      title\r\n  }\r\n  store.dispatch(action)\r\n  }\r\n\r\n  delete = ()=>{\r\n    let flag = _deleteCard(this.state.id)\r\n    _message(flag,'删除')\r\n  }\r\n  use = ()=>{\r\n    _useCard(this.state.cards,this.state.id)\r\n  }\r\n\r\n  render(){\r\n    const {title,id,cards} = this.state;\r\n    return(\r\n      <div className= \"card\">\r\n            <Card\r\n              style={{ width: 300 }}\r\n            \r\n              actions={[\r\n              \r\n                <Link to='/Devproject/ProcessingSteps' onClick = {this.use}\r\n                ><CheckCircleTwoTone key = \"use\" twoToneColor=\"#52c41a\" className = 'cardIcon' style = {{fontSize:\"20px\"}} onClick  ={this.use} />\r\n                </Link>,\r\n                <Link to='/Devproject/CreateProcess' onClick = {this.edit}\r\n                ><EditTwoTone key=\"edit\" twoToneColor=\"#284978\" className = 'cardIcon' style = {{fontSize:\"20px\"}}  />\r\n                </Link>,\r\n                <DeleteTwoTone key = 'delete' twoToneColor=\"#ff7875\" className = 'cardIcon' style = {{fontSize:\"20px\"}}  onClick = {this.delete}/>,\r\n              ]}\r\n            >\r\n              <div className = \"content-container\">\r\n              <Space  direction=\"vertical\">\r\n\r\n              {\r\n               \r\n                cards.map((item,index)=>{\r\n                  return(\r\n                    <p className='card-span' id ={item.id} >{item.title}</p>\r\n                  )\r\n                })\r\n              }\r\n                </Space>\r\n              </div>\r\n           \r\n              <Meta \r\n               \r\n                title={(\r\n                  <div className = \"card-title-container\">\r\n                    <span className = \"card-title\">{title}</span>\r\n                    \r\n                  </div>\r\n                )}\r\n                description={`${title}模板处理流程`}\r\n              />\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\component\\functionList.jsx",["1875","1876"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// 引入方法\r\n\r\n/**\r\n * 获取全部数据处理流程\r\n */\r\nexport function _allCard(){\r\n    let cardArr = []\r\n    $.ajax({\r\n        type:\"get\",\r\n        url:hostPort+\"equip/process/findAll\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        success:function(res){\r\n          if(res.flag){\r\n          \r\n            // console.log('07.26 15：08',res.data)\r\n            cardArr=res.data\r\n          }\r\n        },\r\n        error:function(){\r\n          console.log(\"获取失败\")\r\n        }\r\n      })\r\n    const action ={\r\n        type:\"allCard\",\r\n        cardArr\r\n    }\r\n    store.dispatch(action)\r\n    // return cardArr\r\n}\r\n\r\n/**\r\n * 删除流程卡片\r\n */\r\nexport function _deleteCard(cardId){\r\n    let flag = false\r\n    $.ajax({\r\n      type:\"Delete\",\r\n      url:hostPort+\"equip/process/delete/\"+cardId,\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n            flag = true\r\n           _allCard()\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n\r\n    return flag;\r\n}\r\n\r\n/**\r\n * 保存模型\r\n * @param {} cardList \r\n */\r\nexport function _saveCard(cardList){\r\n    let values  = store.getState().DataProcessingreducer.newListTitle\r\n    // console.log(values)\r\n    let flag = false\r\n\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/process/save\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n         // \"id\": 1,\r\n          \"name\": values,\r\n          \"algorithm\": \"defualt\",\r\n          \"creator\": \"admin\",\r\n          \"cards\":cardList ,\r\n          \"title\": values,\r\n          \"description\":values,\r\n          }),\r\n        success:function(res){\r\n          if(res.flag){\r\n            flag = true\r\n\r\n           _allCard()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n  \r\n      })\r\n    return flag;\r\n\r\n}\r\n\r\n/**\r\n * 使用模型\r\n */\r\nexport function _useCard(cards,id){\r\n    const action ={\r\n        type:\"useCard\",\r\n        cards,\r\n        id,\r\n    }\r\n    store.dispatch(action)\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\component\\CreateCard.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\CreateProcess\\CreateProcess.jsx",["1877","1878","1879","1880"],"import React,{Component} from 'react';\r\n\r\n// antd\r\nimport { Transfer ,Button,Space,message} from 'antd';\r\nimport {CloseCircleTwoTone} from '@ant-design/icons';\r\n\r\n// style\r\nimport './style.scss'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// 导入方法\r\nimport {_saveCard,_deleteCard} from '../component/functionList'\r\nimport store from '../../Store';\r\nconst selectList = \r\n  [\r\n    {\r\n      key: 1,\r\n      title: '数据预处理',\r\n      description: '数据预处理',\r\n    },\r\n    {\r\n      key: 2,\r\n      title: '特征提取',\r\n      description: '特征提取',\r\n    },\r\n    {\r\n      key: 3,\r\n      title: '特征筛选',\r\n      description: '特征筛选',\r\n    },\r\n    {\r\n      key: 4,\r\n      title: '时频图像转换',\r\n      description: '时频图像转换',\r\n    },\r\n    {\r\n      key: 5,\r\n      title: '标签管理',\r\n      description: '标签管理',\r\n    },\r\n    {\r\n      key: 6,\r\n      title: '数据集构建',\r\n      description: '数据集构建',\r\n    },\r\n    {\r\n      key: 7,\r\n      title: '模型训练',\r\n      description: '模型训练',\r\n    },\r\n    {\r\n      key: 8,\r\n      title: '模型校验',\r\n      description: '模型校验',\r\n    },\r\n    {\r\n      key: 9,\r\n      title: '寿命预测',\r\n      description: '寿命预测',\r\n      \r\n    },\r\n    {\r\n      key: 10,\r\n      title: '状态评估',\r\n      description: '状态评估',\r\n    },\r\n    {\r\n      key: 11,\r\n      title: '算法管理',\r\n      description: '算法管理',\r\n    },\r\n    {\r\n      key: 12,\r\n      title: '模型评估',\r\n      description: '模型评估',\r\n    },\r\n  ]\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,mes){\r\n  if(flag){\r\n      message.success(`${mes}成功`)\r\n\r\n  }else{\r\n      message.error(`${mes}失败`)\r\n  }\r\n}\r\n\r\nexport default class CreateProcess extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            targetKeys: store.getState().DataProcessingreducer.targetKeys,\r\n            selectedKeys: [],\r\n            disabled: false,\r\n            // flag:'',\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    handleStoreChange=()=>{\r\n      this.setState({\r\n        targetKeys: store.getState().DataProcessingreducer.targetKeys,\r\n        cardid:store.getState().DataProcessingreducer.itemid,\r\n        // flag:store.getState().DataProcessingreducer.flag\r\n      })\r\n    }\r\n    handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        this.setState({ targetKeys: nextTargetKeys });\r\n    \r\n        console.log('targetKeys: ', nextTargetKeys);\r\n        // console.log('moveKeys: ', moveKeys);\r\n      };\r\n    \r\n    handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\r\n    };\r\n    // 新建\r\n    onNewCard =()=>{\r\n      let executList = []\r\n      this.state.targetKeys.map((seleted)=>{\r\n        selectList.map((item,index)=>{\r\n          if(item.key ===seleted){\r\n            executList.push({\r\n              \"title\":item.title,\r\n              \"description\":item.description\r\n            })\r\n          }\r\n        })\r\n      })\r\n      // console.log('executList',executList)\r\n     \r\n      let flag = _saveCard(executList)\r\n      _message(flag,'新建')\r\n    }\r\n    // 保存\r\n    onSave =()=>{\r\n      // 先删除再新建\r\n      let id = store.getState().DataProcessingreducer.itemid\r\n      _deleteCard(id)\r\n      let executList = []\r\n      this.state.targetKeys.map((seleted)=>{\r\n        selectList.map((item,index)=>{\r\n          if(item.key ===seleted){\r\n            executList.push({\r\n              \"title\":item.title,\r\n              \"description\":item.description\r\n            })\r\n          }\r\n        })\r\n      })\r\n      // console.log('executList',executList)\r\n     \r\n      \r\n      let flag = _saveCard(executList)\r\n      _message(flag,'保存')\r\n\r\n    }\r\n    \r\n    // 生成item\r\n    renderItem = item => {\r\n        const customLabel = (\r\n          <div className = \"card-item\">\r\n            <span className=\"custom-item\">\r\n              {item.title} \r\n            </span>\r\n          </div>\r\n         \r\n        );\r\n        return {\r\n          label: customLabel, // for displayed item\r\n          value: item.title, // for title and filter matching\r\n        };\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { targetKeys, selectedKeys } = this.state;\r\n        // console.log('targetKeys',targetKeys)\r\n        return(\r\n            <>\r\n            <Space style = {{marginBottom:\"20px\"}}>\r\n            <Link to='/Devproject/DataProcessing' ><CloseCircleTwoTone twoToneColor=\"#284978\"  style = {{fontSize:\"30px\"}} /></Link>\r\n            <Link to='/Devproject/DataProcessing' >\r\n              {\r\n                targetKeys.length === 0 ?   <Button className = \"normalBtn\" onClick = {this.onNewCard}>新建</Button> :  <Button className = \"normalBtn\" onClick = {this.onSave}>保存</Button> \r\n              }\r\n            </Link>\r\n             \r\n          \r\n            <Button className = \"normalBtn\" onClick = {this.start}>开始</Button>\r\n            </Space>\r\n \r\n            <Transfer\r\n              dataSource={selectList}\r\n              titles={['选择列表', '执行顺序']}\r\n              targetKeys={targetKeys}\r\n              selectedKeys={selectedKeys}\r\n              onChange={this.handleChange}\r\n              onSelectChange={this.handleSelectChange}\r\n              render={this.renderItem}\r\n              operations ={['进入选择列表', '返回执行顺序']}\r\n              listStyle = {listStyle}\r\n              style={{ marginBottom: 16 }}\r\n            />\r\n          </>\r\n        )\r\n    }\r\n} \r\n\r\nconst listStyle = {\r\n  width :\"300px\",\r\n  height:\"500px\",\r\n  fontSize:\"20px\"\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\store\\DataProcessingreducer.js",["1881","1882"],"\r\nconst selectList = \r\n[\r\n  {\r\n    key: 1,\r\n    title: '数据预处理',\r\n    description: '数据预处理',\r\n  },\r\n  {\r\n    key: 2,\r\n    title: '特征提取',\r\n    description: '特征提取',\r\n  },\r\n  {\r\n    key: 3,\r\n    title: '特征筛选',\r\n    description: '特征筛选',\r\n  },\r\n  {\r\n    key: 4,\r\n    title: '时频图像转换',\r\n    description: '时频图像转换',\r\n  },\r\n  {\r\n    key: 5,\r\n    title: '标签管理',\r\n    description: '标签管理',\r\n  },\r\n  {\r\n    key: 6,\r\n    title: '数据集构建',\r\n    description: '数据集构建',\r\n  },\r\n  {\r\n    key: 7,\r\n    title: '模型训练',\r\n    description: '模型训练',\r\n  },\r\n  {\r\n    key: 8,\r\n    title: '模型校验',\r\n    description: '模型校验',\r\n  },\r\n  {\r\n    key: 9,\r\n    title: '寿命预测',\r\n    description: '寿命预测',\r\n    \r\n  },\r\n  {\r\n    key: 10,\r\n    title: '状态评估',\r\n    description: '状态评估',\r\n  },\r\n  {\r\n    key: 11,\r\n    title: '算法管理',\r\n    description: '算法管理',\r\n  },\r\n  {\r\n    key: 12,\r\n    title: '模型评估',\r\n    description: '模型评估',\r\n  },\r\n]\r\n\r\nconst defaultState = {\r\n\r\n    list:[],//所有的模型\r\n    itemid:'',//当前正在处理的模型的id  \r\n    newListTitle:'123',//正在处理的模型的title\r\n    newBoardList:'',//当前左边的选项卡\r\n    targetKeys:[],//当前执行列表的item key\r\n    flag:\"new\" , //当前是新建还是保存\r\n    cards:[], //当前执行列表的内容\r\n}\r\n\r\n\r\n// let itemid\r\n//reducer可以接受state，但是不能修改state，所以必须要拷贝一份\r\nconst DataProcessingreducer = (state=defaultState,action)=>{\r\n    // console.log('action',action)\r\n    // 获取全部模型\r\n    if(action.type === 'allCard'){\r\n      const newState = JSON.parse(JSON.stringify(state));\r\n      newState.itemid  = null\r\n      newState.list = action.cardArr\r\n      // console.log('  newState.list',  newState.list)\r\n     return newState;\r\n  }\r\n  // 新建模型\r\n    if(action.type === 'createCard'){\r\n        const newState = JSON.parse(JSON.stringify(state));\r\n      newState.targetKeys = []\r\n      newState.flag = \"new\"\r\n        newState.newListTitle = action.cardTitle\r\n        // console.log('  newState.newListTitle',  newState.newListTitle)\r\n       return newState;\r\n    }\r\n\r\n    // 编辑模型\r\n    if(action.type === 'editCard'){\r\n      const newState = JSON.parse(JSON.stringify(state));\r\n      let cards = action.cards\r\n      newState.itemid = action.id\r\n      newState.flag = \"save\"\r\n      newState.newListTitle = action.title\r\n      let targetKeys = []\r\n      cards.map((item,index)=>{\r\n        selectList.map((seleted,index)=>{\r\n          if(item.title === seleted.title){\r\n            targetKeys.push(seleted.key)\r\n          }\r\n        })\r\n      })\r\n      // console.log(targetKeys,'targetKeys')\r\n      newState.targetKeys = targetKeys\r\n     return newState;\r\n  }\r\n\r\n  // 使用模型\r\n  if(action.type === 'useCard'){\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.cards = action.cards\r\n    newState.itemid = action.id\r\n    return newState;\r\n  }\r\n\r\n   \r\n    return state;  //state存放的是所有的信息，整个store仓库里存储的数据 action指用户传过来的那句话\r\n}\r\nexport default DataProcessingreducer","D:\\前端学习\\devproject\\demo\\src\\pages\\DataProcessing\\ProcessingSteps\\index.jsx",["1883","1884"],"D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\store\\Preprocessingreducer.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\functionList.jsx",["1885","1886","1887","1888"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n/**\r\n * 时序数据\r\n */\r\n/**\r\n * 查看数据\r\n */\r\nexport function _checkDialog(id){\r\n    let dataTable ={\r\n      length:\"\",\r\n      data:[],\r\n      column:[\r\n        {\r\n          title: '采样时间',\r\n          dataIndex: '第1列',\r\n          key: '第1列',\r\n          width:100,\r\n\r\n        },\r\n      ],\r\n    }\r\n    let data=[]\r\n    $.ajax({\r\n      type:\"get\",\r\n     url:hostPort+\"equip/file/read/\"+id,\r\n      // url:hostPort+\"equip/sequence/read/1279625219525873665\",\r\n      dataType:'JSON',\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n          dataTable.length = res.data.length-1\r\n          // 第0列是乱码\r\n          data = res.data.splice(1) \r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    // 处理数据\r\n     let index //传感器个数\r\n    data.map((item,j)=>{\r\n       index = 0\r\n      for(var prop in item){\r\n        if(prop=='第1列'){\r\n          // 第一列 修改为\r\n          item[\"第1列\"] = j;\r\n        }else{\r\n          index++;\r\n        }\r\n      } \r\n    })\r\n    dataTable.data = data\r\n    // 生成列\r\n    for(var i=1;i<=index;i++){\r\n      dataTable.column.push({\r\n        title:`传感器${i}`,\r\n        dataIndex:`第${i+1}列`,\r\n        key:`第${i+1}列`,\r\n        width:100,\r\n      })\r\n    }\r\n    return dataTable;\r\n}\r\n\r\nexport function _preProcessing(id,algorithm,record){\r\n  let returnData\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/sequence/preProcess\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      //这里目前选用的id是原始文件的id，正常情况下是选择原始文件或结果文件，后续需要对这里做一个修改，加上一个判断。\r\n      \"id\":id, \r\n        algorithm: 1,\r\n      }),\r\n    success:function(res){\r\n      if(res.flag){\r\n      returnData=res.data\r\n      flag = true\r\n      const action = {\r\n        type :\"preProcessing\",\r\n        algorithm,\r\n        returnData,\r\n        record,\r\n        id,\r\n      }\r\n      store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'数据预处理')\r\n}\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 振动数据\r\n */\r\nexport function _vibpreProcessing(id,algorithm,record){\r\n  let returnData\r\n  let flag = false\r\n  if(algorithm == ''){\r\n    _message(false,'获取算法')\r\n\r\n  }else{\r\n    $.ajax({\r\n      type:\"POST\",\r\n      url:hostPort+\"equip/vibration/preprocess?setId=\"+id+'&algorithm='+algorithm,\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n        returnData=res.data\r\n        flag = true\r\n        const action = {\r\n          type :\"vibpreProcessing\",\r\n          algorithm,\r\n          returnData,\r\n          record,\r\n          id,\r\n        }\r\n        store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    _message(flag,'数据预处理')\r\n  }\r\n  return 1;\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\store\\ModelTrainingreducer.js",["1889"],"const dataStorage={\r\n  taskList:[],\r\n  tableData:[\r\n    {\r\n      originID:\"\",//\r\n      preprocessedID:\"\",//未训练但预处理完的ID\r\n      datasetName:\"\", //文件名\r\n      resultID:\"\", //训练完成的ID\r\n    }\r\n  ],\r\n  modelTrainingTable:[{\r\n    modelName:'模型1',\r\n    algorithm:'长短时记忆循环神经网络',\r\n    neuronsNumber:'32',\r\n    netNum:'2',\r\n    Dropout:'5',\r\n    learningRate:'0.001',\r\n    numEpochs:'2',\r\n    trainingTime:'2.8min',\r\n    id:1\r\n  },{\r\n    modelName:'模型2',\r\n    id:2\r\n  }\r\n  ],\r\n  totalCount:'',\r\n  key:'',//当前选中的树节点\r\n  ModelTrainingID:1,//当前选中的处理文件的ID\r\n  fileName: '数据集1', //预处理结束，进行模型训练的文件名\r\n \r\n \r\n  \r\n\r\n  imageModelTraining:{\r\n    modelTrainingTable:[],\r\n    /**\r\n     * {\r\n  \"classifierLr\": \"string\",\r\n  \"convolutionalLayers\": \"string\",\r\n  \"dropOut\": \"string\",\r\n  \"epochLength\": \"string\",\r\n  \"id\": \"string\",\r\n  \"learningRate\": \"string\",\r\n  \"method\": 0,\r\n  \"modelFileId\": \"string\",\r\n  \"name\": \"string\",\r\n  \"netNum\": \"string\",\r\n  \"neuronsNumber\": \"string\",\r\n  \"numEpochs\": \"string\",\r\n  \"outPutConfPath\": \"string\",\r\n  \"outPutModelPath\": \"string\",\r\n  \"poolingLayers\": \"string\",\r\n  \"resultFile\": \"string\",\r\n  \"rpnLr\": \"string\",\r\n  \"setId\": \"string\",\r\n  \"sourceFile\": \"string\"\r\n}\r\n     */\r\n    tableData:[\r\n       \r\n    ],\r\n    chooseDataset:[\r\n      {\r\n        \"filename\":\"455\",\r\n        \"time\":\"555\",\r\n        \"device\":\"555\",\r\n        \"unit\":\"555\",\r\n        \"method\":\"555\",\r\n        \"code\":\"555\"\r\n      },  \r\n      ]\r\n  },\r\n\r\n  vibModelTraining:{\r\n    taskTable:[\r\n      {\r\n        id:\"\",\r\n        name:\"\",\r\n        minNum:\"\",\r\n        lr:\"\",\r\n        iterNum:\"\", \r\n        status:\"\", \r\n      }\r\n    ],\r\n    modelList:[\r\n      {\r\n        id:\"\",\r\n        name:\"\",\r\n        minNum:\"\",\r\n        lr:\"\",\r\n        iterNum:\"\", \r\n        status:\"\", \r\n      }\r\n    ],\r\n    totalCount:0\r\n  },\r\n\r\n  flag:0,//0表示未处理,1表示正在处理,2表示处理完毕\r\n\r\n  modelConstructorValue:null,\r\n\r\n  dataType:1 \r\n  /**\r\n   * 图像数据  dataType:1\r\n时序数据  dataType:2\r\n振动数据  dataType:3\r\n   */\r\n \r\n\r\n}\r\n//reducer可以接受state，但是不能修改state，所以必须要拷贝一份\r\nconst ModelTrainingreducer = (state=dataStorage,action)=>{    \r\n/**\r\n * 时序数据\r\n */\r\n  //初始化加载\r\n  if(action.type==='preProcessing'){  \r\n    const newState=JSON.parse(JSON.stringify(state));\r\n    newState.tableData[0].datasetName = action.record.datasetName\r\n    newState.tableData[0].originID = action.id \r\n    newState.tableData[0].preprocessedID = action.returnData.resultFileId //预处理结束的id\r\n    newState.dataType = 2\r\n    return newState; \r\n  }\r\n  //模型列表\r\n  if(action.type ==='sequenceModelList'){\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.modelTrainingTable = action.returnData.pageList\r\n    // console.log(  newState.modelTrainingTable,'  newState.modelTrainingTable')\r\n    return newState\r\n  }\r\n\r\n/**\r\n * 图像数据\r\n */\r\n// 初始化\r\n  if(action.type ==='modelConstruct'){\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.imageModelTraining.tableData[0]=action.dataset \r\n    newState.dataType = 1\r\n    return newState\r\n  }\r\n// 提交模型训练\r\nif(action.type === 'ImagemodelTrainingSubmit'){\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  newState.imageModelTraining.tableData[0].trainStatus = '已完成'\r\n  return newState;\r\n}\r\n// 刷新模型列表\r\nif(action.type === 'ImagemodelList'){\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  newState.imageModelTraining.modelTrainingTable=action.returnDataList\r\n  return newState;\r\n}\r\n\r\n/**\r\n * 振动数据\r\n */\r\n// 模型创建\r\nif(action.type === 'vibModelCreate'){\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  newState.dataType = 3\r\n  let e =action.res.data\r\n  newState.vibModelTraining.taskTable[0] = {\r\n    id:e.id,\r\n    name:e.name,\r\n    iterNum:e.iterNum,\r\n    minNum:e.minNum,\r\n    lr:e.lr,\r\n    setId:e.setId,\r\n    status:e.status,\r\n  }\r\n  return newState;\r\n}\r\n\r\nif(action.type === 'vibModelList'){\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  newState.dataType = 3\r\n  newState.vibModelTraining.modelList = []\r\n  action.returnData.map((item,index)=>{\r\n    if(item.fileLocation){\r\n      newState.vibModelTraining.modelList.push(\r\n        {\r\n          ...item,\r\n          state:\"已训练\"\r\n        }\r\n      )\r\n    }else{\r\n      newState.vibModelTraining.modelList.push(\r\n        {\r\n          ...item,\r\n          state:\"未训练\"\r\n        }\r\n      )\r\n    }\r\n  })\r\n  // newState.vibModelTraining.modelList = action.returnData\r\n  newState.vibModelTraining.totalCount = action.totalCount \r\n  return newState;\r\n}\r\n\r\n\r\n    return state;  //state存放的是所有的信息，整个store仓库里存储的数据 action指用户传过来的那句话 \r\n}\r\nexport default ModelTrainingreducer","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\Table1\\tableConfig.js",["1890","1891"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\n// 导入方法\r\n// import {_LinkToList} from './TabTable/components/functionList'\r\nimport ModelTraining from '../component/ModelTraining'\r\n// style\r\nimport '../style.scss'\r\n const tableColumns = [\r\n  {\r\n    title: '数据集名称',\r\n    dataIndex: 'datasetName',\r\n    key: 'datasetName',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n        <ModelTraining   onClick={( )=>{\r\n            return record;\r\n         }}></ModelTraining>\r\n      </Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\ModelTraining.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\functionList.jsx",["1892","1893","1894"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 时序数据模型训练\r\n */\r\nexport function _modelTraining(id,values){\r\n  let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let returnData\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/modal/sequenceTrain\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n        sourceFile:id,\r\n        name:values.name,\r\n        method:2,\r\n        neuronsNumber:values.neuronsNumber,\r\n        learningRate:values.learningRate,\r\n        netNum:2,\r\n        dropOut:0.5,\r\n        numEpochs:100,\r\n      }),\r\n    success : res=>{\r\n      if(res.flag){\r\n        flag = true\r\n        _modelList(1,originID)\r\n        }\r\n    },\r\n    error:function(){\r\n      \r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'模型训练')\r\n}\r\n/**\r\n * 删除模型\r\n */\r\nexport function _deleteModel(id,modelID){\r\n  let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/modal/delete/\"+modelID,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _modelList(1,originID)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _modelList(page,id){\r\n  let returnData\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/modal/selectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10\r\n      // \"queryParameter\": {\r\n      //   \"sourceFile\": id\r\n      // }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n       const action ={\r\n        type:'sequenceModelList',\r\n        returnData,\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 图像数据\r\n */\r\n/**\r\n * 模型训练\r\n */\r\nexport function _imgModelTrainning(modelName,setid,numEpochs,epochLength){\r\n  let trainSetId  =store.getState().DatasetConstructReducer.trainSetId\r\n  let flag = false\r\n  if(trainSetId!=''){\r\n    //获取到训练集id\r\n    let str  = `name=${modelName}&setId=${setid}&modelFileId=666&numEpochs=${numEpochs}&epochLength=${epochLength}&rpnLr=0.00001&classifierLr=0.00001&trainSetId=${trainSetId}`\r\n    $.ajax({\r\n      type:\"post\",\r\n      url:hostPort+\"equip/modal/imageTrain?\"+str,\r\n      //equip/modal/imageTrain\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:res =>{\r\n        if(res.flag){\r\n          flag = true\r\n        //训练完毕  清除已经训练的任务\r\n          _message(flag,'模型训练')          \r\n          _imgModelList()\r\n          const action = {\r\n            type:\"ImagemodelTrainingSubmit\",\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n  }else{\r\n    _message(false,'获取训练集id')\r\n  }\r\n\r\n  return flag;\r\n  \r\n}\r\n/**\r\n * 模型列表刷新\r\n */\r\nexport function _imgModelList(){\r\n      // console.log('refresh')\r\n     \r\n    let returnDataList = []\r\n    let setid = store.getState().DataStoragereducer.fileName[0].id\r\n    // let datasetName = store.getState().DataStoragereducer.fileName[0].name\r\n\r\n        $.ajax({\r\n            type:\"post\",\r\n            url:hostPort+\"equip/modal/selectPage\",\r\n            contentType:\"application/json;charset=UTF-8\",\r\n            dataType:'JSON',\r\n            async:false, //改成异步  就不会锁住浏览器\r\n            data:JSON.stringify({\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": 1,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n               \"setId\":setid\r\n              }\r\n            }),\r\n            success:function(res){\r\n              if(res.flag){\r\n                // console.log(\"res\",res)\r\n              returnDataList = res.data.pageList\r\n              const action = {\r\n                type:\"ImagemodelList\",\r\n                returnDataList,\r\n              }\r\n              store.dispatch(action)\r\n              }\r\n            },\r\n            error:function(){\r\n            }\r\n          })\r\n       \r\n    }\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\Table2\\tableConfig.js",["1895","1896"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\nimport DeleteModel from '../component/DeleteModel'\r\n// 导入方法\r\n// import {_LinkToList} from './TabTable/components/functionList'\r\n\r\n// style\r\nimport '../style.scss'\r\n const tableColumns = [\r\n  {\r\n    title: '模型',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '神经元个数',\r\n    dataIndex: 'neuronsNumber',\r\n    key: 'neuronsNumber',\r\n  },\r\n  {\r\n    title: '网络层数',\r\n    dataIndex: 'netNum',\r\n    key: 'netNum',\r\n  },\r\n  {\r\n    title: 'dropOut',\r\n    dataIndex: 'dropOut',\r\n    key: 'dropOut',\r\n  },\r\n  {\r\n    title: '迭代次数',\r\n    dataIndex: 'numEpochs',\r\n    key: 'numEpochs',\r\n  },\r\n  {\r\n    title: '学习率',\r\n    dataIndex: 'learningRate',\r\n    key: 'learningRate',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n\r\n        <DeleteModel   onClick={( )=>{\r\n            return record;\r\n         }}></DeleteModel>\r\n\r\n       \r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\DeleteModel.jsx",["1897"],"import React, { Component } from 'react';\r\n\r\n// antd\r\nimport {Button,Modal,Space} from 'antd'\r\n\r\n//store\r\nimport store from '@/pages/Store/index'\r\n\r\n// 导入方法\r\nimport {_deleteModel} from './functionList'\r\n// style\r\nimport '../style.scss'\r\nexport default class DeleteModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      datasetID:'',\r\n    };\r\n  }\r\n  \r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    // let record = this.props.onClick();\r\n    // console.log(record)\r\n    this.setState({\r\n      visible: true,\r\n      // datasetID:record.id\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  // 确认删除\r\n  deleteModel =()=>{\r\n    let record = this.props.onClick();\r\n    let id = record.sourceFile\r\n    let modelID  = record.id\r\n    _deleteModel(id,modelID)\r\n    this.onClose()\r\n  }\r\n\r\n\r\n  render() {\r\n    const {visible} = this.state;    \r\n    return (\r\n      <div>\r\n      <Button size=\"small\" type=\"danger\" className =\"deleteBtn\" onClick = {this.onOpen}>\r\n        删除\r\n      </Button>\r\n      <Modal\r\n        title=\"删除\" \r\n        visible ={visible}\r\n        width = {320}\r\n        // onOk ={this.deleteZip}\r\n        onCancel = {this.onClose}\r\n\r\n        footer={(\r\n          <Space >\r\n          <Button  type = \"danger\"  onClick={this.deleteModel}>\r\n            删除\r\n          </Button>\r\n          <Button onClick={this.onClose}>\r\n            取消\r\n          </Button>\r\n       \r\n         </Space>\r\n        )\r\n          \r\n        }\r\n      >\r\n        删除后将不能恢复，是否确认删除！\r\n      </Modal>\r\n      </div>\r\n \r\n    );\r\n  }\r\n}\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\store\\ModelCheckreducer.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\functionList.jsx",["1898"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\nexport function _modelCheck(modelID,modelName){\r\n  let returnData\r\n  let flag = false\r\n  var fd = new FormData();\r\n  fd.append(\"algorithmId\",3);\r\n  fd.append(\"modalId\",modelID);\r\n  $.ajax({\r\n    type:\"POST\",\r\n    ///equip/modal/sequenceTest\r\n    url:hostPort+\"equip/modal/sequenceTest\",\r\n    contentType: false,\r\n    processData: false,\r\n    dataType:'JSON',\r\n    async:true,\r\n    data: fd,\r\n    success:res=>{\r\n      if(res.flag){\r\n        flag = true\r\n        returnData=res.data\r\n        console.log(flag,'flag')\r\n        const action = {\r\n          type:\"modelCheck\",\r\n          modelName,\r\n          modelID,\r\n          returnData,\r\n        }\r\n        store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  }) \r\n  _message(flag,'模型校验')\r\n}\r\n\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _modelList(page,id){\r\n  let returnData\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/modal/selectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10\r\n      // \"queryParameter\": {\r\n      //   \"sourceFile\": id\r\n      // }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n       const action ={\r\n        type:'sequenceModelList',\r\n        returnData,\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\ModelCheck.jsx",["1899"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Table  ,Modal,Pagination} from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../style.scss'\r\nimport tableConfig from './ChooseModel/tableConfig'\r\n// 方法\r\nimport {_modelList,_modelCheck} from './functionList'\r\n\r\nclass ModelCheck extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n            id :store.getState().ModelTrainingreducer.tableData[0].originID,\r\n            modelID:\"\",\r\n            modelName:\"\",\r\n\r\n        }\r\n    store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    componentDidMount(){\r\n      _modelList(1,this.state.id)\r\n    }\r\n\r\n\r\n    handleStoreChange = ()=>{\r\n      this.setState({\r\n          dataType:store.getState().ModelTrainingreducer.dataType,\r\n          modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n      })\r\n  }\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  pageonChange=(page, pageSize)=>{\r\n    // console.log(page, pageSize,'page, pageSize')\r\n    _modelList(page,this.state.id)\r\n  }\r\n\r\n  // 选择模型\r\n  selectChange =(selectedRowKeys, selectedRows)=>{\r\n    this.setState({\r\n      modelID:selectedRowKeys,\r\n      modelName:selectedRows.name\r\n    })\r\n  }\r\n  // 确认模型校验\r\n  modelCheck =()=>{\r\n    _modelCheck(this.state.modelID,this.state.modelName)\r\n  }\r\n    render(){\r\n        const{visible,loading} = this.state;\r\n        const {modelList} = this.state\r\n        const rowSelection = {\r\n          onChange: this.selectChange\r\n        };\r\n        return(\r\n            <div>\r\n                  {/* <Spin  spinning = {loading} tip=\"模型训练中...\">\r\n                </Spin> */}\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                >\r\n                选择模型\r\n                </Button>\r\n                <Modal\r\n                    title=\"模型列表\" \r\n                    visible ={visible}\r\n                    width = {800}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                     <Button\r\n                    // size=\"small\"\r\n                    type=\"normal\"\r\n                    className = \"normalBtn\"\r\n                    onClick={this.modelCheck}\r\n                    >\r\n                    确认选择\r\n                    </Button>\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={modelList} \r\n                       pagination = {false}\r\n                       rowKey = {\"id\"}\r\n                       rowSelection={{\r\n                        type:'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                    />\r\n                      <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n                </Modal>\r\n        \r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default ModelCheck;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelCheck\\component\\ChooseModel\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\store\\LifePredictionreducer.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\functionList.jsx",["1900","1901","1902","1903"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\nexport function _lifePrediction(fileID,modelID,step,datasetName,modelName){\r\n  let returnData\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/modal/sequencePredict\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:\"JSON\",\r\n    async:true,\r\n    data:JSON.stringify({\r\n      modalId:modelID,\r\n      sourceFileId:fileID,\r\n      step:step,\r\n    }),\r\n    success:res =>{\r\n      if(res.flag){\r\n      console.log('res',res)\r\n      }\r\n      const action0 ={\r\n        type:'lifePrediction',\r\n        step,\r\n        fileID,\r\n        modelID,\r\n        datasetName,\r\n        modelName\r\n      }\r\n    store.dispatch(action0)\r\n    },\r\n    error:function(){\r\n    \r\n\r\n    }\r\n  })\r\n  _message(flag,'寿命预测')\r\n}\r\n\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _modelList(page,id){\r\n  let returnData\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/modal/selectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10\r\n      // \"queryParameter\": {\r\n      //   \"sourceFile\": id\r\n      // }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n       const action ={\r\n        type:'sequenceModelList',\r\n        returnData,\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 查看数据\r\n */\r\nexport function _checkDialog(id){\r\n  let dataTable ={\r\n    length:\"\",\r\n    data:[],\r\n    column:[\r\n      {\r\n        title: '采样时间',\r\n        dataIndex: '第1列',\r\n        key: '第1列',\r\n        width:100,\r\n\r\n      },\r\n    ],\r\n  }\r\n  let data=[]\r\n  $.ajax({\r\n    type:\"get\",\r\n   url:hostPort+\"equip/file/read/\"+id,\r\n    // url:hostPort+\"equip/sequence/read/1279625219525873665\",\r\n    dataType:'JSON',\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        dataTable.length = res.data.length-1\r\n        // 第0列是乱码\r\n        data = res.data.splice(1) \r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  // 处理数据\r\n   let index //传感器个数\r\n  data.map((item,j)=>{\r\n     index = 0\r\n    for(var prop in item){\r\n      if(prop=='第1列'){\r\n        // 第一列 修改为\r\n        item[\"第1列\"] = j;\r\n      }else{\r\n        index++;\r\n      }\r\n    } \r\n  })\r\n  dataTable.data = data\r\n  // 生成列\r\n  for(var i=1;i<=index;i++){\r\n    dataTable.column.push({\r\n      title:`传感器${i}`,\r\n      dataIndex:`第${i+1}列`,\r\n      key:`第${i+1}列`,\r\n      width:100,\r\n    })\r\n  }\r\n  return dataTable;\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\ChooseModel\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\LifePrediction.jsx",["1904"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Table ,Upload ,Modal,Pagination,Space,Input} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../style.scss'\r\nimport tableConfig from './ChooseModel/tableConfig'\r\n// 方法\r\nimport {_modelList,_message,_lifePrediction} from './functionList'\r\nimport {hostPort} from '@/Common'\r\n\r\nclass LifePrediction extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n            id :store.getState().ModelTrainingreducer.tableData[0].originID,\r\n            modelID:\"\",\r\n            modelName:\"\",\r\n            step:\"\",\r\n            disabled:false,\r\n            datasetName:\"\",//上传的文件名\r\n\r\n        }\r\n    store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    componentDidMount(){\r\n      _modelList(1,this.state.id)\r\n    }\r\n\r\n\r\n    handleStoreChange = ()=>{\r\n      this.setState({\r\n          dataType:store.getState().ModelTrainingreducer.dataType,\r\n          modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n      })\r\n  }\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  pageonChange=(page, pageSize)=>{\r\n    // console.log(page, pageSize,'page, pageSize')\r\n    _modelList(page)\r\n  }\r\n\r\n  // 选择模型\r\n  selectChange =(selectedRowKeys, selectedRows)=>{\r\n    this.setState({\r\n      modelID:selectedRowKeys,\r\n      modelName:selectedRows.name\r\n    })\r\n  }\r\n\r\n    /**\r\n   * 输入框\r\n   * @param {*} e \r\n   */\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    // console.log(inputValue)\r\n    this.setState({\r\n      step:inputValue\r\n    })\r\n  }\r\n\r\n    // 上传文件\r\n    upload=(info)=> {\r\n      let flag = false\r\n      if (info.file.response) {\r\n          let response = info.file.response\r\n          if(response.flag){\r\n            this.setState({\r\n              fileID:response.data.id,\r\n              datasetName:response.data.name,\r\n            })\r\n          flag = true\r\n          }\r\n      _message(flag,'上传文件')\r\n      }\r\n    } \r\n    // 寿命预测\r\n    lifePrediction =()=>{\r\n      const {fileID,modelID,step,datasetName,modelName}  = this.state;\r\n      _lifePrediction(fileID,modelID,step,datasetName,modelName)\r\n    }\r\n    inputSubmit=()=>{\r\n      this.setState({\r\n        disabled:true\r\n      })\r\n    }\r\n    \r\n    render(){\r\n        const{visible,loading} = this.state;\r\n        const {modelList} = this.state\r\n        const rowSelection = {\r\n          onChange: this.selectChange,\r\n        };\r\n        return(\r\n            <div>\r\n                  {/* <Spin  spinning = {loading} tip=\"模型训练中...\">\r\n                </Spin> */}\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                >\r\n                寿命预测\r\n                </Button>\r\n                <Modal\r\n                    title=\"模型列表\" \r\n                    visible ={visible}\r\n                    width = {800}\r\n                    onCancel = {this.onClose}\r\n                    destroyOnClose  = {true}\r\n                    footer={[\r\n                      <Button key=\"submit\" type=\"primary\" onClick={this.lifePrediction}>寿命预测</Button>\r\n                    ]}\r\n                >\r\n                    <Space >\r\n                      <Input disabled ={this.state.disabled} placeholder =\"请输入步长\" onChange = {this.onChange}/> \r\n                      <Button    className = {\"ModelBtn\"}  onClick = {this.inputSubmit}>确认步长</Button>\r\n                    </Space>\r\n                    <Space >\r\n\r\n                      <Upload \r\n                        showUploadList ={false}\r\n                        name = 'file'\r\n                        onChange = {this.upload}\r\n                        action={hostPort+\"equip/file/upload\"}\r\n                        data={{\r\n                          dataType:2\r\n                        }}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}      type=\"normal\"\r\n                      className = \"normalBtn\">上传文件</Button>\r\n                      </Upload>\r\n                    </Space>\r\n\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={modelList} \r\n                       pagination = {false}\r\n                       rowKey = {\"id\"}\r\n                       rowSelection={{\r\n                        type:'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                    />\r\n                      <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n              \r\n                    \r\n                </Modal>\r\n        \r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default LifePrediction;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\CheckDialog.jsx",["1905"],"import React,{Component} from 'react'\r\n//antd\r\nimport {Button,Modal,Table,InputNumber} from 'antd'\r\n// 导入方法\r\nimport {_checkDialog} from './functionList'\r\n// 导入组件\r\nimport CreateLineChart from './CreateLineChart'\r\nexport default class CheckDialog extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            visible:false,\r\n            column:[],\r\n            dataSource:[],\r\n            disabled:true\r\n        }\r\n    }\r\n\r\n\r\n    CheckZip = ()=>{\r\n        let record =  this.props.onClick()\r\n        this.setState({\r\n            visible:true,\r\n        })\r\n        let dataTable \r\n        if(record){\r\n            let id = record.id\r\n            dataTable = _checkDialog(id)\r\n            this.setState({\r\n                column:dataTable.column,\r\n                dataSource:dataTable.data\r\n            })\r\n        }\r\n   }\r\n\r\n   onClose = ()=>{\r\n       this.setState({\r\n           visible:false,\r\n       })\r\n   }\r\n\r\n    render(){\r\n        const {visible,column,dataSource}  = this.state;\r\n        return(\r\n            <div style={styles.checkDialog}>\r\n\r\n                <Button\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.CheckZip}\r\n  \r\n                >\r\n                查看结果\r\n                </Button>\r\n            <Modal\r\n                destroyOnClose  = {true}\r\n                title=\"查看数据\" \r\n                visible ={visible}\r\n                width = {1500}\r\n                onCancel = {this.onClose}\r\n                footer={null}\r\n            >\r\n                <CreateLineChart max= {this.state.column.length-1} dataSource={dataSource} ></CreateLineChart>\r\n                <Table columns={column} dataSource={dataSource} scroll={{ x: 1000, y: 400 }} ></Table>\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    checkDialog: {\r\n      display: 'inline-block',\r\n      marginRight: '5px',\r\n    },\r\n  };\r\n  ","D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\CreateLineChart.jsx",["1906","1907","1908"],"import React,{Component } from 'react'\r\n// antd\r\nimport {Button,Modal,InputNumber,Space} from 'antd'\r\n\r\nimport {_createChart} from './chart.config.js'\r\n\r\n// echarts\r\n/**\r\n * 说明：第一个import echarts是必须的\r\n * 第二个是引入的具体的一个图表类型 （可选）\r\n * 第三个是表的title(可选)\r\n */\r\nimport echarts from 'echarts/lib/echarts' \r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nclass CreateLineChart extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            num:'',\r\n            visible:false,\r\n            dataSource:[],\r\n            max:\"\",\r\n            min:\"\",\r\n        }\r\n    }\r\n\r\n    onOk=()=>{\r\n        let valueArr = []\r\n        let xArr =[]\r\n        this.props.dataSource.map((item,index)=>{\r\n            // 拿出每一个对象中的 “第num+1列” 的数据\r\n                valueArr.push(item[`第${this.state.num+1}列`])\r\n                xArr.push(index)\r\n        })\r\n        let max= valueArr[0]\r\n        let min = valueArr[0]\r\n        let dataSource = []\r\n\r\n        valueArr.map((item,index)=>{\r\n          if(item>max){\r\n              max= item\r\n            }\r\n            if(item<min){\r\n              min= item\r\n            }\r\n            dataSource.push([\r\n              index,Number(item)\r\n            ])\r\n      })\r\n       max = Math.ceil(max) //向上取整\r\n       min = parseInt(min) //向下取整\r\n      this.setState({\r\n        max:max,min:min,dataSource:dataSource,\r\n        visible:true,\r\n      })\r\n    }\r\n\r\n    // 数字输入框改变\r\n    onChange=(value)=>{\r\n        this.setState({\r\n            num:value\r\n        })\r\n    }\r\n    // 关闭\r\n    onClose=()=>{\r\n        this.setState({\r\n            visible:false,\r\n        })\r\n    }\r\n    getOption=()=>{\r\n      const {max,min,dataSource} = this.state;\r\n      let result = _createChart(max,min,dataSource)\r\n      return result;\r\n    }\r\n\r\n      render(){\r\n          const {visible} = this.state;\r\n      \r\n        \r\n        return(\r\n            <div>\r\n                <Space>\r\n                <span>请输入需要生成折线图的传感器编号：</span><InputNumber min={1} max={this.props.max}  onChange = {this.onChange}>\r\n                        </InputNumber><Button type =\"primary\"  size=\"middle\" onClick={this.onOk}> 确认</Button>\r\n                </Space>\r\n                <Modal\r\n                destroyOnClose  = {true}\r\n                title=\"查看折线图\" \r\n                visible ={visible}\r\n                width = {1500}\r\n                onCancel = {this.onClose}\r\n                footer={null}\r\n            >\r\n              <ReactEcharts style={{width:'950 px',height:'1000px',margin:'0px'}} option={this.getOption()} />\r\n            </Modal>\r\n            </div>\r\n        )\r\n      }\r\n  \r\n}\r\nexport default CreateLineChart;","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\store\\TagManagementreducer.js",["1909","1910"],"const dataStorage={\r\n  imagedata:{\r\n    zipTable :[\r\n      {\r\n       /**\r\n        * \r\n  downloadURL: \"http://192.168.1.173:9001/equip/file/download/1358301830383144962\"\r\nid: \"1358301830383144962\"\r\nimporter: \"admin\"\r\nmenuId: \"1335756991540236289\"\r\nname: \"test123\"\r\nnodeName: \"图像数据\"\r\nstate: \"done\"\r\n        */\r\n      }\r\n    ],\r\n    \r\n    datasetID:'',//数据集id\r\n\r\n    TagNum:'', //有标签的图片的数量\r\n\r\n  },\r\n  zipMsg:{\r\n    id:\"\",\r\n    name:\"\",\r\n    nodeName:\"\",//节点名称\r\n    menuId:\"\",//节点id\r\n  }, //当前压缩包信息\r\n\r\n  totalCount:'',\r\n  key:'',//当前选中的树节点\r\n  ModelTrainingID:1,//当前选中的处理文件的ID\r\n  fileName: '数据集1', //预处理结束，进行模型训练的文件名\r\n \r\n\r\n  flag:0,//0表示未处理,1表示正在处理,2表示处理完毕\r\n\r\n  dataType:1 ,\r\n  /**\r\n   * 图像数据  dataType:1\r\n时序数据  dataType:2\r\n振动数据  dataType:3\r\n   */\r\n  vibTable:{\r\n    \r\n    taskTable:[{\r\n    datasetName:\"\" , // 数据集名称\r\n    transformedID:\"\", //时频图像转换结果id\r\n  }],\r\n    imageTable:[{\r\n\r\n    }],\r\n    totalCount:\"\"\r\n  },\r\n  \r\n \r\n\r\n}\r\n//reducer可以接受state，但是不能修改state，所以必须要拷贝一份\r\nconst TagManagementreducer = (state=dataStorage,action)=>{    \r\n\r\n      /**\r\n      * 流程按钮\r\n      */\r\n     if(action.type==='imageFileID'){    //当前选择的文件ID\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      // console.log(action)\r\n      newState.dataType = 1\r\n      newState.zipMsg = {...action.record}\r\n      return newState;\r\n     }\r\n    //获取压缩包中的文件\r\n    if(action.type ==='getZipData'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.datasetName = action.datasetName\r\n      newState.dataType = 1\r\n      newState.imagedata.zipTable = []\r\n      newState.totalCount = action.totalCount\r\n      newState.imagedata.TagNum = 0\r\n      action.pageList.map((item,index)=>{\r\n        if(item.labelFileLocation==null){\r\n          //没有标签\r\n          if(item.setType ===null){\r\n            //没有划分\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'否',\r\n              setType:'未划分', \r\n  \r\n            })\r\n          }else{\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'否',\r\n              setType:item.setType, \r\n  \r\n            })\r\n       \r\n          }\r\n        }else{\r\n          if(item.setType ===null){\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'是',\r\n              setType:'未划分', \r\n            })\r\n          }else{\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'是',\r\n              setType:item.setType, \r\n            })\r\n          }\r\n\r\n\r\n          newState.imagedata.TagNum++\r\n\r\n        }\r\n      })\r\n      // console.log('newstate.imagedata.ziptable', newState.imagedata.zipTable)\r\n      return newState;\r\n     }\r\n\r\n     /**\r\n      * 振动数据\r\n      */\r\n    //  时频图像转换结束\r\n    if(action.type==='vibtransform'){ \r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      // console.log(action,'action')\r\n      newState.dataType = 3\r\n      newState.vibTable.totalCount = action.returnData.picNum\r\n      newState.vibTable.taskTable[0].datasetName = action.record.datasetName+\"(已转换)\"\r\n      newState.vibTable.taskTable[0].importer = 'admin'\r\n      newState.vibTable.taskTable[0].nodeName = action.record.nodeName\r\n      newState.vibTable.taskTable[0].importTime =new Date();\r\n      newState.vibTable.taskTable[0].transformedID = action.returnData.id\r\n      return newState;\r\n     }\r\n\r\n     if(action.type==='vibPngSelectPage'){ \r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.dataType = 3\r\n      newState.vibTable.imageTable = []\r\n      newState.vibTable.totalCount = action.totalCount\r\n      action.pageList.map((item,index)=>{\r\n        if(item.label === null) {\r\n          // 未标注\r\n          if(item.divideType === null){\r\n            // 未划分\r\n            newState.vibTable.imageTable.push({\r\n              ...item,\r\n              labelOrnot:\"未标注\",\r\n              divideOrnot:\"未划分\",\r\n            })\r\n          }else{\r\n            newState.vibTable.imageTable.push({\r\n              ...item,\r\n              labelOrnot:\"未标注\",\r\n              divideOrnot:item.divideType,\r\n            })\r\n          }\r\n         \r\n        }else{\r\n          if(item.divideType === null){\r\n            // 未划分\r\n            newState.vibTable.imageTable.push({\r\n              ...item,\r\n              labelOrnot:'已标注',\r\n              divideOrnot:\"未划分\",\r\n            })\r\n          }else{\r\n            newState.vibTable.imageTable.push({\r\n              ...item,\r\n              labelOrnot:'已标注',\r\n              divideOrnot:item.divideType,\r\n            })\r\n          }\r\n         \r\n        }\r\n      })\r\n\r\n      return newState;\r\n     }\r\n\r\n\r\n\r\n    return state;  //state存放的是所有的信息，整个store仓库里存储的数据 action指用户传过来的那句话 \r\n}\r\nexport default TagManagementreducer","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\Table1\\tableConfig.js",["1911","1912"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space,Cascader} from 'antd'\r\n\r\n// 导入方法\r\nimport {_deleteLabel} from '../component/functionList'\r\nimport UploadLabel from '../component/UploadLabel'\r\nimport ViewImg from '../component/ViewImg'\r\n// style\r\nimport '../style.scss'\r\n\r\n\r\n const tableColumns = [\r\n  {\r\n    title: '图片名',\r\n    dataIndex: 'imageName',\r\n    key: 'imageName',\r\n  },\r\n  {\r\n    title: \"标签名\",\r\n    dataIndex: 'labelName',\r\n    key: 'labelName',\r\n  },\r\n  {\r\n    title: \"是否标注\",\r\n    dataIndex: 'tag',\r\n    key: 'tag',\r\n    filters: [\r\n      {\r\n        text: '是',\r\n        value: '是',\r\n      },\r\n      {\r\n        text: '否',\r\n        value: '否',\r\n      },\r\n    ],\r\n    // specify the condition of filtering result\r\n    // here is that finding the name started with `value`\r\n    onFilter: (value, record) => record.tag.indexOf(value) === 0,\r\n    sortDirections: ['descend'],\r\n  \r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n          {/* 查看图片 */}\r\n          <ViewImg  onClick={( )=>{\r\n            return record;\r\n         }}></ViewImg>\r\n        <UploadLabel   onClick={( )=>{\r\n            return record;\r\n         }}></UploadLabel>\r\n\r\n            {/* 删除标签 */}\r\n            <Button \r\n          className = \"deleteBtn\"\r\n          type =\"danger\" \r\n          onClick={()=>{\r\n          _deleteLabel(text.id)\r\n          }}\r\n        >删除标签</Button>\r\n      </Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\component\\functionList.jsx",["1913","1914"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message,Image  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 查看压缩包\r\n */\r\nexport function _checkZip(page,id,datasetName){\r\n  let pageList = []\r\n  let totalCount = \"\"\r\n\r\n  $.ajax({\r\n      type:\"post\",\r\n      url:hostPort+\"equip/image/findOneSelectPage\",\r\n      dataType:'JSON',\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      async:false,\r\n      data:JSON.stringify(\r\n          {\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": page,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n                \"setId\": id\r\n              }\r\n            }\r\n        ),\r\n      success:function(res){\r\n        if(res.flag){ \r\n         pageList = res.data.pageList\r\n         totalCount = res.data.totalCount\r\n         const action = {\r\n          type:'getZipData',\r\n          pageList,\r\n          datasetName,\r\n          id,\r\n          totalCount\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n        // console.log('10:53',dataConfig10)\r\n      },\r\n      error:function(){\r\n      }\r\n  })\r\n}\r\n/**\r\n * 删除标签\r\n */\r\nexport function _deleteLabel(imageID){\r\n  let e  =  []\r\n  e.push(imageID.toString())\r\n  let id = store.getState().TagManagementreducer.zipMsg.id\r\n  let name = store.getState().TagManagementreducer.zipMsg.name\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"DELETE\",\r\n    url:hostPort+\"equip/image/deleteLabel\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify(\r\n        e\r\n    ),\r\n    async:false,\r\n    success:res=>{\r\n      if(res.flag){\r\n          //要刷新\r\n          flag =  true\r\n          _checkZip(1,id,name)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除标签')\r\n}\r\n\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\component\\UploadLabel.jsx",["1915","1916"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Upload  ,Modal} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport {hostPort} from '@/Common'\r\nimport store from '@/pages/Store/index'\r\n\r\n// style\r\nimport '../style.scss'\r\n\r\n// 导入方法\r\nimport {_message,_checkZip} from './functionList'\r\nclass UploadLabel extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n       \r\n        }\r\n    }\r\n\r\n\r\n  onChange=(info)=> {\r\n\r\n    if (info.file.response) {\r\n      let flag = false\r\n        let response = info.file.response\r\n        if(response.flag){\r\n          flag = true\r\n          let id = store.getState().TagManagementreducer.zipMsg.id\r\n          let name = store.getState().TagManagementreducer.zipMsg.name\r\n          _checkZip(1,id,name)\r\n        _message(flag,'上传标签文件')\r\n        }else{\r\n          _message(flag,'上传标签文件')\r\n        }\r\n    }\r\n  }\r\n    render(){\r\n        const{visible} = this.state;\r\n        const props = {\r\n          // name: 'file',\r\n          action: `${hostPort}equip/image/addLabel`,\r\n          onChange:this.onChange,\r\n          showUploadList:false,\r\n          \r\n      }\r\n      let record = this.props.onClick();\r\n\r\n        return(\r\n            <div>\r\n                   <Upload {...props}\r\n                            // action={hostPort+\"equip/image/uploadImageSets\"}\r\n                            data={{\r\n                              imageId:record.id,  //压缩包id\r\n                            }}\r\n                            >\r\n                                \r\n                        <Button \r\n                        className = \"normalBtn\"\r\n                        icon={<UploadOutlined />}>上传标签</Button>\r\n                    </Upload>\r\n       \r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default UploadLabel;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\component\\ViewImg.jsx",["1917"],"// antd\r\nimport {Button,Image,Modal} from 'antd'\r\nimport {hostPort} from '@/Common'\r\n\r\nimport React, { useState,Component  } from 'react';\r\nexport default class ViewImg extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      visible:false,\r\n      content:null,\r\n    }\r\n  }\r\n\r\n  onOpen =()=>{\r\n    let record = this.props.onClick()\r\n    // console.log('record',record)\r\n    let content = (\r\n    <Image\r\n    width={200}\r\n    src={`${hostPort}equip/image/view?imageId=${record.id}&type=image`}\r\n  />\r\n    )\r\n    this.setState({\r\n      visible:true,\r\n      content:content,\r\n    })\r\n  }\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {visible} = this.state;\r\n    return(\r\n      <div>\r\n      <Button \r\n       onClick={this.onOpen}\r\n      >查看图片</Button>\r\n      \r\n      <Modal\r\n        title=\"查看图片\" \r\n        visible={visible}\r\n        onCancel={this.onClose}\r\n        width = {320}\r\n        footer={null}\r\n      >\r\n       {this.state.content}\r\n\r\n      </Modal>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\Table1\\tableConfig.js",["1918","1919"],"import {Component} from 'react'\r\n// antd\r\nimport {Space} from 'antd'\r\n\r\n// 导入方法\r\nimport {_deleteLabel} from '../component/functionList'\r\nimport ViewImg from '../component/ViewImg'\r\n// style\r\nimport '../style.scss'\r\n\r\n\r\n const tableColumns = [\r\n  {\r\n    title: '图片名',\r\n    dataIndex: 'imageName',\r\n    key: 'imageName',\r\n  },\r\n  {\r\n    title: \"标签名\",\r\n    dataIndex: 'labelName',\r\n    key: 'labelName',\r\n  },\r\n  {\r\n    title: \"是否标注\",\r\n    dataIndex: 'tag',\r\n    key: 'tag',\r\n  },\r\n  {\r\n    title: \"划分类别\",\r\n    dataIndex: 'setType',\r\n    key: 'setType',\r\n    filters: [\r\n      {\r\n        text: '未划分',\r\n        value: '未划分',\r\n      },\r\n      {\r\n        text: '测试集',\r\n        value: '测试集',\r\n      },\r\n      {\r\n        text: '训练集',\r\n        value: '训练集',\r\n      },\r\n    ],\r\n    onFilter: (value, record) => record.setType.indexOf(value) === 0,\r\n    sortDirections: ['descend'],\r\n  \r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n          {/* 查看图片 */}\r\n          <ViewImg  onClick={( )=>{\r\n            return record;\r\n         }}></ViewImg>\r\n      </Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\functionList.jsx",["1920","1921","1922"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message,Image  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n/**\r\n * 查看压缩包\r\n */\r\nexport function _checkZip(page,id,datasetName){\r\n  let pageList = []\r\n  let totalCount = \"\"\r\n  $.ajax({\r\n      type:\"post\",\r\n      url:hostPort+\"equip/image/findOneSelectPage\",\r\n      dataType:'JSON',\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      async:false,\r\n      data:JSON.stringify(\r\n          {\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": page,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n                \"setId\": id\r\n              }\r\n            }\r\n        ),\r\n      success:function(res){\r\n        if(res.flag){ \r\n         pageList = res.data.pageList\r\n         totalCount = res.data.totalCount\r\n         const action = {\r\n          type:'getZipData',\r\n          pageList,\r\n          datasetName,\r\n          id,\r\n          totalCount\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n        // console.log('10:53',dataConfig10)\r\n      },\r\n      error:function(){\r\n      }\r\n  })\r\n}\r\n\r\n/**\r\n * 批量划分\r\n */\r\nexport function _batchDivide(data){\r\n  let flag = false\r\n\r\n  let id = store.getState().DatasetConstructReducer.zipMsg.id\r\n  let name = store.getState().DatasetConstructReducer.zipMsg.name\r\n      $.ajax({\r\n        type:\"post\",\r\n        url:hostPort+\"equip/image/divideOne?\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify(\r\n            data\r\n        ),\r\n        success:res=>{\r\n          flag =  true\r\n          _checkZip(1,id,name)\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n  _message(flag,'批量划分')\r\n\r\n}\r\n\r\n/**\r\n * 自动划分\r\n */\r\nexport function _autoDivide(trainingNum){\r\n  let flag = false\r\n  let id = store.getState().DatasetConstructReducer.zipMsg.id\r\n  let name = store.getState().DatasetConstructReducer.zipMsg.name\r\n  let testSetId //放测试集id\r\n  let trainSetId //放训练集id\r\n  $.ajax({\r\n    type:\"post\",\r\n    //POST /equip/image/divide\r\n        //Request URL: http://192.168.1.173:9001/equip/image/divide?setId=1310499653518737409&train=2\r\n    url:hostPort+\"equip/image/divide?setId=\"+id+'&train='+trainingNum,\r\n    contentType:\"application/json\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success:res=>{\r\n      flag =  true\r\n        _checkZip(1,id,name)\r\n            //划分后自动刷新\r\n            testSetId = res.data[1].id\r\n            trainSetId = res.data[0].id\r\n            const action = {\r\n              type:'autodatasetConstructTable',\r\n              testSetId,\r\n              trainSetId\r\n              }\r\n              store.dispatch(action)\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  \r\n}\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\ViewImg.jsx",["1923"],"// antd\r\nimport {Button,Image,Modal} from 'antd'\r\nimport {hostPort} from '@/Common'\r\n\r\nimport React, { useState,Component  } from 'react';\r\nexport default class ViewImg extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      visible:false,\r\n      content:null,\r\n    }\r\n  }\r\n\r\n  onOpen =()=>{\r\n    let record = this.props.onClick()\r\n    // console.log('record',record)\r\n    let content = (\r\n    <Image\r\n    width={200}\r\n    src={`${hostPort}equip/image/view?imageId=${record.id}&type=image`}\r\n  />\r\n    )\r\n    this.setState({\r\n      visible:true,\r\n      content:content,\r\n    })\r\n  }\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {visible} = this.state;\r\n    return(\r\n      <div>\r\n      <Button \r\n       onClick={this.onOpen}\r\n       size = {\"small\"}\r\n      >查看图片</Button>\r\n      \r\n      <Modal\r\n        title=\"查看图片\" \r\n        visible={visible}\r\n        onCancel={this.onClose}\r\n        width = {320}\r\n        footer={null}\r\n      >\r\n       {this.state.content}\r\n\r\n      </Modal>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\store\\DatasetConstructReducer.js",["1924","1925"],"const dataStorage={\r\n  imagedata:{\r\n    zipTable :[\r\n      {\r\n       /**\r\n        * \r\n  downloadURL: \"http://192.168.1.173:9001/equip/file/download/1358301830383144962\"\r\nid: \"1358301830383144962\"\r\nimporter: \"admin\"\r\nmenuId: \"1335756991540236289\"\r\nname: \"test123\"\r\nnodeName: \"图像数据\"\r\nstate: \"done\"\r\n        */\r\n      }\r\n    ],\r\n    \r\n    datasetID:'',//数据集id\r\n\r\n    TagNum:1, //有标签的图片的数量\r\n\r\n  },\r\n  zipMsg:{\r\n    id:\"\",\r\n    name:\"\",\r\n    nodeName:\"\",//节点名称\r\n    menuId:\"\",//节点id\r\n  }, //当前压缩包信息\r\n\r\n  totalCount:'', //总图片数\r\n  key:'',//当前选中的树节点\r\n  ModelTrainingID:1,//当前选中的处理文件的ID\r\n  fileName: '数据集1', //预处理结束，进行模型训练的文件名\r\n \r\n  testSetId:\"\", //测试集id\r\n  trainSetId:\"\", //训练集id\r\n\r\n  flag:0,//0表示未处理,1表示正在处理,2表示处理完毕\r\n\r\n  dataType:1 ,\r\n  /**\r\n   * 图像数据  dataType:1\r\n时序数据  dataType:2\r\n振动数据  dataType:3\r\n   */\r\n  vibTable:{\r\n    \r\n    taskTable:[{\r\n    datasetName:\"\" , // 数据集名称\r\n    transformedID:\"\", //时频图像转换结果id\r\n  }],\r\n    imageTable:[{\r\n\r\n    }],\r\n    totalCount:\"\"\r\n  },\r\n \r\n\r\n}\r\n//reducer可以接受state，但是不能修改state，所以必须要拷贝一份\r\nconst DatasetConstructReducer = (state=dataStorage,action)=>{    \r\n\r\n  /**\r\n   * 图像数据\r\n   */\r\n      /**\r\n      * 流程按钮\r\n      */\r\n     if(action.type==='imageFileID'){    //当前选择的文件ID\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      // console.log(action)\r\n      newState.zipMsg = {...action.record}\r\n      return newState;\r\n     }\r\n    //获取压缩包中的文件\r\n    if(action.type ==='getZipData'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.datasetName = action.datasetName\r\n      newState.dataType = 1\r\n      newState.imagedata.zipTable = []\r\n      newState.imagedata.TagNum = 0\r\n      newState.totalCount = action.totalCount\r\n   \r\n      action.pageList.map((item,index)=>{\r\n        if(item.labelFileLocation==null){\r\n          //没有标签\r\n          if(item.setType ===null){\r\n            //没有划分\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'否',\r\n              setType:'未划分', \r\n  \r\n            })\r\n          }else{\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'否',\r\n              setType:item.setType, \r\n  \r\n            })\r\n       \r\n          }\r\n        }else{\r\n          //有标签\r\n          newState.imagedata.TagNum++\r\n          if(item.setType ===null){\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'是',\r\n              setType:'未划分', \r\n            })\r\n          }else{\r\n            newState.imagedata.zipTable.push({\r\n              imageFileLocation:item.imageFileLocation,\r\n              labelFileLocation:item.labelFileLocation,\r\n              imageName:item.imageName,\r\n              nodeName:newState.label,\r\n              name:action.datasetName,\r\n              labelName:item.labelName,\r\n              id:item.id,\r\n              tag:'是',\r\n              setType:item.setType, \r\n            })\r\n          }\r\n        }\r\n      })\r\n      // console.log('newstate.imagedata.TagNum', newState.imagedata.TagNum)\r\n      return newState;\r\n     }\r\n\r\n    /**\r\n     * 自动划分 \r\n     */\r\n    if(action.type === 'autodatasetConstructTable'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.testSetId = action.testSetId;\r\n      newState.trainSetId = action.trainSetId\r\n      return newState;\r\n    }\r\n    /**\r\n   * 振动数据\r\n   */\r\n    if(action.type === 'vibAutodivide'){\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.testSetId = action.testSetId;\r\n      newState.trainSetId = action.trainSetId;\r\n      return newState;\r\n\r\n    }\r\n    if(action.type==='vibPngSelectPage'){ \r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      newState.dataType = 3\r\n      newState.vibTable.totalCount = action.totalCount\r\n      newState.vibTable.imageTable = pngSort(action.pageList)\r\n      return newState;\r\n     }\r\n\r\n\r\n    return state;  //state存放的是所有的信息，整个store仓库里存储的数据 action指用户传过来的那句话 \r\n}\r\nexport default DatasetConstructReducer\r\n\r\nfunction pngSort(taskarr){\r\n  let resultArr = []\r\n  taskarr.map((item,index)=>{\r\n    if(item.label === null) {\r\n      // 未标注\r\n      if(item.divideType === null){\r\n        // 未划分\r\n        resultArr.push({\r\n          ...item,\r\n          labelOrnot:\"未标注\",\r\n          divideOrnot:\"未划分\",\r\n        })\r\n      }else{\r\n        resultArr.push({\r\n          ...item,\r\n          labelOrnot:\"未标注\",\r\n          divideOrnot:item.divideType,\r\n        })\r\n      }\r\n     \r\n    }else{\r\n      if(item.divideType === null){\r\n        // 未划分\r\n        resultArr.push({\r\n          ...item,\r\n          labelOrnot:'已标注',\r\n          divideOrnot:\"未划分\",\r\n        })\r\n      }else{\r\n        resultArr.push({\r\n          ...item,\r\n          labelOrnot:'已标注',\r\n          divideOrnot:item.divideType,\r\n        })\r\n      }\r\n     \r\n    }\r\n  })\r\n  return resultArr;\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\AutoDivide.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\component\\BatchOperation.jsx",["1926","1927"],"\r\nimport React,{Component} from 'react'\r\n// antd\r\nimport { Modal,Button,Cascader,Space,message} from 'antd';\r\n// 方法\r\nimport {_batchDivide} from './functionList'\r\nconst options = [\r\n    {\r\n      value: '训练集',\r\n      label: '训练集',\r\n    },\r\n    {\r\n      value: '测试集',\r\n      label: '测试集',\r\n    },\r\n  ];\r\nexport default class BatchOperation extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            visible:false,\r\n            value:'',//训练集或者 测试集\r\n        }\r\n\r\n    }\r\n\r\nonOpen=()=>{\r\n        this.setState({\r\n            visible:true\r\n        })\r\n}\r\n\r\n/**\r\n * 提交批量划分\r\n */\r\nonOk = ()=>{\r\n    let records = this.props.getRecords()\r\n    if(records.length ==0){\r\n       message.error('未选中图片！')\r\n    }else{\r\n        let data = []\r\n        records.map((item,index)=>{\r\n           data.push({\r\n               'id':item,\r\n               'setType':this.state.value,\r\n           })\r\n        })\r\n        _batchDivide(data)\r\n    }\r\n   \r\n    this.setState(\r\n        {\r\n            visible:false,\r\n        }\r\n    )\r\n    \r\n}\r\n\r\n/**\r\n * 关闭窗口\r\n */\r\n    onClose = ()=>{\r\n        this.setState(\r\n            {\r\n                visible:false,\r\n            }\r\n        )\r\n    }\r\n\r\n/**\r\n * 表格改变\r\n */\r\n  \r\nonChange = (value)=>{\r\n   this.setState(\r\n       {\r\n        value:value[0] \r\n       }\r\n   )\r\n  } \r\n\r\n\r\n    render(){\r\n    const { visible } = this.state;\r\n        return(\r\n            <div >\r\n            <Button   className =\"normalBtn\"  size ='large' onClick ={this.onOpen}>批量操作</Button>\r\n            <Modal\r\n                title=\"数据集划分\" \r\n                visible ={visible}\r\n                width = {400}\r\n                footer={null}\r\n                onCancel = {this.onClose}\r\n                >\r\n                <Space>\r\n                   <Cascader options={options} onChange={this.onChange} placeholder=\"请选择要划分的数据集！\" />\r\n                    <Button type =\"normal\"  onClick ={this.onOk}>确认划分</Button>\r\n                </Space>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\Table1\\tableConfig.js",["1928","1929"],"import {Component} from 'react'\r\n// antd\r\nimport {Space,Button} from 'antd'\r\n\r\n// 导入组件\r\nimport CreateModels from '../component/CreateModels'\r\n// 导入方法\r\n// import {_deleteLabel} from '../component/functionList'\r\n// style\r\nimport '../style.scss'\r\n\r\n\r\n const tableColumns = [\r\n  {\r\n    title: '算法名称',\r\n    dataIndex: 'algorithm',\r\n    key: 'algorithm',\r\n  },\r\n  {\r\n    title: \"处理任务\",\r\n    dataIndex: 'task',\r\n    key: 'task',\r\n  },\r\n  {\r\n    title: \"模型大小\",\r\n    dataIndex: 'modelSize',\r\n    key: 'modelSize',\r\n  },\r\n  {\r\n    title: \"输入数据格式\",\r\n    dataIndex: 'inputFormat',\r\n    key: 'inputFormat',\r\n  }, {\r\n    title: \"修改时间\",\r\n    dataIndex: 'modifiedTime',\r\n    key: 'modifiedTime',\r\n  },\r\n\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n          {/* 查看图片 */}\r\n          <CreateModels  onClick={( )=>{\r\n            return record;\r\n         }}>构建模型</CreateModels>\r\n         \r\n      </Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n\r\n/**\r\n * 组件实现如下功能：\r\n * 1. 算法管理\r\n * 2. 构建上述模型（由组件实现）\r\n */\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\component\\CreateModels.jsx",["1930","1931","1932","1933","1934"],"import React,{Component} from 'react'\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// antd\r\nimport {Space,Button,Modal,Form,Input,InputNumber} from 'antd'\r\n\r\n// 方法\r\nimport {_modelConstruct,_vibcreateModel} from './functionList'\r\n\r\nexport default class CreateModels extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            datasetName:store.getState().TagManagementreducer.zipMsg.name,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n\r\n        }\r\n        this.formRef = React.createRef();\r\n        store.subscribe(this.handleStoreChange)\r\n\r\n    }\r\n    \r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n        })\r\n    }\r\n \r\n    onOpen = ()=>{\r\n        if(this.state.dataType == 1){\r\n            this.setState({\r\n                visible:true,\r\n            },()=>{\r\n                let records = this.props.onClick()\r\n                this.formRef.current.setFieldsValue({\r\n                    algorithm:records.algorithm,\r\n                    task:records.task,\r\n                    datasetName:this.state.datasetName,\r\n                });\r\n            })\r\n                // 要在setState完成之后再挂载，否则数据挂不上\r\n            // console.log(this.props.onClick())\r\n        }else{\r\n            this.setState({\r\n                visible:true,\r\n            },()=>{\r\n                let records = this.props.onClick()\r\n                this.formRef.current.setFieldsValue({\r\n                    algorithm:records.algorithm,\r\n                    datasetName:this.state.datasetName,\r\n                });\r\n            })\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 关闭窗口\r\n     */\r\n    onClose = ()=>{\r\n        this.setState(\r\n            {\r\n                visible:false,\r\n            }\r\n        )\r\n    }\r\n      /**\r\n     * 提交表单\r\n     */\r\n    handleSubmit = (values) => {\r\n        if(this.state.dataType == 1){\r\n            values.classifierLr = 0.00001\r\n            values.rpnLr = 0.00001\r\n            values.trainStatus = \"未完成\"\r\n            _modelConstruct(values)\r\n        }else{\r\n            _vibcreateModel(values)\r\n        }\r\n\r\n        // console.log(values)\r\n        this.onClose();\r\n    };\r\n\r\n    render(){\r\n        const {visible,dataType} = this.state;\r\n        // console.log('this.props.records',this.props.getRecords())\r\n        return(\r\n            <div>\r\n                <Button  onClick = {this.onOpen}>构建模型</Button>\r\n                <Modal\r\n                title=\"模型构建\" \r\n                visible ={visible}\r\n                // width = {400}\r\n                footer={null}\r\n                onCancel = {this.onClose}\r\n                >\r\n            \r\n                  <Form\r\n                        {...layout}\r\n                        ref={this.formRef}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={this.handleSubmit}\r\n                        >\r\n                         {\r\n                             dataType ==1 ? imgformItemArr.map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                        [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                }):vibformItemArr.map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                        [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                         <Form.Item {...tailLayout}>\r\n                            <Button className =\"normalBtn\"  htmlType=\"submit\" >确认创建模型</Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n            </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\nconst imgformItemArr = [\r\n    {\r\n        label:\"处理任务\",\r\n        name:\"task\",\r\n        rule:false,\r\n        content:<Input disabled ></Input>\r\n    },\r\n    {\r\n        label:\"训练算法\",\r\n        name:\"algorithm\",\r\n        rule:false,\r\n        content:<Input disabled ></Input>\r\n    },\r\n    {\r\n        label:\"数据集\",\r\n        name:\"datasetName\",\r\n        rule:false,\r\n        content:<Input disabled ></Input>\r\n    },\r\n    {\r\n        label:\"模型名称\",\r\n        name:\"modelName\",\r\n        rule:true,\r\n        content:<Input></Input>\r\n    },\r\n   {\r\n        name:\"numEpochs\",\r\n        label:\"迭代次数\",\r\n        rule:true,\r\n        content:   <Input   placeholder = {2}  />\r\n    },\r\n    {\r\n        name:\"epochLength\",\r\n        label:\"单次迭代数据量\",\r\n        rule:true,\r\n        content:   <Input   placeholder = {2}  />\r\n    },{\r\n        name:\"classifierLr\",\r\n        label:\"分类器学习率\",\r\n        content:   <Input  disabled defaultValue = {0.00001} />\r\n    },\r\n    {\r\n        name:\"rpnLr\",\r\n        label:\"rpn学习率\",\r\n        content:   <Input  disabled defaultValue = {0.00001} />\r\n    }\r\n]\r\nconst vibformItemArr = [\r\n    {\r\n        label:\"处理任务\",\r\n        name:\"task\",\r\n        rule:false,\r\n        content:<Input disabled defaultValue = {\"轴承故障诊断\"}  ></Input>\r\n    },\r\n    {\r\n        label:\"训练算法\",\r\n        name:\"algorithm\",\r\n        rule:false,\r\n        content:<Input disabled ></Input>\r\n    },\r\n    {\r\n        label:\"模型名称\",\r\n        name:\"name\",\r\n        rule:true,\r\n        content:<Input></Input>\r\n    },\r\n   {\r\n        name:\"iter_num\",\r\n        label:\"迭代次数\",\r\n        rule:true,\r\n        content:   <Input   placeholder = {50}  />\r\n    },\r\n    {\r\n        name:\"min_num\",\r\n        label:\"训练批次\",\r\n        rule:true,\r\n        content:   <Input   placeholder = {32}  />\r\n    },{\r\n        name:\"lr\",\r\n        label:\"学习率\",\r\n        content:   <Input   placeholder = {0.001}  />\r\n    }\r\n   \r\n]\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\AlgorithmManagement\\component\\functionList.jsx",["1935","1936","1937"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message,Image  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\nexport function _modelConstruct(values){\r\n    let zipMsg = store.getState().TagManagementreducer.zipMsg\r\n    let dataset = {...zipMsg,...values}\r\n    // console.log(dataset)\r\n    const action = {\r\n        type:\"modelConstruct\",\r\n        dataset,\r\n        // zipMsg,\r\n    }\r\n    store.dispatch(action)\r\n}\r\n\r\nexport function _vibcreateModel(values){\r\n  console.log(values)\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n    let flag = false\r\n    $.ajax({\r\n        type:\"post\",\r\n        // POST /equip/vibration/createModel\r\n        url:hostPort+\"equip/vibration/createModel\",\r\n        contentType:\"application/json\",\r\n        dataType:'JSON',\r\n        data:JSON.stringify(\r\n          {\r\n         \r\n            iterNum: values.iter_num, \r\n            lr: values.lr, \r\n            minNum: values.min_num, \r\n            name: values.name,\r\n            setId: trainSetId, \r\n          }\r\n        ),\r\n        async:false,\r\n        success:res=>{\r\n          flag =  true\r\n          const action = {\r\n            type:\"vibModelCreate\",\r\n            values,\r\n            res,\r\n          }\r\n          store.dispatch(action)\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n  _message(flag,'模型创建')\r\n\r\n}\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\Table3\\tableConfig.js",["1938","1939"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\n// 导入方法\r\n// import {_LinkToList} from './TabTable/components/functionList'\r\nimport ImgTrainning from '../component/ImgTrainning'\r\nimport DetailMsg from '../component/DetailMsg'\r\n// style\r\nimport '../style.scss'\r\n const tableColumns = [\r\n  {\r\n    title: '数据集名称',\r\n    dataIndex: 'datasetName',\r\n    key: 'datasetName',\r\n  },\r\n  {\r\n    title: '输出模型名称',\r\n    dataIndex: 'modelName',\r\n    key: 'modelName',\r\n  },\r\n  {\r\n    title: '训练状态',\r\n    dataIndex: 'trainStatus',\r\n    key: 'trainStatus',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n        <DetailMsg\r\n        ></DetailMsg>\r\n        <ImgTrainning   onClick={( )=>{\r\n            return record;\r\n         }}></ImgTrainning>\r\n      </Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\DetailMsg.jsx",["1940","1941"],"import React,{Component} from 'react'\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\nimport '../style.scss'\r\nimport store from '@/pages/Store/index'\r\n\r\nexport default class DetailMsg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            records:\"\",\r\n            task:\"\"\r\n        }\r\n        \r\n        store.subscribe(this.handleStoreChange)\r\n\r\n    }\r\n    handleStoreChange= ()=>{\r\n        let records = store.getState().ModelTrainingreducer.imageModelTraining.tableData\r\n        this.setState({\r\n            ...records[0]\r\n        },\r\n        // ()=>{\r\n        //     console.log(this.state)\r\n        // }\r\n        )\r\n    }\r\n\r\n      // 打开编辑弹窗\r\n    onOpen = () => {    \r\n        this.setState({\r\n        visible: true,\r\n        }\r\n        );\r\n   \r\n    };\r\n\r\n    // 关闭弹窗\r\n    onClose = () => {\r\n        this.setState({\r\n        visible: false,\r\n        });\r\n    };\r\n\r\n    formArr =()=>{\r\n        const  formItemArr = [\r\n            {\r\n                label:\"处理任务\",\r\n                name:\"task\",\r\n                rule:false,\r\n                content:<Input disabled defaultValue = {this.state.task}></Input>\r\n            },\r\n            {\r\n                label:\"训练算法\",\r\n                name:\"algorithm\",\r\n                rule:false,\r\n                content:<Input disabled   defaultValue = {this.state.algorithm}></Input>\r\n            },\r\n            {\r\n                label:\"数据集\",\r\n                name:\"datasetName\",\r\n                rule:false,\r\n                content:<Input disabled  defaultValue = {this.state.datasetName}></Input>\r\n            },\r\n            {\r\n                label:\"模型名称\",\r\n                name:\"modelName\",\r\n                rule:true,\r\n                content:<Input disabled  defaultValue = {this.state.modelName}></Input>\r\n            },  {\r\n                name:\"numEpochs\",\r\n                label:\"迭代次数\",\r\n                rule:true,\r\n                content:   <Input  disabled   defaultValue = {this.state.numEpochs} />\r\n            }, {\r\n                name:\"rpnLr\",\r\n                label:\"rpn学习率\",\r\n                content:   <Input  disabled defaultValue = {0.00001} />\r\n            },{\r\n                name:\"classifierLr\",\r\n                label:\"分类器学习率\",\r\n                content:   <Input  disabled defaultValue = {0.00001} />\r\n            },\r\n        ]\r\n        return formItemArr\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        const {visible,records} = this.state;\r\n        return(\r\n            <div>\r\n                \r\n                <Button\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n            \r\n                >\r\n                详细信息\r\n                </Button>\r\n                <Modal\r\n                    title=\"详细信息\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    destroyOnClose= {true}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        ref={this.formRef}\r\n                        name=\"basic\"\r\n                        onFinish={this.handleSubmit}\r\n                        >\r\n                            {\r\n                              this.formArr().map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                            [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Form>\r\n                     \r\n                    \r\n                </Modal>\r\n          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\component\\ImgTrainning.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\store\\Modelvaluatereducer.js",["1942","1943","1944"],"const dataStorage={\r\n  tableData:[\r\n    {\r\n      originID:\"\",//\r\n      preprocessedID:\"\",//未训练但预处理完的ID\r\n      datasetName:\"\", //文件名\r\n      resultID:\"\", //训练完成的ID\r\n    }\r\n  ],\r\n  modelTrainingTable:[{\r\n    modelName:'模型1',\r\n    algorithm:'长短时记忆循环神经网络',\r\n    neuronsNumber:'32',\r\n    netNum:'2',\r\n    Dropout:'5',\r\n    learningRate:'0.001',\r\n    numEpochs:'2',\r\n    trainingTime:'2.8min',\r\n    id:1\r\n  },{\r\n    modelName:'模型2',\r\n    id:2\r\n  }\r\n  ],\r\n  totalCount:'',\r\n  key:'',//当前选中的树节点\r\n  ModelTrainingID:1,//当前选中的处理文件的ID\r\n  fileName: '数据集1', //预处理结束，进行模型训练的文件名\r\n \r\n \r\n  \r\n\r\n  imageModelTraining:{\r\n    datasetMsg:[],\r\n    modelTrainingTable:[],\r\n\r\n    tableData:[\r\n       \r\n    ],\r\n    chooseDataset:[\r\n      {\r\n        \"filename\":\"455\",\r\n        \"time\":\"555\",\r\n        \"device\":\"555\",\r\n        \"unit\":\"555\",\r\n        \"method\":\"555\",\r\n        \"code\":\"555\"\r\n      },  \r\n      ]\r\n  },\r\n\r\n  vibModelValuateList:{\r\n    totalCount:0,\r\n    modelList:[\r\n\r\n    ]\r\n  },\r\n\r\n  flag:0,//0表示未处理,1表示正在处理,2表示处理完毕\r\n\r\n  modelConstructorValue:null,\r\n\r\n  dataType:1 ,\r\n  /**\r\n   * 图像数据  dataType:1\r\n     时序数据  dataType:2  \r\n     振动数据  dataType:3\r\n   */\r\n  zipMsg:{},\r\n  flag:false,\r\n}\r\n//reducer可以接受state，但是不能修改state，所以必须要拷贝一份\r\nconst Modelvaluatereducer = (state=dataStorage,action)=>{    \r\n\r\n/**\r\n * 图像数据\r\n */\r\n    // 流程按钮\r\n     if(action.type==='imageFileID'){    //当前选择的文件ID\r\n      const newState=JSON.parse(JSON.stringify(state));\r\n      // console.log(action)\r\n      newState.zipMsg = {...action.record}\r\n      newState.dataType = 1\r\n      return newState;\r\n     }\r\n// 初始化\r\n  if(action.type ==='modelConstruct'){\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.imageModelTraining.datasetMsg[0]=action.dataset \r\n    // console.log(newState.imageModelTraining.datasetMsg[0])\r\n    newState.dataType = 1\r\n    return newState\r\n  }\r\n// 刷新模型列表\r\nif(action.type === 'ImagemodelList'){\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  let e = []\r\n  // if(action,returnDataList)\r\n  action.returnDataList.map((item,index)=>{\r\n      if(item.evlResult === null){\r\n        e.push({\r\n          ...item,\r\n          evaluateStatus:'未开始',\r\n          datasetName: newState.zipMsg.name\r\n        })\r\n      }else{\r\n        e.push({\r\n          ...item,\r\n          evaluateStatus:'已完成',\r\n          datasetName:  newState.zipMsg.name\r\n        })\r\n      }\r\n  })\r\n  // console.log(e)\r\n  newState.imageModelTraining.modelTrainingTable=e\r\n  return newState;\r\n}\r\n// 模型评估\r\nif(action.type === 'ImageModelValuateSubmit'){\r\n  const newState  = JSON.parse(JSON.stringify(state));\r\n  newState.flag = true\r\n  return newState;\r\n}\r\n/**\r\n * 振动数据\r\n */\r\n\r\n// 模型列表\r\nif(action.type === 'vibModelValuateList'){\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  newState.dataType = 3\r\n  let e = []\r\n  // if(action,returnDataList)\r\n  action.returnDataList.map((item,index)=>{\r\n      if(item.result === null){\r\n        e.push({\r\n          ...item,\r\n          evaluateStatus:'未开始',\r\n        })\r\n      }else{\r\n        e.push({\r\n          ...item,\r\n          evaluateStatus:'已完成',\r\n        })\r\n      }\r\n  })\r\n  // console.log(e)\r\n  newState.vibModelValuateList.totalCount = action.totalCount\r\n  newState.vibModelValuateList.modelList=e\r\n  return newState;\r\n}\r\n\r\n\r\n\r\n\r\n    return state;  //state存放的是所有的信息，整个store仓库里存储的数据 action指用户传过来的那句话 \r\n}\r\nexport default Modelvaluatereducer","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\Table1\\tableConfig.js",["1945","1946"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\n// 导入方法\r\n// import {_LinkToList} from './TabTable/components/functionList'\r\nimport ImgValuate from '../component/ImgValuate'\r\nimport DetailMsg from '../component/DetailMsg'\r\nimport DeleteModel from '../component/DeleteModel'\r\n// style\r\nimport '../style.scss'\r\n const tableColumns = [\r\n  {\r\n    title: '数据集名称',\r\n    dataIndex: 'datasetName',\r\n    key: 'datasetName',\r\n  },\r\n  {\r\n    title: '输出模型名称',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '评估状态',\r\n    dataIndex: 'evaluateStatus',\r\n    key: 'evaluateStatus',\r\n  }, {\r\n    title: '创建时间',\r\n    dataIndex: 'updateTime',\r\n    key: 'updateTime',\r\n  },\r\n  {\r\n    title: '评估指标',\r\n    dataIndex: 'evlResult',\r\n    key: 'evlResult',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => {\r\n        return(\r\n          <Space size=\"middle\">\r\n          <DetailMsg onClick={( )=>{\r\n              return record;}}\r\n          ></DetailMsg>\r\n          <ImgValuate   onClick={( )=>{\r\n              return record;\r\n           }}></ImgValuate>\r\n           <DeleteModel onClick={( )=>{\r\n              return record;\r\n           }}></DeleteModel>\r\n        </Space>\r\n        )\r\n     \r\n       \r\n      }\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\Imgvaluate.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\DetailMsg.jsx",["1947","1948"],"import React,{Component} from 'react'\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\nimport '../style.scss'\r\n\r\nexport default class DetailMsg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            records:\"\",\r\n            name:\"\",\r\n            iterNum:\"\",\r\n            lr:\"\",\r\n            minNum:\"\",\r\n            task:\"\"\r\n        }\r\n        \r\n\r\n    }\r\n    componentDidMount(){\r\n        let record = this.props.onClick()\r\n        this.setState({\r\n            ...record\r\n        })\r\n    }\r\n   \r\n\r\n      // 打开编辑弹窗\r\n    onOpen = () => {  \r\n      \r\n        this.setState({\r\n        visible: true,\r\n        }\r\n        );\r\n   \r\n    };\r\n\r\n    // 关闭弹窗\r\n    onClose = () => {\r\n        this.setState({\r\n        visible: false,\r\n        });\r\n    };\r\n\r\n    formArr =()=>{\r\n        const {name,iterNum,lr,minNum} = this.state;\r\n        const  formItemArr = [\r\n    \r\n            {\r\n                label:\"模型名称\",\r\n                name:\"name\",\r\n                content:<Input disabled  defaultValue = {name}></Input>\r\n            },  {\r\n                name:\"iterNum\",\r\n                label:\"迭代次数\",\r\n                content:   <Input  disabled   defaultValue = {iterNum} />\r\n            }, {\r\n                name:\"lr\",\r\n                label:\"学习率\",\r\n                content:   <Input  disabled defaultValue = {lr} />\r\n            },{\r\n                name:\"minNum\",\r\n                label:\"训练批次\",\r\n                content:   <Input  disabled defaultValue = {minNum} />\r\n            },\r\n        ]\r\n        return formItemArr\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        const {visible,records} = this.state;\r\n        return(\r\n            <div>\r\n                \r\n                <Button\r\n                type=\"normal\"\r\n                onClick={this.onOpen}\r\n                >\r\n                详细信息\r\n                </Button>\r\n                <Modal\r\n                    title=\"详细信息\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    destroyOnClose= {true}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        ref={this.formRef}\r\n                        name=\"basic\"\r\n                        >\r\n                            {\r\n                              this.formArr().map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                            [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Form>\r\n                     \r\n                    \r\n                </Modal>\r\n          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\functionList.jsx",["1949","1950","1951"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n/**\r\n * 删除模型\r\n */\r\nexport function _deleteModel(id,modelID){\r\n  let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/modal/delete/\"+modelID,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _imgModelList(1)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 图像数据\r\n */\r\n/**\r\n * 模型评估\r\n */\r\nexport function _imgModelValuate(setid){\r\n  let testSetId  =store.getState().DatasetConstructReducer.testSetId\r\n  let flag = false\r\n\r\n\r\n  if(testSetId!=''){\r\n    //获取到测试集id\r\n    $.ajax({\r\n      type:\"post\",\r\n      //http://192.168.1.173:9001/equip/modal/imageTest?modelId=1315629167198416898&testSetId=1315628758564155393\r\n      url:hostPort+\"equip/modal/imageTest?modelId=\"+setid+'&testSetId='+testSetId,\r\n      dataType:'JSON',\r\n      contentType:\"application/json\",\r\n      async:false,\r\n      success:res=>{\r\n        if(res.flag){ \r\n          //评估完成刷新表格\r\n          flag = true\r\n          _imgModelList(1)\r\n          _message(flag,'模型评估')\r\n          const action = {\r\n            type:\"ImageModelValuateSubmit\",\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n  })\r\n  }else{\r\n    _message(false,'获取训练集id')\r\n  }\r\n}\r\n/**\r\n * 模型列表刷新\r\n */\r\nexport function _imgModelList(page){\r\n      // console.log('refresh')\r\n     \r\n    let returnDataList = []\r\n    let setid = store.getState().DataStoragereducer.fileName[0].id\r\n\r\n        $.ajax({\r\n            type:\"post\",\r\n            url:hostPort+\"equip/modal/selectPage\",\r\n            contentType:\"application/json;charset=UTF-8\",\r\n            dataType:'JSON',\r\n            async:false, //改成异步  就不会锁住浏览器\r\n            data:JSON.stringify({\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": page,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n               \"setId\":setid\r\n              }\r\n            }),\r\n            success:function(res){\r\n              if(res.flag){\r\n                // console.log(\"res\",res)\r\n              returnDataList = res.data.pageList\r\n              const action = {\r\n                type:\"ImagemodelList\",\r\n                returnDataList,\r\n              }\r\n              store.dispatch(action)\r\n              }\r\n            },\r\n            error:function(){\r\n            }\r\n          })\r\n       \r\n    }\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\ImgValuate.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\component\\DeleteModel.jsx",["1952"],"import React, { Component } from 'react';\r\n\r\n// antd\r\nimport {Button,Modal,Space} from 'antd'\r\n\r\n//store\r\nimport store from '@/pages/Store/index'\r\n\r\n// 导入方法\r\nimport {_deleteModel} from './functionList'\r\n// style\r\nimport '../style.scss'\r\nexport default class DeleteModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      datasetID:'',\r\n    };\r\n  }\r\n  \r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    // let record = this.props.onClick();\r\n    // console.log(record)\r\n    this.setState({\r\n      visible: true,\r\n      // datasetID:record.id\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  // 确认删除\r\n  deleteModel =()=>{\r\n    let record = this.props.onClick();\r\n    let id = record.sourceFile\r\n    let modelID  = record.id\r\n    _deleteModel(id,modelID)\r\n    this.onClose()\r\n  }\r\n\r\n\r\n  render() {\r\n    const {visible} = this.state;    \r\n    return (\r\n      <div>\r\n      <Button  type=\"danger\" className =\"deleteBtn\" onClick = {this.onOpen}>\r\n        删除\r\n      </Button>\r\n      <Modal\r\n        title=\"删除\" \r\n        visible ={visible}\r\n        width = {320}\r\n        // onOk ={this.deleteZip}\r\n        onCancel = {this.onClose}\r\n\r\n        footer={(\r\n          <Space >\r\n          <Button  type = \"danger\"  onClick={this.deleteModel}>\r\n            删除\r\n          </Button>\r\n          <Button onClick={this.onClose}>\r\n            取消\r\n          </Button>\r\n       \r\n         </Space>\r\n        )\r\n          \r\n        }\r\n      >\r\n        删除后将不能恢复，是否确认删除！\r\n      </Modal>\r\n      </div>\r\n \r\n    );\r\n  }\r\n}\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\store\\StateEvaluatereducer.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\Table1\\tableConfig.js",["1953","1954"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\n// 导入方法\r\n// import {_LinkToList} from './TabTable/components/functionList'\r\nimport ImportZip from '../component/ImportZip'\r\nimport GetResult from '../component/GetResult'\r\n// style\r\nimport '../style.scss'\r\n const tableColumns = [\r\n  {\r\n    title: '数据集名称',\r\n    dataIndex: 'datasetName',\r\n    key: 'datasetName',\r\n  },  {\r\n    title: '操作人',\r\n    dataIndex: 'operator',\r\n    key: 'operator',\r\n  },  {\r\n    title: '检测状态',\r\n    dataIndex: 'detectionStatus',\r\n    key: 'detectionStatus',\r\n  },  {\r\n    title: '评估模型',\r\n    dataIndex: 'modelName',\r\n    key: 'modelName',\r\n  },\r\n  {\r\n    title: '识别数量',\r\n    dataIndex: 'detectionNum',\r\n    key: 'detectionNum',\r\n  },\r\n  {\r\n    title: '操作时间',\r\n    dataIndex: 'updateTime',\r\n    key: 'updateTime',\r\n  }, \r\n \r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => {\r\n        return(\r\n          <Space size=\"middle\">\r\n   \r\n          <ImportZip   onClick={( )=>{\r\n              return record;\r\n           }}></ImportZip>\r\n          <GetResult></GetResult>\r\n       \r\n        </Space>\r\n        )\r\n     \r\n       \r\n      }\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\Table2\\tableConfig.js",["1955","1956","1957","1958","1959"],"import {Component} from 'react'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport {Button,Tags,Space,Image,Modal} from 'antd'\r\n\r\n\r\n const tableColumns = [\r\n    {\r\n      title: '文件名',\r\n      dataIndex: 'pictureName',\r\n      key: 'pictureName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: '原始图片',\r\n      dataIndex: 'nodeName',\r\n      key: 'nodeName',\r\n    },\r\n    {\r\n      title: '处理后的图片',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },   \r\n    {\r\n      title: '腐蚀占比',\r\n      dataIndex: 'corrosionRate',\r\n      key: 'corrosionRate',\r\n    },\r\n\r\n    {\r\n      title: '操作',\r\n      // key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n\r\n         <Button \r\n         size=\"small\"\r\n          onClick={()=>{\r\n          }}\r\n        >详细信息</Button>\r\n \r\n        <Button \r\n         size=\"small\"\r\n\r\n          type =\"danger\"\r\n          onClick={()=>{\r\n        }}\r\n        className = 'deleteBtn'\r\n        >删除</Button>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\GetResult.jsx",["1960","1961","1962","1963"],"import React,{Component} from 'react';\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\nimport '../style.scss'\r\nexport default class GetResult extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Button\r\n            type=\"normal\"\r\n            className = \"normalBtn\"\r\n            onClick={this.onOpen}\r\n            size = \"middle\"\r\n            >\r\n            查看结果\r\n            </Button>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\functionList.jsx",["1964","1965"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 图像数据\r\n */\r\n/**\r\n * 模型评估\r\n */\r\nexport function _imgStateEvaluate(setid){\r\n  let testSetId  =store.getState().DatasetConstructReducer.testSetId\r\n  let flag = false\r\n\r\n\r\n  if(testSetId!=''){\r\n    //获取到测试集id\r\n    $.ajax({\r\n      type:\"post\",\r\n      //http://192.168.1.173:9001/equip/modal/imageTest?modelId=1315629167198416898&testSetId=1315628758564155393\r\n      url:hostPort+\"equip/modal/imageTest?modelId=\"+setid+'&testSetId='+testSetId,\r\n      dataType:'JSON',\r\n      contentType:\"application/json\",\r\n      async:false,\r\n      success:res=>{\r\n        if(res.flag){ \r\n          //评估完成刷新表格\r\n          flag = true\r\n          _imgModelList(1)\r\n          _message(flag,'模型评估')\r\n          const action = {\r\n            type:\"ImageModelValuateSubmit\",\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n  })\r\n  }else{\r\n    _message(false,'获取训练集id')\r\n  }\r\n}\r\n/**\r\n * 模型列表刷新\r\n */\r\nexport function _imgModelList(page){\r\n      // console.log('refresh')\r\n    \r\n    let returnDataList = []\r\n    let setid = store.getState().DataStoragereducer.fileName[0].id\r\n\r\n        $.ajax({\r\n            type:\"post\",\r\n            url:hostPort+\"equip/modal/selectPage\",\r\n            contentType:\"application/json;charset=UTF-8\",\r\n            dataType:'JSON',\r\n            async:false, //改成异步  就不会锁住浏览器\r\n            data:JSON.stringify({\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": page,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n               \"setId\":setid\r\n              }\r\n            }),\r\n            success:function(res){\r\n              if(res.flag){\r\n                // console.log(\"res\",res)\r\n              returnDataList = res.data.pageList\r\n              const action = {\r\n                type:\"ImagemodelList\",\r\n                returnDataList,\r\n              }\r\n              store.dispatch(action)\r\n              }\r\n            },\r\n            error:function(){\r\n            }\r\n          })\r\n       \r\n    }\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\ImportZip.jsx",["1966","1967","1968"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Table ,Upload ,Modal,Pagination,Space,Input} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../style.scss'\r\nimport tableConfig from './ChooseModel/tableConfig'\r\n// 方法\r\nimport {_imgModelList,_message} from './functionList'\r\nimport {hostPort} from '@/Common'\r\n\r\nclass ImportZip extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            modelList :store.getState().Modelvaluatereducer.imageModelTraining.modelTrainingTable,\r\n            id :store.getState().ModelTrainingreducer.tableData[0].originID,\r\n            modelID:\"\",\r\n            modelName:\"\",\r\n            step:\"\",\r\n            disabled:false,\r\n            datasetName:\"\",//上传的文件名\r\n\r\n        }\r\n    store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n      this.setState({\r\n          dataType:store.getState().ModelTrainingreducer.dataType,\r\n          modelList :store.getState().Modelvaluatereducer.imageModelTraining.modelTrainingTable,\r\n      })\r\n  }\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  pageonChange=(page, pageSize)=>{\r\n    // console.log(page, pageSize,'page, pageSize')\r\n    _imgModelList(page)\r\n  }\r\n\r\n  // 选择模型\r\n  selectChange =(selectedRowKeys, selectedRows)=>{\r\n    // console.log('selectedRowKeys changed: ', selectedRows);\r\n    this.setState({\r\n      modelID:selectedRowKeys,\r\n      modelName:selectedRows.name\r\n    })\r\n  }\r\n\r\n\r\n    // 上传文件\r\n    upload=(info)=> {\r\n      let flag = false\r\n      if (info.file.response) {\r\n          let response = info.file.response\r\n          if(response.flag){\r\n            const {modelID,modelName} = this.state;\r\n            const action = {\r\n              type:\"StateEvaluateImportZip\",\r\n              response,\r\n              modelID,\r\n              modelName\r\n            }\r\n            store.dispatch(action)\r\n          \r\n          flag = true\r\n          }\r\n      _message(flag,'上传文件')\r\n      }\r\n    } \r\n\r\n    \r\n    render(){\r\n        const{visible,loading} = this.state;\r\n        const {modelList} = this.state\r\n        const rowSelection = {\r\n          onChange: this.selectChange,\r\n        };\r\n        // console.log(\"modelList\",modelList)\r\n        return(\r\n            <div>\r\n                  {/* <Spin  spinning = {loading} tip=\"模型训练中...\">\r\n                </Spin> */}\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                >\r\n                导入检测图片\r\n                </Button>\r\n                <Modal\r\n                    title=\"模型列表\" \r\n                    visible ={visible}\r\n                    width = {800}\r\n                    onCancel = {this.onClose}\r\n                    destroyOnClose  = {true}\r\n                    footer={[\r\n                      <Upload \r\n                      showUploadList ={false}\r\n                      name = 'file'\r\n                      onChange = {this.upload}\r\n                      action={hostPort+\"equip/image/test?modelId=\"+this.state.modelID}\r\n                      // data={{\r\n                      //   dataType:2\r\n                      // }}\r\n                    >\r\n                      {this.state.modelID === ''? <Button icon={<UploadOutlined />}  \r\n                      disabled   type=\"normal\"\r\n                    className = \"normalBtn\">上传文件</Button> : <Button icon={<UploadOutlined />}  \r\n                    type=\"normal\"\r\n                    className = \"normalBtn\">上传文件</Button>} \r\n                      \r\n                     \r\n                    </Upload>\r\n                    ]}\r\n                >\r\n\r\n                 \r\n\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={modelList} \r\n                       pagination = {false}\r\n                       rowKey = {\"id\"}\r\n                       rowSelection={{\r\n                        type:'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                    />\r\n                      <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n\r\n           \r\n              \r\n                    \r\n                </Modal>\r\n        \r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default ImportZip;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\component\\ChooseModel\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\VibrationIndex.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\index.js",["1969","1970"],"import React, { Component } from 'react';\r\n\r\n// antd\r\nimport {Button, Table, Tag, Space ,Modal} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n// columns\r\nimport tableColumns from './tableConfig'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// 组件\r\nimport UploadFile from './TabTable/components/UploadFile.jsx';\r\n// style\r\nimport '../index.scss'\r\n\r\nclass  Table1 extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      //表格勾选的id\r\n      selectedRowKeys: [],\r\n      dataSource: store.getState().DataStoragereducer.vibrationdata.vibrationTable,\r\n      visible:false,\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.vibrationdata.vibrationTable,\r\n      treeKey: store.getState().DataStoragereducer.treeKey,\r\n    })\r\n  }\r\n    /**\r\n   * 打开输入数据集信息弹窗\r\n   */\r\n   onOpen=()=>{\r\n    this.setState({\r\n      visible:true,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭弹窗\r\n   */\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {dataSource,visible,treeKey} = this.state;\r\n    return(\r\n      <div style ={{margin:\"0 5px 0 5px\"}}>\r\n      <Button className = \"normalBtn\" onClick = {this.onOpen}  icon={<UploadOutlined />}> 上传文件</Button>\r\n      <Table columns={tableColumns} dataSource={dataSource} />\r\n      <Modal\r\n      destroyOnClose  = {true}\r\n        title=\"上传文件\" \r\n        visible ={visible}\r\n        width = {320}\r\n        onCancel = {this.onClose}\r\n        footer={null}\r\n      >\r\n        <UploadFile onClose ={this.onClose} treeKey ={treeKey} disabled={false}></UploadFile>\r\n      </Modal>\r\n  </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default Table1;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\index.js",["1971","1972","1973","1974","1975","1976"],"import React, { Component } from 'react';\r\n// antd\r\nimport {Button, Table, Tag, Space ,Modal,message,Pagination} from 'antd';\r\n// columns\r\nimport tableColumns from './tableConfig'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../index.scss'\r\n// 组件\r\nimport AddCsv from './TabTable/components/AddCsv'\r\n// 方法\r\nimport {_checkZip} from '../Table1/TabTable/components/functionList'\r\nimport {_deleteCsv,_refresh,_vibList} from './TabTable/components/functionList'\r\nclass  Table2 extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      //表格勾选的id\r\n      selectedRowKeys: [],\r\n      tableData:store.getState().DataStoragereducer.vibrationdata.zipTable,\r\n      totalCount:store.getState().DataStoragereducer.totalCount,\r\n      visible:false,\r\n      content:null,\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n  handleStoreChange = ()=>{\r\n    this.setState({\r\n      tableData:store.getState().DataStoragereducer.vibrationdata.zipTable,\r\n      totalCount:store.getState().DataStoragereducer.totalCount,\r\n\r\n    })\r\n    let content = store.getState().DataStoragereducer.ModalContent\r\n    if(content !=null){\r\n      this.setState({\r\n        visible:true,\r\n        content:content,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n// 刷新\r\n  refresh =()=>{\r\n    _refresh();\r\n  }\r\n\r\n  // 批量删除\r\n  deleteCsv =()=>{\r\n    _deleteCsv(this.state.selectedRowKeys)\r\n  }\r\n\r\n  /**\r\n   * 表格选择\r\n   */\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n\r\n// 翻页器\r\npageonChange=(page, pageSize)=>{\r\n  // console.log(page, pageSize,'page, pageSize')\r\n  _vibList(page)\r\n}\r\n\r\n  render(){\r\n    const { tableData,visible,selectedRowKeys ,totalCount} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n      return(\r\n        <div style ={{margin:\"0 5px 0 5px\"}}>\r\n          <Space>\r\n          <Button className = \"normalBtn\" onClick = {this.refresh} > 刷新 </Button>\r\n          {/* <AddCsv onClose = {this.onClose}></AddCsv> */}\r\n          <Button  className = \"deleteBtn\" type =\"danger\" onClick = {this.deleteCsv} > 批量删除</Button>\r\n          </Space>\r\n        <Table \r\n           rowSelection={{\r\n            ...rowSelection,\r\n          }}\r\n          rowKey = {\"id\"}\r\n          pagination = {false}\r\n        columns={tableColumns} dataSource={tableData} />\r\n          <Pagination\r\n                style ={{marginTop:\"10px\"}}\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={totalCount}\r\n                    />\r\n    </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Table2;","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\index.jsx",["1977","1978","1979","1980","1981","1982"],"import React,{Component} from 'react'\r\n// antd\r\nimport { Tree ,Modal,Button,Space,message,Input  } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// style\r\nimport '../index.scss'\r\n\r\n// 导入方法\r\nimport {_onSelect,_newTreeNode,_onEditFinish,_deleteTreeNode} from './functionList'\r\n\r\nclass TreeIndex extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      dataSource: store.getState().DataStoragereducer.VibrationDataConfig,      //树列表的数据\r\n      selectedKey:'',//选择的树节点的key\r\n      title:\"\",//选择的树节点的名称\r\n      isModalVisible:false,\r\n      inputValue:\"\", //输入框值\r\n    }\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  // 获取变化的树节点\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.VibrationDataConfig,\r\n\r\n    })\r\n\r\n  }\r\n\r\n  // 展开节点\r\n  onExpand = () => {\r\n    // console.log('Trigger Expand');\r\n  };\r\n\r\n  // 左边点击触发\r\n   onSelect = (selectedKeys, info) => {\r\n    // console.log('selected', selectedKeys, info);\r\n    _onSelect(selectedKeys[0],info.node.title)\r\n    this.setState({\r\n      selectedKey:selectedKeys[0],\r\n      title:info.node.title\r\n    })\r\n  };\r\n  \r\n  // 右击触发\r\n  onRightClick = ({event, node}) =>{\r\n    // console.log('onrightclick',{event, node},node.key,node.active)\r\n    this.setState(\r\n      {\r\n        isModalVisible:true,\r\n        selectedKey:node.key,\r\n        title:node.title,\r\n      }\r\n    )\r\n  }\r\n\r\n  // 新增子节点\r\n  newTreeNode = ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      _newTreeNode(this.state.selectedKey)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n    }else{\r\n      message.error({\r\n        content: '新增错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // 修改节点名称\r\n  onEditFinish = ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      if(this.state.inputValue!=''){\r\n\r\n        _onEditFinish(this.state.selectedKey,this.state.dataSource,this.state.inputValue)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n      }\r\n\r\n    }else{\r\n      message.error({\r\n        content: '修改节点名称错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // 删除节点\r\n  deleteTreeNode= ()=>{\r\n    if(this.state.selectedKey !=''){\r\n      _deleteTreeNode(this.state.selectedKey,this.state.dataSource)\r\n      // 调用成功 关闭\r\n      this.onClose();\r\n    }else{\r\n      message.error({\r\n        content: '删除节点错误！',\r\n        className: 'custom-class',\r\n        style: {\r\n          marginTop: '20vh',\r\n        },\r\n      });\r\n    }\r\n  }\r\n  \r\n  // modal关闭\r\n  onClose = () => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n    });\r\n  };\r\n\r\n  // 输入框\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    this.setState({\r\n      inputValue:inputValue\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {dataSource,isModalVisible,title}  = this.state;\r\n    return (\r\n      <div>\r\n      <Tree\r\n          showLine\r\n          switcherIcon={<DownOutlined />}\r\n          onSelect={this.onSelect}\r\n          treeData={dataSource}\r\n          onExpand={this.onExpand}\r\n          onRightClick ={this.onRightClick}\r\n          />\r\n      <Modal\r\n        title=\"节点操作\" \r\n        visible ={isModalVisible}\r\n        width = {320}\r\n        onCancel = {this.onClose}\r\n        footer={[\r\n          <Button type = \"normal\" onClick={this.onClose}>\r\n            关闭\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Space style = {{marginLeft:\"20px\",marginLeft:\"20px\",width:\"300px\",marginBottom:\"50px\"}}>\r\n          <Input placeholder = {title} onChange = {this.onChange} ></Input>\r\n           <Button  className = {\"ModelBtn\"} onClick={this.onEditFinish}>\r\n            重命名\r\n          </Button>\r\n        </Space>\r\n        \r\n         <Space style = {{marginLeft:\"20px\",marginLeft:\"20px\",width:\"300px\"}}>\r\n          <Button className = {\"ModelBtn\"} onClick={this.newTreeNode}>\r\n            新增\r\n          </Button>\r\n          <Button  className = {\"deleteBtn\"} onClick={this.deleteTreeNode}>\r\n            删除\r\n          </Button>\r\n       \r\n         </Space>\r\n         \r\n   \r\n      </Modal>\r\n      </div>\r\n\r\n   \r\n   \r\n    );\r\n  }\r\n} \r\n\r\nexport default TreeIndex;","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\functionList.jsx",["1983","1984","1985"],"import $ from 'jquery'\r\nimport {headerToken,hostPort} from '@/Common'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 树节点初始化\r\n */\r\nexport function _treeInitial(){\r\n    let dataConfig10\r\n    $.ajax({\r\n      type:\"get\",\r\n      url:hostPort+\"equip/menu/buildMenu\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){ \r\n         dataConfig10=res.data[2]\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    if(dataConfig10){\r\n        let dataConfig2=JSON.parse(JSON.stringify(dataConfig10).replace(/\"menuName\"/g,' \"title\"'))  ;\r\n        let dataConfig3=JSON.parse(JSON.stringify(dataConfig2).replace(/\"id\"/g,' \"key\"'))  ;\r\n        let dataConfig1=JSON.parse(JSON.stringify(dataConfig3).replace(/\"child\"/g,' \"children\"'))   ;\r\n        const action ={\r\n          type:'VibrationComponenDidMount',\r\n          dataConfig:dataConfig1\r\n        }\r\n        store.dispatch(action)\r\n    }\r\n}\r\n\r\n/**\r\n * 树节点选择\r\n * @param {*} id \r\n */\r\nexport  function _onSelect(id,label){\r\n    let tableList= []\r\n    let receiveData\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/vibration/selectPage\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify(\r\n          {\r\n            \"pageNo\": 1,\r\n            \"pageSize\": 10,\r\n            \"queryParameter\": {\r\n              \"menuId\": id\r\n            }\r\n          }\r\n        ),\r\n        success:function(res){\r\n          if(res.flag){\r\n            res.data.pageList.map((item,index)=>{\r\n              tableList.push({\r\n                id:item.id,\r\n                name:item.name,\r\n                downloadURL:hostPort+'equip/file/download/'+item.id,\r\n                state: 'done',\r\n                nodeName:label,\r\n                importer:'admin',\r\n                menuId:item.menuId,\r\n                importTime:item.importTime\r\n            })\r\n           })\r\n           const action ={\r\n            type:'getVibrationTreekey',\r\n            treeKey:id,\r\n            tableList,\r\n            label\r\n          }\r\n        store.dispatch(action)\r\n          }\r\n\r\n        },\r\n        error:function(){\r\n            return false;\r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 新增子节点\r\n */\r\nexport function _newTreeNode(treeid){\r\n\r\n    $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/menu/saveOrUpdate\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n            \"pId\":treeid,\r\n            \"menuName\":\"新增\",\r\n            \"dataType\":\"3\"\r\n          }),\r\n        success:function(res){\r\n          if(res.flag){\r\n              _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n \r\n}\r\n\r\n/**\r\n * 修改节点名称\r\n */\r\nexport function _onEditFinish(treeid,dataSource,label){\r\n  \r\n      $.ajax({\r\n        type:\"POST\",\r\n        url:hostPort+\"equip/menu/saveOrUpdate\",\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify({\r\n            id:treeid,\r\n            \"menuName\":label,\r\n            \"dataType\":\"3\"\r\n        }),\r\n        success:function(res){\r\n          if(res.flag){\r\n        //   dataConfig10=res.data[0]\r\n          _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n}\r\n\r\n/**\r\n * 删除节点\r\n */\r\nexport function _deleteTreeNode(treeid,dataSource){\r\n    $.ajax({\r\n        type:\"DELETE\",\r\n        url:hostPort+\"equip/menu/delete/\"+treeid,\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        success:function(res){\r\n          if(res.flag){\r\n            // console.log('20:41 _deleteTreeNode',res)\r\n            _treeInitial()\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\UploadFile.jsx",["1986"],"import React,{Component} from 'react'\r\n\r\n// antd\r\nimport {Button, message, Form,Input, Space } from 'antd';\r\n\r\n// 引入方法\r\nimport {_newSet} from './functionList'\r\n// 引入组件\r\nimport ChooseFile from './ChooseFile'\r\nexport default class UploadFile extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            disabled:false,\r\n            inputValue:\"\",//输入框输入的值\r\n            datasetName:\"\",//数据集名字\r\n            setid:\"\",//生成的数据集id\r\n        }\r\n    }\r\n\r\n      /**\r\n   * 确认输入\r\n   */\r\n  onOk = ()=>{\r\n    this.setState({\r\n      datasetName:this.state.inputValue,\r\n      disabled:true,\r\n    })\r\n\r\n    let setid = _newSet(this.state.inputValue,this.props.treeKey);\r\n    if(setid!=undefined){\r\n        this.setState({\r\n            setid:setid,\r\n        })\r\n        message.success({\r\n            content: '生成数据集成功！',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '20vh',\r\n            },\r\n          });\r\n    }else{\r\n        message.error({\r\n            content: '生成数据集失败！',\r\n            className: 'custom-class',\r\n            style: {\r\n              marginTop: '20vh',\r\n            },\r\n          });\r\n        this.onClose();\r\n    }\r\n  }\r\n  onClose= ()=>{\r\n    this.props.onClose();\r\n  }\r\n  \r\n  /**\r\n   * 输入框\r\n   * @param {*} e \r\n   */\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    // console.log(inputValue)\r\n    this.setState({\r\n      inputValue:inputValue\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Form\r\n            layout={{  labelCol: { span: 8 },\r\n            wrapperCol: { span: 16 }}\r\n            }\r\n            name=\"上传文件\"\r\n            initialValues={{ remember: true }}\r\n          >\r\n            <Form.Item\r\n              label=\"生成数据集：\"\r\n              name=\"name\"\r\n              rules={[{ required: true, message: '必填选项' }]}\r\n            >\r\n                <Space >\r\n\r\n                    <Input disabled ={this.state.disabled}  onChange = {this.onChange}/> \r\n                    <Button    className = {\"ModelBtn\"}  onClick = {this.onOk}>确认数据集名称</Button>\r\n                </Space>\r\n\r\n            </Form.Item>\r\n            <ChooseFile onClose = {this.onClose} />\r\n\r\n          </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\tableConfig.js",["1987","1988"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Tags,Space} from 'antd'\r\n\r\nimport { Link } from 'react-router-dom';\r\n// 导入组件\r\nimport EditDialog from '../Table1/TabTable/components/EditDialog';\r\nimport DeleteBalloon from '../Table1/TabTable/components/DeleteBalloon';\r\nimport CheckZip from './TabTable/components/CheckZip'\r\n\r\n// 导入方法\r\nimport {_LinkToList} from './TabTable/components/functionList'\r\n\r\n\r\n const tableColumns = [\r\n    {\r\n      title: '所属部件',\r\n      dataIndex: 'nodeName',\r\n      key: 'nodeName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: '数据名称',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: '录入时间',\r\n      dataIndex: 'importTime',\r\n      key: 'importTime',\r\n    },\r\n    {\r\n        title: '最近修改时间',\r\n        dataIndex: 'importTime',\r\n        key: 'importTime',\r\n      },\r\n      {\r\n        title: '操作人员',\r\n        dataIndex: 'importer',\r\n        key: 'importer',\r\n      },\r\n\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n        <CheckZip\r\n           onClick={( )=>{\r\n            return record;\r\n         }}\r\n        ></CheckZip>\r\n        <EditDialog\r\n            onClick={( )=>{\r\n                return record;\r\n             }}\r\n          />\r\n        <DeleteBalloon\r\n         onClick={( )=>{\r\n            return record;\r\n         }}\r\n        />\r\n        <Link to=\"/Devproject/DataProcessing\" >\r\n        <Button\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          onClick={( )=>{\r\n          _LinkToList(record)\r\n            return record;\r\n         }}\r\n        >\r\n          流程\r\n        </Button>\r\n      </Link>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\tableConfig.js",["1989","1990","1991","1992","1993"],"import {Component} from 'react'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport {Button,Tags,Space,Image,Modal} from 'antd'\r\n\r\n// 方法\r\nimport {_deleteCsv,_readCsv} from './TabTable/components/functionList'\r\n\r\n// 组件\r\nimport CreateLine from './TabTable/components/CreateLine'\r\n const tableColumns = [\r\n    {\r\n      title: '图片文件名',\r\n      dataIndex: 'fileName',\r\n      key: 'fileName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: '所属部件',\r\n      dataIndex: 'nodeName',\r\n      key: 'nodeName',\r\n    },\r\n    {\r\n      title: '所属数据集',\r\n      dataIndex: 'datasetName',\r\n      key: 'datasetName',\r\n    },\r\n\r\n    {\r\n      title: '操作',\r\n      // key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n\r\n         <CreateLine \r\n          onClick={()=>{\r\n            let result = _readCsv(text.id)\r\n            return result;\r\n          }}\r\n        >查看</CreateLine>\r\n \r\n        <Button \r\n          type =\"danger\"\r\n          size = \"small\"\r\n          onClick={()=>{\r\n          let Arr = []\r\n          Arr.push(text.id)\r\n          _deleteCsv(Arr)\r\n        }}\r\n        className = 'deleteBtn'\r\n        >删除</Button>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\functionList.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\functionList.jsx",["1994","1995","1996"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n// 导入方法\r\nimport {_checkZip} from '../../../Table1/TabTable/components/functionList'\r\n  /**\r\n   * 删除csv\r\n   */\r\n export  function  _deleteCsv(idArr){\r\n     let flag = false\r\n    $.ajax({\r\n      type:\"DELETE\",\r\n      //DELETE /equip/image/deleteOne\r\n      url:hostPort+\"equip/vibration/deleteList\",\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      data:JSON.stringify(\r\n        idArr\r\n    ),\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n        flag = true\r\n        message.success('删除成功！')\r\n        _vibList(1);\r\n        }\r\n      },\r\n      error:function(){\r\n        message.error('删除失败！')\r\n      }\r\n    })\r\n  }\r\n/**\r\n * 刷新图片\r\n */\r\n  export function _refresh(){\r\n    _vibList(1)\r\n  }\r\n\r\n\r\n/**\r\n * csv列表\r\n */\r\n  export function _vibList(page){\r\n      let id = store.getState().DataStoragereducer.fileName[0].id\r\n      let datasetName =  store.getState().DataStoragereducer.fileName[0].name\r\n      _checkZip(page,id,datasetName)\r\n  }\r\n\r\n  /**\r\n   * 查看csv文件\r\n   */\r\n  export function _readCsv(id){\r\n    console.log(id)\r\n    let data= []\r\n    $.ajax({\r\n      type:\"GET\",\r\n      url:hostPort+\"equip/vibration/readCSV/\"+id,\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:function(res){\r\n        if(res.flag){\r\n        data = res.data\r\n        }\r\n      },\r\n      error:function(){\r\n        \r\n      }\r\n    })\r\n    return _createData(data)\r\n  }\r\n\r\n\r\n  /**\r\n   * 生成用于画图的数据\r\n   */\r\nfunction _createData(a){\r\n    let max = [a[0]['第1列']]\r\n    let min =[a[0]['第1列']]\r\n    let data = []\r\n    a.map((item,index)=>{\r\n      let a = `${index}`\r\n      data.push([\r\n        a,item['第1列']\r\n      ])\r\n      if(item['第1列']>max){\r\n        max = item['第1列']\r\n      }else if(item['第1列']<min){\r\n        min = item['第1列']\r\n      }\r\n    })\r\n    // console.log(data,'data')\r\n    // console.log(max,'max')\r\n    // console.log(min ,'min')\r\n    let e = []\r\n    e.push(\r\n      data\r\n    )\r\n    e.push(max)\r\n    e.push(min)\r\n    return e\r\n  }","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\ChooseFile.jsx",["1997"],"import React, { Component } from 'react';\r\nimport $ from 'jquery'\r\n\r\n// antd\r\nimport { Upload, message, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport  {hostPort} from '@/Common'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// 方法\r\nimport {_refreshForm  } from \"./functionList\";\r\n\r\nexport default class ChooseFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          datasetName :this.props.datasetName,\r\n          datasetID: store.getState().DataStoragereducer.vibrationdata.datasetID,\r\n          treeKey: store.getState().DataStoragereducer.treeKey,\r\n          label: store.getState().DataStoragereducer.label,\r\n        };\r\n        store.subscribe(this.handleStoreChange);\r\n    }\r\n    handleStoreChange =()=>{\r\n        this.setState({\r\n          datasetID: store.getState().DataStoragereducer.vibrationdata.datasetID,\r\n        })\r\n    }\r\n\r\n    onChange=(info)=> {\r\n        if (info.file.response) {\r\n            let response = info.file.response\r\n            if(response.flag){\r\n                // console.log(response)\r\n            message.success(`${info.file.name} 上传成功！`);\r\n            _refreshForm(this.state.treeKey,this.state.label)\r\n            }else{\r\n            message.error(`${info.file.name}上传失败！`);\r\n            }\r\n            this.props.onClose()\r\n        }\r\n      }\r\n    \r\n \r\n\r\n\r\n    render() {\r\n        const props = {\r\n            name: 'file',\r\n            action: `${hostPort}equip/vibration/uploadVibSet`,\r\n            // headers: {\r\n            //   authorization: 'authorization-text',\r\n            // },  //请求头\r\n            showUploadList:false,\r\n           \r\n            \r\n        }\r\n        return (\r\n            <div  >\r\n             <Upload {...props}\r\n                    onChange = {this.onChange}\r\n                    // action={hostPort+\"equip/image/uploadImageSets\"}\r\n                    data = {{\r\n                        setId:this.state.datasetID\r\n                    }}\r\n                    >\r\n                        \r\n                <Button icon={<UploadOutlined />}>选择文件</Button>\r\n            </Upload>,\r\n                    \r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\EditDialog.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\DeleteBalloon.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\CheckZip.jsx",["1998"],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateLine.jsx",["1999"],"import React,{Component} from 'react'\r\n\r\n// antd\r\nimport {Button,Modal} from 'antd'\r\nimport CreateChart from './CreateChart'\r\nexport default class CreateLine extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            visible:false\r\n        }\r\n\r\n    }\r\n    onOpen=()=>{\r\n        let result = this.props.onClick()\r\n        if(result != undefined){\r\n            this.setState({\r\n                visible:true,\r\n                data:result,\r\n            })\r\n        }\r\n    }\r\n    onClose =()=>{\r\n        this.setState({\r\n            visible:false\r\n        })\r\n    }\r\n \r\n\r\n    render(){\r\n        const {visible,data} = this.state;\r\n        return(\r\n            <div>\r\n                <Button size ={\"small\"} onClick ={this.onOpen}>查看</Button>\r\n                <Modal\r\n                    title=\"查看数据\" \r\n                    visible ={visible}\r\n                    onCancel ={this.onClose}\r\n                    width = {1000}\r\n                    footer={null}\r\n                >\r\n                    <CreateChart result = {data}></CreateChart>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateChart.jsx",["2000","2001","2002"],"import React, { Component } from 'react'\r\nimport {_createChart} from './chart.config.js'\r\n\r\n/**\r\n * 说明：第一个import echarts是必须的\r\n * 第二个是引入的具体的一个图表类型 （可选）\r\n * 第三个是表的title(可选)\r\n */\r\nimport echarts from 'echarts/lib/echarts' \r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport class CreateChart extends React.Component {\r\n    /**\r\n     * 初始化id id是随机生成的一串唯一的字符串\r\n     */\r\n    constructor(props) {\r\n        super(props)\r\n        // let id = ( '_' + Math.random()).replace('.','_');\r\n        // this.state = {\r\n        //     chartId : 'chart' + id\r\n        // }\r\n    }\r\n    /**\r\n     * 生成图表，主要做了一个判断，因为如果不去判断dom有没有生成，\r\n     * 在后面如果定期去更新图表，每次生成一个dom节点会导致浏览器\r\n     * 占用的cpu和内存非常高，踩过坑。\r\n     * 这里的config就是引入的配置文件中的config,文件头部会有说明\r\n     */\r\n    // initChart(id) {\r\n    //     var myChart = echarts.init(document.getElementById(id));\r\n    //     myChart.setOption(config)\r\n    // }\r\n    componentDidMount() {\r\n        /**\r\n         * 在这里去调用生成图表的方法是因为，在组件加载后生成\r\n         * dom节点，这个时候canvas才能根据id去绘制图表\r\n         * 在这里去写了一个setTimeout修改了其中的一些数据，来                                         \r\n         * 测试图表的刷新，是否刷新了，后期大家可能是定期去某\r\n         * 接口中获取数据，方法同理\r\n         */                \r\n        // this.initChart(this.state.chartId);\r\n        // setTimeout(()=>{\r\n        //     console.log('刷新')\r\n        //     config.series[0].data = [\r\n        //         {value:335, name:'中国'},\r\n        //         {value:310, name:'美国'},\r\n        //         {value:274, name:'英国'},\r\n        //         {value:235, name:'俄罗斯'},\r\n        //         {value:400, name:'法国'}\r\n        //     ].sort(function (a, b) { return a.value - b.value; })\r\n        //     this.initPie(this.state.pieId);\r\n        // },1000*5)\r\n        this.getOption()\r\n    \r\n    }\r\n    componentDidUpdate() {\r\n        // console.log('componentDidUpdate!')\r\n        // this.initChart()\r\n    }\r\n    getOption = () =>{\r\n        // console.log(this.props,'this.props.result')\r\n        // const {max,min } = this.state\r\n        // //生成纵坐标\r\n        // var a = (max-min)/10\r\n        // let yAxisData = []\r\n        // let e = min+a\r\n        // for(let i =0;i<10;i++){\r\n        //     yAxisData.push(e)\r\n        //     e=e+a\r\n        // }\r\n        // console.log(yAxisData,'yAxisData')\r\n        // console.log('this.state.xdataSource',this.state.xdataSource)\r\n       /*  return {\r\n            title: {\r\n                text:''\r\n            },\r\n            tooltip: {},\r\n            // legend: {\r\n            //     data:['销量','库存']\r\n            // },\r\n            xAxis: {\r\n                name: '采样时间',\r\n                boundaryGap: false, \r\n                data:[0,1,2,3,4,5,6,7,8,9,10]\r\n            },\r\n            yAxis: {\r\n                name: '参数值',\r\n                type:'value',\r\n                // min:this.state.min,\r\n                // max:this.state.max,\r\n                splitNumber:20,\r\n                axisTick:{\r\n                    length:8\r\n                } \r\n            },\r\n            series: [{\r\n                name: 'dataSource',\r\n                type: 'line',\r\n                data: [100,200,300,400,500,600,700,800]\r\n            },\r\n            // {\r\n            //     name: '库存',\r\n            //     type: 'line',\r\n            //     data: stores\r\n            // }\r\n        ]\r\n        }; */\r\n        let result = _createChart(this.props.result)\r\n        return result;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ReactEcharts style={{width:'950 px',height:'1000px',margin:'0px'}} option={this.getOption()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CreateChart","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\LifePrediction\\component\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\PreProcessing.jsx",["2003","2004","2005","2006"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Select ,Space ,Modal,message} from 'antd';\r\n\r\n// style\r\nimport '../../style.scss'\r\nimport {_preProcessing} from '../functionList'\r\n\r\nconst { Option } = Select;\r\n\r\nclass PreProcessing extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            algorithm:\"\",\r\n        }\r\n    }\r\n\r\n  /**\r\n   * 提交编辑表单\r\n   */\r\n  handleSubmit = () => {\r\n    this.onClose();\r\n    let record =  this.props.onClick()\r\n    let originID = record.originID\r\n    _preProcessing(originID,this.state.algorithm,record);\r\n  };\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n//   选择框变化\r\nonChange=(value)=>{\r\n    this.setState({\r\n        algorithm:value\r\n    })\r\n}\r\n    render(){\r\n        const{visible} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                >\r\n                数据预处理\r\n                </Button>\r\n                <Modal\r\n                    title=\"预处理算法选择\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Space>\r\n                        <Select defaultValue=\"奇异值处理\" style={{ width: 250 }} onChange = {this.onChange}>\r\n                            <Option value=\"奇异值处理\">奇异值处理</Option>\r\n                                <Option value=\"归一化处理\">归一化处理</Option>\r\n                                <Option value=\"平滑处理\">平滑处理</Option>\r\n                                <Option value=\"降噪处理\">降噪处理</Option>\r\n                        </Select>\r\n                        <Button className =\"normalBt\" onClick = {this.handleSubmit}>确认</Button>\r\n                    </Space>\r\n                         \r\n                     \r\n                    \r\n                </Modal>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default PreProcessing;\r\n\r\nconst styles = {\r\n    editDialog: {\r\n      display: 'inline-block',\r\n      marginRight: '5px',\r\n    },\r\n  };\r\n  \r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  \r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\CheckDialog.jsx",["2007"],"import React,{Component} from 'react'\r\n//antd\r\nimport {Button,Modal,Table,InputNumber} from 'antd'\r\n// 导入方法\r\nimport {_checkDialog} from '../functionList'\r\n// 导入组件\r\nimport CreateLineChart from './CreateLineChart'\r\n// style \r\nimport '../../style.scss'\r\nexport default class CheckZip extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            visible:false,\r\n            column:[],\r\n            dataSource:[],\r\n        }\r\n    }\r\n\r\n    CheckZip = ()=>{\r\n        let id =  this.props.onClick()\r\n        this.setState({\r\n            visible:true,\r\n        })\r\n        let dataTable \r\n        if(id){\r\n            dataTable = _checkDialog(id)\r\n            this.setState({\r\n                column:dataTable.column,\r\n                dataSource:dataTable.data\r\n            })\r\n        }\r\n   }\r\n\r\n   onClose = ()=>{\r\n       this.setState({\r\n           visible:false,\r\n       })\r\n   }\r\n\r\n    render(){\r\n        const {visible,column,dataSource}  = this.state;\r\n        return(\r\n            <div style={styles.checkDialog}>\r\n\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.CheckZip}\r\n                >\r\n                {this.props.text}\r\n                </Button>\r\n            <Modal\r\n                destroyOnClose  = {true}\r\n                title=\"查看数据\" \r\n                visible ={visible}\r\n                width = {1500}\r\n                onCancel = {this.onClose}\r\n                footer={null}\r\n            >\r\n                <CreateLineChart max= {this.state.column.length-1} dataSource={dataSource} ></CreateLineChart>\r\n                <Table columns={column} dataSource={dataSource} scroll={{ x: 1000, y: 400 }} ></Table>\r\n            </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    checkDialog: {\r\n      display: 'inline-block',\r\n      marginRight: '5px',\r\n    },\r\n  };\r\n  ","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\CreateLineChart.jsx",["2008","2009","2010","2011"],"import React,{Component } from 'react'\r\n// antd\r\nimport {Button,Modal,InputNumber,Space} from 'antd'\r\n\r\nimport {_createChart} from './chart.config.js'\r\n\r\n// echarts\r\n/**\r\n * 说明：第一个import echarts是必须的\r\n * 第二个是引入的具体的一个图表类型 （可选）\r\n * 第三个是表的title(可选)\r\n */\r\nimport echarts from 'echarts/lib/echarts' \r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nclass CreateLineChart extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            num:'',\r\n            visible:false,\r\n            dataSource:[],\r\n            max:\"\",\r\n            min:\"\",\r\n        }\r\n    }\r\n\r\n    onOk=()=>{\r\n        let valueArr = []\r\n        let xArr =[]\r\n        this.props.dataSource.map((item,index)=>{\r\n            // 拿出每一个对象中的 “第num+1列” 的数据\r\n                valueArr.push(item[`第${this.state.num+1}列`])\r\n                xArr.push(index)\r\n        })\r\n        let max= valueArr[0]\r\n        let min = valueArr[0]\r\n        let dataSource = []\r\n\r\n        valueArr.map((item,index)=>{\r\n          if(item>max){\r\n              max= item\r\n            }\r\n            if(item<min){\r\n              min= item\r\n            }\r\n            dataSource.push([\r\n              index,Number(item)\r\n            ])\r\n      })\r\n       max = Math.ceil(max) //向上取整\r\n       min = parseInt(min) //向下取整\r\n      this.setState({\r\n        max:max,min:min,dataSource:dataSource,\r\n        visible:true,\r\n      })\r\n    }\r\n\r\n    // 数字输入框改变\r\n    onChange=(value)=>{\r\n        this.setState({\r\n            num:value\r\n        })\r\n    }\r\n    // 关闭\r\n    onClose=()=>{\r\n        this.setState({\r\n            visible:false,\r\n        })\r\n    }\r\n    getOption=()=>{\r\n      const {max,min,dataSource} = this.state;\r\n      let result = _createChart(max,min,dataSource)\r\n      return result;\r\n    }\r\n\r\n      render(){\r\n          const {visible,dataSource} = this.state;\r\n      \r\n       \r\n        return(\r\n            <div>\r\n                <Space>\r\n                <span>请输入需要生成折线图的传感器编号：</span><InputNumber min={1} max={this.props.max}  onChange = {this.onChange}>\r\n                        </InputNumber><Button type =\"primary\"  size=\"middle\" onClick={this.onOk}> 确认</Button>\r\n                </Space>\r\n                <Modal\r\n                destroyOnClose  = {true}\r\n                title=\"查看折线图\" \r\n                visible ={visible}\r\n                width = {1500}\r\n                onCancel = {this.onClose}\r\n                footer={null}\r\n            >\r\n              <ReactEcharts style={{width:'950 px',height:'1000px',margin:'0px'}} option={this.getOption()} />\r\n            </Modal>\r\n            </div>\r\n        )\r\n      }\r\n  \r\n}\r\nexport default CreateLineChart;","D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\sequence\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\vibration\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\vibration\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\PreProcessing.jsx",["2012","2013","2014","2015"],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\CheckDialog.jsx",["2016"],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\CreateLineChart.jsx",["2017","2018","2019","2020"],"D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\functionList.jsx",["2021","2022"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 振动数据\r\n */\r\n// 时频图像转换\r\nexport function _vibtransform(id,record,values){\r\n  let returnData\r\n  let flag = false\r\n  if(id == ''){\r\n    _message(false,'数据预处理')\r\n\r\n  }else{\r\n    $.ajax({\r\n      type:\"POST\",\r\n      url:hostPort+\"equip/vibration/transform\",\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      data:JSON.stringify({\r\n              frequency:values.frequency,\r\n              function: values.wavelet,\r\n              picNum: values.picNum,\r\n              preprocessId: id,\r\n              windowSize: values.windowSize,\r\n        }),\r\n        success:res=>{\r\n          if(res.flag){\r\n            flag = true\r\n            returnData = res.data\r\n              const action ={\r\n                type:'vibtransform',\r\n                values,\r\n                returnData,\r\n                record,\r\n              }\r\n              store.dispatch(action)\r\n              \r\n            }  \r\n          \r\n        },\r\n        error:function(){\r\n        }\r\n    })\r\n    _message(flag,'时频图像转换')\r\n  }\r\nreturn flag;\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\sequence\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Preprocessing\\component\\vibration\\PreProcessing.jsx",["2023","2024","2025","2026","2027"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Select ,Space ,Modal,message} from 'antd';\r\n\r\n// style\r\nimport '../../style.scss'\r\nimport {_vibpreProcessing} from '../functionList'\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\nconst { Option } = Select;\r\n\r\nclass PreProcessing extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            algorithm:\"\",\r\n            loading:false,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        \r\n      let e = store.getState().Preprocessingreducer.preProcessingTable[0].prestate \r\n      if(e ==='已完成'){\r\n          this.setState({\r\n              loading:false,\r\n          })\r\n      }\r\n}\r\n\r\n  /**\r\n   * 提交预处理\r\n   */\r\n  handleSubmit = () => {\r\n    this.onClose();\r\n    let record =  this.props.onClick()\r\n    let setId = record.id\r\n    let flag \r\n    this.setState({\r\n      loading:true,\r\n  },\r\n    ()=>{\r\n        setTimeout(() => {\r\n          flag = _vibpreProcessing(setId,this.state.algorithm[0],record);\r\n        }, 1000);\r\n    }\r\n  )\r\n \r\n  };\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n//   选择框变化\r\nonChange=(value)=>{\r\n    this.setState({\r\n        algorithm:value\r\n    })\r\n}\r\n    render(){\r\n        const{visible,loading} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                loading ={loading}\r\n                >\r\n                数据预处理\r\n                </Button>\r\n                <Modal\r\n                    title=\"预处理算法选择\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Space>\r\n                        <Select  mode=\"multiple\"  style={{ width: 250 }} onChange = {this.onChange}>\r\n                            <Option value=\"奇异值处理\">奇异值处理</Option>\r\n                            <Option value=\"归一化处理\">归一化处理</Option>\r\n                            <Option value=\"平滑处理\">平滑处理</Option>\r\n                            <Option value=\"降噪处理\">降噪处理</Option>\r\n                        </Select>\r\n                        <Button className =\"normalBtn\"  onClick = {this.handleSubmit}>确认</Button>\r\n                    </Space>\r\n                         \r\n                     \r\n                    \r\n                </Modal>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default PreProcessing;\r\n\r\nconst styles = {\r\n    editDialog: {\r\n      display: 'inline-block',\r\n      marginRight: '5px',\r\n    },\r\n  };\r\n  \r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  \r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\component\\vibration\\Exchange.jsx",["2028"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Select ,Space ,Modal,Form,Input} from 'antd';\r\n\r\n// style\r\nimport '../../style.scss'\r\nimport {_vibtransform} from '../functionList'\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\nconst { Option } = Select;\r\n\r\nclass Exchange extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            algorithm:\"\",\r\n            loading:false,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        \r\n      let e = store.getState().TableTimeFrequencyreducer.taskTable[0].state \r\n      if(e ==='已完成'){\r\n          this.setState({\r\n              loading:false,\r\n          })\r\n      }\r\n    }\r\n\r\n  /**\r\n   * 提交\r\n   */\r\n  handleSubmit = (values) => {\r\n    this.onClose();\r\n    let record =  this.props.onClick()\r\n    let preprocessId = record.preprocessId\r\n    let flag\r\n    // console.log(values,'values')\r\n    this.setState({\r\n      loading:true,\r\n    },\r\n    ()=>{\r\n        setTimeout(() => {\r\n            flag = _vibtransform(preprocessId,record,values);\r\n        }, 1000);\r\n    })\r\n   \r\n  };\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n//   选择框变化\r\nonChange=(value)=>{\r\n    this.setState({\r\n        algorithm:value\r\n    })\r\n}\r\n    render(){\r\n        const{visible,loading} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                loading ={loading}\r\n                >\r\n                时频图像转换\r\n                </Button>\r\n                <Modal\r\n                    title=\"时频图像转换\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={this.handleSubmit}\r\n                        >\r\n                            {\r\n                                formItemArr.map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                            [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button className =\"normalBtn\"  htmlType=\"submit\" >提交时频图像转换</Button>\r\n                        </Form.Item>\r\n                        </Form>    \r\n                     \r\n                    \r\n                </Modal>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default Exchange;\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n  \r\n  const formItemArr = [\r\n    {\r\n        name:\"wavelet\",\r\n        label:\"小波基选择\",\r\n        rule:true,\r\n        content:(\r\n            <Select\r\n            placeholder=\"请选择小波基！\"\r\n            allowClear\r\n            >\r\n            <Option value=\"mesh\">mesh</Option>\r\n            <Option value=\"cmor\">cmor</Option>\r\n            <Option value=\"morl\">morl</Option>\r\n            </Select>\r\n        )\r\n    },{\r\n        name:\"windowSize\",\r\n        label:\"滑动窗大小\",\r\n        rule:true,\r\n        content: (\r\n            <Space>\r\n                <Input placeholder = {'推荐大小为1024'}   />\r\n            </Space>\r\n        ) \r\n    },{\r\n        name:\"picNum\",\r\n        label:\"时频图像张数\",\r\n        rule:true,\r\n        content:   <Input  placeholder = {'推荐张数为100'} />\r\n    },{\r\n        name:\"frequency\",\r\n        label:\"采集频率\",\r\n        rule:true,\r\n        content:   <Input placeholder = {'推荐频率为1024'} />\r\n    }\r\n]","D:\\前端学习\\devproject\\demo\\src\\pages\\TableTimeFrequency\\store\\TableTimeFrequencyreducer.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\Table1\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\Table2\\tableConfig.js",["2029"],"// antd\r\nimport {Button,Space,Cascader} from 'antd'\r\n\r\n// 导入方法\r\nimport {_deleteLabel} from '../component/functionList'\r\nimport AddLabel from '../component/AddLabel'\r\nimport ViewImg from '../component/ViewImg'\r\n// style\r\nimport '../../style.scss'\r\n\r\n\r\n const tableColumns = [\r\n  {\r\n    title: '图片名',\r\n    dataIndex: 'fileName',\r\n    key: 'fileName',\r\n  },\r\n  {\r\n    title: \"标签名\",\r\n    dataIndex: 'label',\r\n    key: 'label',\r\n  },\r\n  {\r\n    title: \"类别\",\r\n    dataIndex: 'type',\r\n    key: 'type',\r\n  },\r\n  {\r\n    title: \"是否标注\",\r\n    dataIndex: 'labelOrnot',\r\n    key: 'labelOrnot',\r\n    filters: [\r\n      {\r\n        text: '已标注',\r\n        value:'已标注',\r\n      },\r\n      {\r\n        text: '未标注',\r\n        value: '未标注',\r\n      },\r\n    ],\r\n    // specify the condition of filtering result\r\n    // here is that finding the name started with `value`\r\n    onFilter: (value, record) => record.labelOrnot.indexOf(value) === 0,\r\n    sortDirections: ['descend'],\r\n  \r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n          {/* 查看图片 */}\r\n          <ViewImg  onClick={( )=>{\r\n            return record;\r\n         }}></ViewImg>\r\n          <AddLabel onClick={( )=>{\r\n            return record;}}\r\n          ></AddLabel>\r\n            {/* 删除标签 */}\r\n            <Button \r\n          className = \"deleteBtn\"\r\n          type =\"danger\" \r\n          size = {\"small\"}\r\n\r\n          onClick={()=>{\r\n            let e = []\r\n            e.push(text.id)\r\n          _deleteLabel(e)\r\n          }}\r\n        >删除标签</Button>\r\n      </Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\component\\functionList.jsx",["2030"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message,Image  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 查看压缩包\r\n */\r\nexport function _vibPngSelectPage(page){\r\n  let pageList = []\r\n  let totalCount = \"\"\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n\r\n  $.ajax({\r\n      type:\"post\",\r\n      url:hostPort+\"equip/vibration/vibPngSelectPage\",\r\n      dataType:'JSON',\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      async:false,\r\n      data:JSON.stringify(\r\n          {\r\n              \"pageNo\": page,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n                \"transformId\": transformedID\r\n              }\r\n            }\r\n        ),\r\n      success:function(res){\r\n        if(res.flag){ \r\n         pageList = res.data.pageList\r\n         totalCount = res.data.totalCount\r\n         const action = {\r\n          type:'vibPngSelectPage',\r\n          pageList,\r\n          totalCount\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n        // console.log('10:53',dataConfig10)\r\n      },\r\n      error:function(){\r\n      }\r\n  })\r\n}\r\n/**\r\n * 删除标签\r\n */\r\nexport function _deleteLabel(idArr){\r\n  // console.log(idArr);\r\n  // let e  =  []\r\n  // e.push(imageID.toString())\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"DELETE\",\r\n    url:hostPort+\"equip/vibration/deleteLabel\",\r\n    // POST /equip/vibration/deleteLabel\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify(\r\n      idArr\r\n    ),\r\n    async:false,\r\n    success:res=>{\r\n      if(res.flag){\r\n          //要刷新\r\n          flag =  true\r\n          _vibPngSelectPage(1)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除标签')\r\n}\r\n\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n/**\r\n * 打标签\r\n */\r\nexport function _viblabel(labelVal,pngId){\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/label?pngId=\"+pngId+\"&labelVal=\"+labelVal,\r\n    //  http://192.168.1.173:9001/equip/vibration/label?pngId=0003778303968b77434fa10cb288a9a3&labelVal=000\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify(\r\n        data\r\n    ),\r\n    success:res=>{\r\n      flag =  true\r\n      _vibPngSelectPage(1)\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'标注')\r\n\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\component\\ViewImg.jsx",["2031"],"// antd\r\nimport {Button,Image,Modal} from 'antd'\r\nimport {hostPort} from '@/Common'\r\n\r\nimport React, { useState,Component  } from 'react';\r\nexport default class ViewImg extends Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      visible:false,\r\n      content:null,\r\n    }\r\n  }\r\n\r\n  onOpen =()=>{\r\n    let record = this.props.onClick()\r\n    // console.log('record',record)\r\n    let content = (\r\n    <Image\r\n    width={200}\r\n    src={`${hostPort}equip/vibration/view/?id=${record.id}&type=png`}\r\n    // http://192.168.1.173:9001/equip/vibration/view?id=004fbc15b30e6130dbfafa1baa2bd03e&type=png\r\n  />\r\n    )\r\n    this.setState({\r\n      visible:true,\r\n      content:content,\r\n    })\r\n  }\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {visible} = this.state;\r\n    return(\r\n      <div>\r\n      <Button \r\n       onClick={this.onOpen}\r\n       size = {\"small\"}\r\n \r\n      >查看图片</Button>\r\n      \r\n      <Modal\r\n        title=\"查看图片\" \r\n        visible={visible}\r\n        onCancel={this.onClose}\r\n        width = {320}\r\n        footer={null}\r\n      >\r\n       {this.state.content}\r\n\r\n      </Modal>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\AddCsv.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\TagManagement\\vibration\\component\\AddLabel.jsx",["2032","2033","2034","2035"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Select,Form  ,Modal,Input,Space} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n// style\r\nimport '../../style.scss'\r\n\r\n\r\n// 导入方法\r\nimport {_message,_vibPngSelectPage,_viblabel} from './functionList'\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddLabel extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n       \r\n        }\r\n    }\r\n\r\n    \r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n    /**\r\n   * 提交编辑表单\r\n   */\r\n  handleSubmit = (values) => {\r\n    let pngId  = this.props.onClick().id\r\n    _viblabel(values.labelVal,pngId)\r\n    this.onClose();\r\n  };\r\n\r\n\r\n    render(){\r\n        const{visible} = this.state;\r\n\r\n        return(\r\n\r\n            <div>\r\n              <Space>\r\n              <Button \r\n                        // size = {\"small\"}\r\n                        // style = {{marginLeft:\"10px\",marginBottom:\"10px\"}}\r\n                        className = \"normalBtn\"\r\n                        size = {\"small\"}\r\n                        onClick = {this.onOpen}\r\n                        >进行标注</Button>\r\n              </Space>\r\n\r\n                  <Modal\r\n                    title ={'进行标注'}\r\n                    visible ={visible}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                    destroyOnClose= {true}\r\n\r\n                  >\r\n                       <Form\r\n                      {...layout}\r\n                      name=\"进行标注\"\r\n                      initialValues={{ remember: true }}\r\n                      onFinish={this.handleSubmit}\r\n                      // onFinishFailed={onFinishFailed}\r\n                    >\r\n                      <Form.Item\r\n                        label=\"标签值\"\r\n                        name=\"labelVal\"\r\n                        rules={[{ required: true, message: '必填选项' }]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                      {/* <Form.Item\r\n                        label=\"选择类型\"\r\n                        name=\"importer\"\r\n                        rules={[{ required: true, message: '必选' }]}\r\n                      >\r\n                         <Select\r\n                          placeholder=\"请选择要标注的图片类别！\"\r\n                          allowClear\r\n                          >\r\n                          <Option value=\"0\">0</Option>\r\n                          <Option value=\"1\">1</Option>\r\n                          <Option value=\"2\">2</Option>\r\n                          </Select>\r\n                      </Form.Item> */}\r\n\r\n                      <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          提交标签值\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n        \r\n                  </Modal>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default AddLabel;\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 6},\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\Table2\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\Table1\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\ViewImg.jsx",["2036"],"D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\functionList.jsx",["2037","2038","2039","2040","2041"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message,Image  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n/**\r\n * 查看压缩包\r\n */\r\nexport function _vibPngSelectPage(page){\r\n    let pageList = []\r\n    let totalCount = \"\"\r\n    let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n    $.ajax({\r\n        type:\"post\",\r\n        url:hostPort+\"equip/vibration/vibPngSelectPage\",\r\n        dataType:'JSON',\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        async:false,\r\n        data:JSON.stringify(\r\n            {\r\n                \"pageNo\": page,\r\n                \"pageSize\": 10,\r\n                \"queryParameter\": {\r\n                  \"transformId\": transformedID\r\n                }\r\n              }\r\n          ),\r\n        success:function(res){\r\n          if(res.flag){ \r\n           pageList = res.data.pageList\r\n           totalCount = res.data.totalCount\r\n           const action = {\r\n            type:'vibPngSelectPage',\r\n            pageList,\r\n            totalCount,\r\n            }\r\n            store.dispatch(action)\r\n          }\r\n          // console.log('10:53',dataConfig10)\r\n        },\r\n        error:function(){\r\n        }\r\n    })\r\n  }\r\n\r\n/**\r\n * 批量划分\r\n */\r\nexport function _vibbatchDivide(idArr,divideVal){\r\n  \r\n  let flag = false\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n//   let idList = '%5B%22'\r\n//   idArr  = idArr.join('%22%2C%20%22')\r\n//   idList = idList+idArr +'%22%5D'\r\n//  console.log(idArr)\r\n  if(transformedID  == ''){\r\n    _message(false,'数据集时频图像转换')\r\n  }else{\r\n      $.ajax({\r\n        type:\"post\",\r\n        // url:hostPort+\"equip/vibration/dividePng?transformId=\"+transformedID+'&idList='+idArr+\"&divideVal=\"+divideVal,\r\n        url:hostPort+\"equip/vibration/dividePng?transformId=\"+transformedID+\"&divideVal=\"+divideVal,\r\n        // POST http://192.168.1.173:9001/equip/vibration/dividePng?transformId=vedrf&idList=%5B%2200010c8dc5e0287a562850b4f75e0338%22%2C%20%220003778303968b77434fa10cb288a9a3%22%5D&divideVal=%E6%B5%8B%E8%AF%95%E9%9B%86\r\n        // [\"00010c8dc5e0287a562850b4f75e0338\", \"0003778303968b77434fa10cb288a9a3\"]\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        data:JSON.stringify(\r\n            // {\r\n              // \"transformId\":transformedID,\r\n              idArr,\r\n              // \"divideVal\":divideVal\r\n            // }\r\n        ),\r\n        success:res=>{\r\n          if(res.flag ){\r\n            flag =  true\r\n            _vibPngSelectPage(1)\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n    }\r\n  _message(flag,'批量划分')\r\n\r\n}\r\n\r\n/**\r\n * 自动划分\r\n */\r\nexport function _vibautoDivide(trainingNum){\r\n  let flag = false\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let  testSet = []\r\n  let trainSet = []\r\n  let testSetId //放测试集id\r\n  let trainSetId //放训练集id\r\n  if(transformedID  === ''){\r\n    _message(false,'数据集时频图像转换')\r\n  }else{\r\n    $.ajax({\r\n      type:\"post\",\r\n      //Request URL: http://192.168.1.173:9001/equip/vibration/autoDivide?transformId=fwef&trainNum=121212\r\n      url:hostPort+\"equip/vibration/autoDivide?transformId=\"+transformedID+'&trainNum='+trainingNum,\r\n      contentType:\"application/json\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:res=>{\r\n        flag =  true\r\n        // _vibPngSelectPage(1)\r\n        _vibPngSelectPage(1)\r\n              //划分后自动刷新\r\n              testSetId = res.data[1].id\r\n              testSet = res.data[1].pngs\r\n              trainSetId = res.data[0].id\r\n              trainSet = res.data[0].pngs\r\n              const action = {\r\n                type:'vibAutodivide',\r\n                testSetId,\r\n                trainSetId,\r\n                }\r\n                store.dispatch(action)\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n    _message(flag,'自动划分')\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\AutoDivide.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\DatasetConstruct\\vibration\\component\\BatchOperation.jsx",["2042"],"\r\nimport React,{Component} from 'react'\r\n// antd\r\nimport { Modal,Button,Cascader,Space,message} from 'antd';\r\n// 方法\r\nimport {_vibbatchDivide} from './functionList'\r\nconst options = [\r\n    {\r\n      value: '训练集',\r\n      label: '训练集',\r\n    },\r\n    {\r\n      value: '测试集',\r\n      label: '测试集',\r\n    },\r\n  ];\r\nexport default class BatchOperation extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            visible:false,\r\n            value:'',//训练集或者 测试集\r\n        }\r\n\r\n    }\r\n\r\nonOpen=()=>{\r\n        this.setState({\r\n            visible:true\r\n        })\r\n}\r\n\r\n/**\r\n * 提交批量划分\r\n */\r\nonOk = ()=>{\r\n    let idArr = this.props.getRecords()\r\n    if(idArr.length ==0){\r\n       message.error('未选中图片！')\r\n    }else{\r\n        _vibbatchDivide(idArr,this.state.value)\r\n    }\r\n   \r\n    this.setState(\r\n        {\r\n            visible:false,\r\n        }\r\n    )\r\n    \r\n}\r\n\r\n/**\r\n * 关闭窗口\r\n */\r\n    onClose = ()=>{\r\n        this.setState(\r\n            {\r\n                visible:false,\r\n            }\r\n        )\r\n    }\r\n\r\n/**\r\n * 表格改变\r\n */\r\n  \r\nonChange = (value)=>{\r\n   this.setState(\r\n       {\r\n        value:value[0] \r\n       }\r\n   )\r\n  } \r\n\r\n\r\n    render(){\r\n    const { visible } = this.state;\r\n        return(\r\n            <div >\r\n            <Button   className =\"normalBtn\"  size ='large' onClick ={this.onOpen}>批量操作</Button>\r\n            <Modal\r\n                title=\"数据集划分\" \r\n                visible ={visible}\r\n                width = {400}\r\n                footer={null}\r\n                onCancel = {this.onClose}\r\n                >\r\n                <Space>\r\n                   <Cascader options={options} onChange={this.onChange} placeholder=\"请选择要划分的数据集！\" />\r\n                    <Button type =\"normal\"  onClick ={this.onOk}>确认划分</Button>\r\n                </Space>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\vibration\\Table2\\tableConfig.js",["2043"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\nimport DetailMsg from '../component/DetailMsg'\r\n// 导入方法\r\nimport {_vibdeleteModel,_vibmodelTraining} from '../component/functionList'\r\n\r\n// style\r\nimport '../../style.scss'\r\n const tableColumns = [\r\n  {\r\n    title: '模型',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '训练批次',\r\n    dataIndex: 'minNum',\r\n    key: 'minNum',\r\n  },\r\n  {\r\n    title: '学习率',\r\n    dataIndex: 'lr',\r\n    key: 'lr',\r\n  },\r\n  {\r\n    title: '迭代次数',\r\n    dataIndex: 'iterNum',\r\n    key: 'iterNum',\r\n  },\r\n  {\r\n    title: '训练状态',\r\n    dataIndex: 'state',\r\n    key: 'state',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => {\r\n        if(record.state === '已训练'){\r\n          return(\r\n              <Space size=\"middle\">\r\n                <DetailMsg buttonType = {'normal'} buttonGhost= {false} onClick = {\r\n                  ()=>{\r\n                    return record;\r\n                  }\r\n                }></DetailMsg>\r\n                <Button size =\"small\"   className = \"normalBtn\" disabled onClick = {()=>{\r\n                  _vibmodelTraining(record.id)\r\n                }} >开始训练</Button>\r\n                <Button  type =\"danger\"  size =\"small\" className = \"deleteBtn\"\r\n                onClick={( )=>{\r\n                  _vibdeleteModel(record.id)\r\n                }}>删除模型</Button>\r\n              </Space>\r\n          )\r\n        }else{\r\n          return(\r\n            <Space size=\"middle\">\r\n              <DetailMsg buttonType = {'normal'} buttonGhost= {false} onClick = {\r\n                ()=>{\r\n                  return record;\r\n                }\r\n              }></DetailMsg>\r\n              <Button size =\"small\"   className = \"normalBtn\" onClick = {()=>{\r\n                _vibmodelTraining(record.id)\r\n              }} >开始训练</Button>\r\n              <Button  type =\"danger\"  size =\"small\" className = \"deleteBtn\"\r\n              onClick={( )=>{\r\n                _vibdeleteModel(record.id)\r\n              }}>删除模型</Button>\r\n            </Space>\r\n        )\r\n        }\r\n    \r\n    },\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\vibration\\component\\functionList.jsx",["2044","2045"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 振动数据\r\n */\r\nexport function _vibmodelTraining(modelID){\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/vibration/trainModel?modelId=\"+modelID,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success : res=>{\r\n      if(res.flag){\r\n        // console.log(res);\r\n        flag = true\r\n        _vibmodelList(1)\r\n        }\r\n    },\r\n    error:function(){\r\n      \r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'模型训练')\r\n}\r\n/**\r\n * 删除模型\r\n */\r\nexport function _vibdeleteModel(id){\r\n  // let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let arr = []\r\n  arr.push(id)\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/vibration/deleteModel\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify(\r\n      arr),\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _vibmodelList(1)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _vibmodelList(page){\r\n  let returnData\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/modelSelectPage\",\r\n    // /POST /equip/vibration/modelSelectPage\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"setId\": trainSetId\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n\r\n       const action ={\r\n        type:'vibModelList',\r\n        returnData,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ModelTtrainning\\vibration\\component\\DetailMsg.jsx",["2046","2047","2048"],"import React,{Component} from 'react'\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\nimport '../../style.scss'\r\nimport store from '@/pages/Store/index'\r\n\r\nexport default class DetailMsg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            records:\"\",\r\n            name:\"\",\r\n            iterNum:\"\",\r\n            lr:\"\",\r\n            minNum:\"\",\r\n            task:\"\"\r\n        }\r\n        \r\n\r\n    }\r\n    componentDidMount(){\r\n        let record = this.props.onClick()\r\n        this.setState({\r\n            ...record\r\n        })\r\n    }\r\n   \r\n\r\n      // 打开编辑弹窗\r\n    onOpen = () => {  \r\n      \r\n        this.setState({\r\n        visible: true,\r\n        }\r\n        );\r\n   \r\n    };\r\n\r\n    // 关闭弹窗\r\n    onClose = () => {\r\n        this.setState({\r\n        visible: false,\r\n        });\r\n    };\r\n\r\n    formArr =()=>{\r\n        const {name,iterNum,lr,minNum} = this.state;\r\n        const  formItemArr = [\r\n    \r\n            {\r\n                label:\"模型名称\",\r\n                name:\"name\",\r\n                content:<Input disabled  defaultValue = {name}></Input>\r\n            },  {\r\n                name:\"iterNum\",\r\n                label:\"迭代次数\",\r\n                content:   <Input  disabled   defaultValue = {iterNum} />\r\n            }, {\r\n                name:\"lr\",\r\n                label:\"学习率\",\r\n                content:   <Input  disabled defaultValue = {lr} />\r\n            },{\r\n                name:\"minNum\",\r\n                label:\"训练批次\",\r\n                content:   <Input  disabled defaultValue = {minNum} />\r\n            },\r\n        ]\r\n        return formItemArr\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        const {visible,records} = this.state;\r\n        return(\r\n            <div>\r\n                \r\n                <Button\r\n                type=\"normal\"\r\n                onClick={this.onOpen}\r\n                size =\"small\"\r\n                >\r\n                详细信息\r\n                </Button>\r\n                <Modal\r\n                    title=\"详细信息\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    destroyOnClose= {true}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        ref={this.formRef}\r\n                        name=\"basic\"\r\n                        >\r\n                            {\r\n                              this.formArr().map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                            [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Form>\r\n                     \r\n                    \r\n                </Modal>\r\n          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\component\\functionList.jsx",["2049","2050","2051"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 振动数据\r\n */\r\n// 创建模型评估\r\nexport function _vibCreateModelValuate(values){\r\n  let flag = false\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let testSetId = store.getState().DatasetConstructReducer.testSetId\r\n\r\n  $.ajax({\r\n    type:\"POST\",\r\n    // POST /equip/vibration/modelAssessSave\r\n    url:hostPort+\"equip/vibration/modelAssessSave\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify({\r\n        \"modelId\": values[0].id,\r\n\r\n        \"startTime\": new Date(),\r\n        \"transformId\": testSetId\r\n\r\n    }),\r\n    async:false,\r\n    success : res=>{\r\n      if(res.flag){\r\n        flag = true\r\n        _vibModelValuateList(1)\r\n        }\r\n    },\r\n    error:function(){\r\n      \r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'创建模型评估')\r\n}\r\n\r\n\r\n// 模型评估\r\nexport function _vibModelValuate(id){\r\n  let flag = false \r\n  $.ajax({\r\n    type:\"POST\",\r\n    //POST /equip/vibration/modelAssessDo\r\n    url:hostPort+\"equip/vibration/modelAssessDo?id=\"+id,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success : res=>{\r\n      if(res.flag){\r\n        flag = true\r\n        _vibModelValuateList(1)\r\n        }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'模型评估')\r\n}\r\n/**\r\n * 删除模型评估\r\n */\r\nexport function _vibdeleteModelValuate(id){\r\n  // let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let arr = []\r\n  arr.push(id)\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/vibration/mAD\",\r\n    // equip/vibration/mAD\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify(\r\n      arr),\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _vibModelValuateList(1)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n/**\r\n * 获取模型评估分页查询\r\n */\r\nexport function _vibModelValuateList(page){\r\n  let returnDataList\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/mASP\",\r\n    // /POST /equip/vibration/mASP\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"transformId\": transformedID\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n        returnDataList=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n       const action ={\r\n        type:'vibModelValuateList',\r\n        returnDataList,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _vibmodelList(page){\r\n  let returnData\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/modelSelectPage\",\r\n    // /POST /equip/vibration/modelSelectPage\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"setId\": trainSetId\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n       const action ={\r\n        type:'vibModelList',\r\n        returnData,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\Table2\\tableConfig.js",["2052"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\n\r\n// style\r\nimport '../../style.scss'\r\nimport DetailMsg from '../component/DetailMsg'\r\n\r\n// 导入方法\r\nimport {_vibModelValuate,_vibdeleteModelValuate} from '../component/functionList'\r\n const tableColumns = [\r\n  {\r\n    title: '模型名称',\r\n    dataIndex: 'modelName',\r\n    key: 'modelName',\r\n  },\r\n  {\r\n    title: '模型ID',\r\n    dataIndex: 'modelId',\r\n    key: 'modelId',\r\n  },\r\n  {\r\n    title: '开始时间',\r\n    dataIndex: 'startTime',\r\n    key: 'startTime',\r\n  },\r\n  {\r\n    title: '评估状态',\r\n    dataIndex: 'evaluateStatus',\r\n    key: 'evaluateStatus',\r\n  },\r\n  {\r\n    title: '评估结果',\r\n    dataIndex: 'result',\r\n    key: 'result',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n           <DetailMsg\r\n             onClick ={ ()=>{\r\n              return record;\r\n            }}\r\n           ></DetailMsg> \r\n           {\r\n             record.evaluateStatus === '已完成' ?  <Button  className = \"normalBtn\"   size = \"middle\" onClick = {()=>{\r\n              _vibModelValuate(record.id) }}  disabled>开始评估</Button> :  <Button  className = \"normalBtn\"   size = \"middle\" onClick = {()=>{\r\n              _vibModelValuate(record.id)\r\n            }} >开始评估</Button>\r\n           }\r\n           \r\n            <Button type = \"danger\"      size = \"middle\" className =\"deleteBtn\"\r\n              onClick ={ ()=>{\r\n                _vibdeleteModelValuate(record.id)\r\n              }}\r\n            >删除任务</Button>\r\n\r\n       \r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\component\\DetailMsg.jsx",["2053","2054","2055"],"\r\n\r\n  import React,{Component} from 'react'\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\n\r\nexport default class DetailMsg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            records:\"\",\r\n            task:\"\",\r\n            modelName:\"\",\r\n        }\r\n        \r\n\r\n    }\r\n    componentDidMount(){\r\n       \r\n    }\r\n\r\n      // 打开编辑弹窗\r\n    onOpen = () => {    \r\n        let record = this.props.onClick();\r\n        this.setState({\r\n            modelName:record.modelName\r\n        },()=>{\r\n            this.setState({\r\n                visible: true,\r\n                });\r\n        })\r\n       \r\n   \r\n    };\r\n\r\n    // 关闭弹窗\r\n    onClose = () => {\r\n        this.setState({\r\n        visible: false,\r\n        });\r\n    };\r\n\r\n    formArr =()=>{\r\n        const  formItemArr = [\r\n           \r\n            {\r\n                label:\"评估算法\",\r\n                name:\"algorithm\",\r\n                rule:false,\r\n                content:<Input disabled   defaultValue = {\"CWT-CNN\"}></Input>\r\n            },\r\n            {\r\n                label:\"评估模型\",\r\n                name:\"modelName\",\r\n                rule:false,\r\n                content:<Input disabled defaultValue = {this.state.modelName}></Input>\r\n            },\r\n          \r\n        ]\r\n        return formItemArr\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        const {visible,records} = this.state;\r\n        return(\r\n            <div>\r\n                \r\n                <Button\r\n                type=\"normal\"\r\n                // className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                size = \"middle\"\r\n                >\r\n                详细信息\r\n                </Button>\r\n                <Modal\r\n                    title=\"详细信息\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    destroyOnClose= {true}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Space>\r\n                        评估算法:<Input disabled   defaultValue = {\"CWT-CNN\"}></Input>\r\n                    </Space>\r\n\r\n                    <Space style ={{marginTop:\"10px\"}}>\r\n                        评估模型:<Input disabled value = {this.state.modelName}></Input>\r\n                        </Space>\r\n                    \r\n                </Modal>\r\n          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };","D:\\前端学习\\devproject\\demo\\src\\pages\\Modelvaluate\\vibration\\component\\ChooseModel.jsx",["2056"],"import React,{Component} from 'react';\r\n\r\n// antd\r\nimport {Button,Space,Modal,Table ,Pagination} from 'antd';\r\n\r\n// 方法\r\nimport {_vibCreateModelValuate,_vibmodelList,_message} from './functionList';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../../style.scss'\r\nexport default class ChooseModel extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.state={\r\n            selectedRowKeys:\"\",\r\n            selectedRows:\"\",\r\n            vibData:store.getState().ModelTrainingreducer.vibModelTraining.modelList,\r\n            vibtotalCount:store.getState().ModelTrainingreducer.vibModelTraining.totalCount,\r\n            visible:false,\r\n            \r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            vibData:store.getState().ModelTrainingreducer.vibModelTraining.modelList,\r\n            vibtotalCount:store.getState().ModelTrainingreducer.vibModelTraining.totalCount,\r\n        })\r\n    }\r\n\r\n         // 打开编辑弹窗\r\n         onOpen = () => {    \r\n            this.setState({\r\n            visible: true,\r\n            }\r\n            );\r\n       \r\n        };\r\n    \r\n        // 关闭弹窗\r\n        onClose = () => {\r\n            this.setState({\r\n            visible: false,\r\n            });\r\n        };\r\n\r\n        vibpageonChange=(page,pageSize)=>{\r\n            _vibmodelList(page)\r\n          }\r\n\r\n          /**\r\n   * 表格选择\r\n   */\r\n  onSelectChange = (selectedRowKeys,selectedRows) => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys,selectedRows });\r\n  };\r\n\r\n  createModelValuate=()=>{\r\n      if(this.state.selectedRowKeys.length === 0){\r\n        _message(false,'选择模型')\r\n      }else{\r\n        _vibCreateModelValuate(this.state.selectedRows)\r\n      }\r\n      this.onClose()\r\n  }\r\n\r\n    render(){\r\n        const {vibData,vibtotalCount,visible,selectedRowKeys} = this.state;\r\n\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            type:\"radio\",\r\n          };\r\n\r\n        return(\r\n            <div>\r\n                 <Button\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                size = \"large\"\r\n                >选择模型</Button>\r\n                <Modal\r\n                    title=\"模型选择\" \r\n                    visible ={visible}\r\n                    width = {1000}\r\n                    destroyOnClose= {true}\r\n                    onCancel = {this.onClose}\r\n                    footer={ <Button onClick ={this.createModelValuate} style= {{marginBottom:\"10px\"}}>确认创建模型评估任务</Button>\r\n                  }\r\n                >\r\n                    <div className = \"table2\" >\r\n                        <Table  bordered ={true} columns={tableConfig} dataSource={vibData} \r\n                                pagination = {false}\r\n                                rowSelection={{\r\n                                    ...rowSelection,\r\n                                  }}\r\n                                  rowKey = {\"id\"}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <Pagination\r\n                                style = {{marginTop:\"10px\"}}\r\n                                onChange = {this.vibpageonChange}\r\n                                showSizeChanger\r\n                                defaultCurrent={1}\r\n                                total={vibtotalCount}\r\n                                />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst tableConfig =[\r\n    {\r\n        title: '模型',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '训练批次',\r\n        dataIndex: 'minNum',\r\n        key: 'minNum',\r\n      },\r\n      {\r\n        title: '学习率',\r\n        dataIndex: 'lr',\r\n        key: 'lr',\r\n      },\r\n      {\r\n        title: '迭代次数',\r\n        dataIndex: 'iterNum',\r\n        key: 'iterNum',\r\n      },\r\n      {\r\n        title: '训练状态',\r\n        dataIndex: 'state',\r\n        key: 'state',\r\n      }\r\n]\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\functionList.jsx",["2057","2058","2059","2060","2061"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 振动数据\r\n */\r\n\r\n\r\n\r\n// 状态评估\r\nexport function _vibModelValuate(id){\r\n  let flag = false \r\n  $.ajax({\r\n    type:\"POST\",\r\n    // POST /equip/vibration/sAssess\r\n    //POST /equip/vibration/modelAssessDo\r\n    url:hostPort+\"equip/vibration/sAssess?said=\"+id,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success : res=>{\r\n      if(res.flag){\r\n        console.log(res);\r\n        flag = true\r\n        _vibTaskpageonChange(1)\r\n        }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'模型评估')\r\n}\r\n/**\r\n * 删除模型评估\r\n */\r\nexport function _vibdeleteStateValuate(id){\r\n  // let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let arr = []\r\n  arr.push(id)\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/vibration/sAD\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify(\r\n      arr),\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _vibTaskpageonChange(1)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n/**\r\n * 获取状态评估任务（结果）分页查询\r\n */\r\nexport function _vibTaskpageonChange(page){\r\n  let returnDataList\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/sASP\",\r\n    // /POST /equip/vibration/mASP\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n        returnDataList=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n\r\n       const action ={\r\n        type:'vibStateValuateList',\r\n        returnDataList,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n/**\r\n * 状态评估结果查看\r\n */\r\nexport function _vibStateValuateResult(a){\r\n  // console.log(a);\r\n  let record = []\r\n  record.push(a)\r\n  const action ={\r\n    type:\"vibStateValuateResult\",\r\n    record,\r\n  }\r\n\r\n  store.dispatch(action)\r\n}\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _vibmodelList(page){\r\n  let returnData\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/modelSelectPage\",\r\n    // /POST /equip/vibration/modelSelectPage\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"setId\": trainSetId\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n       const action ={\r\n        type:'vibModelList',\r\n        returnData,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n\r\n  /**\r\n   * 查看csv文件\r\n   */\r\n  export function _readCsv(id){\r\n    console.log(id)\r\n    let data= []\r\n    if(id !=undefined){\r\n      $.ajax({\r\n        type:\"GET\",\r\n        url:hostPort+\"equip/vibration/readCSV/\"+id,\r\n        contentType:\"application/json;charset=UTF-8\",\r\n        dataType:'JSON',\r\n        async:false,\r\n        success:function(res){\r\n          if(res.flag){\r\n          data = res.data\r\n          }\r\n        },\r\n        error:function(){\r\n        }\r\n      })\r\n      return _createData(data)\r\n    }else{\r\n      _message(false,'获取数据id')\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 生成用于画图的数据\r\n   */\r\nfunction _createData(a){\r\n    let max = [a[0]['第1列']]\r\n    let min =[a[0]['第1列']]\r\n    let data = []\r\n    a.map((item,index)=>{\r\n      let a = `${index}`\r\n      data.push([\r\n        a,item['第1列']\r\n      ])\r\n      if(item['第1列']>max){\r\n        max = item['第1列']\r\n      }else if(item['第1列']<min){\r\n        min = item['第1列']\r\n      }\r\n    })\r\n    // console.log(data,'data')\r\n    // console.log(max,'max')\r\n    // console.log(min ,'min')\r\n    let e = []\r\n    e.push(\r\n      data\r\n    )\r\n    e.push(max)\r\n    e.push(min)\r\n    return e\r\n  }\r\n\r\n    /**\r\n   * 删除csv\r\n   */\r\n export  function  _deleteCsv(idArr){\r\n  let flag = false\r\n $.ajax({\r\n   type:\"DELETE\",\r\n   //DELETE /equip/image/deleteOne\r\n   url:hostPort+\"equip/vibration/deleteList\",\r\n   contentType:\"application/json;charset=UTF-8\",\r\n   dataType:'JSON',\r\n   data:JSON.stringify(\r\n     idArr\r\n ),\r\n   async:false,\r\n   success:function(res){\r\n     if(res.flag){\r\n     flag = true\r\n     message.success('删除成功！')\r\n    //  _vibList(1);\r\n     }\r\n   },\r\n   error:function(){\r\n     message.error('删除失败！')\r\n   }\r\n })\r\n}\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\ChooseModel.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\Table2\\tableConfig.js",["2062","2063"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Image} from 'antd'\r\n\r\n// 方法\r\nimport {_deleteCsv,_readCsv} from '../component/functionList'\r\n\r\n// 组件\r\nimport CreateLine from '../component/CreateLine'\r\n// style\r\nimport '../../style.scss'\r\n\r\nimport {hostPort} from '@/Common'\r\n\r\n const tableColumns = [\r\n  {\r\n    title: '文件名',\r\n    dataIndex: 'fileName',\r\n    key: 'fileName',\r\n  },\r\n \r\n  {\r\n    title: '上传时间',\r\n    dataIndex: 'updateTime',\r\n    key: 'updateTime',\r\n  },\r\n  {\r\n    title: '振动信号图 ',\r\n    key: 'createLine',\r\n    render: (text,record) => (\r\n      <CreateLine \r\n      onClick={()=>{\r\n        if(text.id){\r\n          let result = _readCsv(text.id)\r\n          return result;\r\n        }\r\n     \r\n      }}\r\n    ></CreateLine>\r\n    ),\r\n  },\r\n  {\r\n    title: '时频图',\r\n    key: 'createImg',\r\n    render: (text,record) => (\r\n      <Image\r\n      width={200}\r\n      src={`${hostPort}equip/vibration/view/?id=${record.id}&type=jpg`}\r\n      // http://192.168.1.173:9001/equip/vibration/view?id=d8980df638f8ca301accd34c37465345&type=jpg\r\n    />\r\n    ),\r\n  },\r\n  {\r\n    title: '结果',\r\n    dataIndex: 'result',\r\n    key: 'result',\r\n  },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n           <Button type = \"danger\"      size = \"middle\" className =\"deleteBtn\"\r\n              onClick ={ ()=>{\r\n                // _vibdeleteModelValuate(record.id)\r\n              }}\r\n            >删除</Button>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\Table1\\tableConfig.js",["2064"],"import {Component} from 'react'\r\n// antd\r\nimport {Button,Space} from 'antd'\r\n\r\n// 导入方法\r\nimport {_vibModelValuate,_vibdeleteStateValuate,_vibStateValuateResult} from '../component/functionList'\r\n// style\r\nimport '../../style.scss'\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: '文件名',\r\n    dataIndex: 'fileName',\r\n    key: 'fileName',\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    dataIndex: 'updateTime',\r\n    key: 'updateTime',\r\n  },\r\n  {\r\n    title: '评估状态',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n  },\r\n  {\r\n    title: '结果',\r\n    dataIndex: 'result',\r\n    key: 'result',\r\n  },\r\n  \r\n\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render:(text,record)=>{\r\n        return(\r\n          <Space size=\"middle\">\r\n            {\r\n              record.status === '未开始' ?  (\r\n                <Button  className = \"normalBtn\" onClick = {()=>{\r\n                _vibModelValuate(record.id)\r\n              }} >开始评估</Button>\r\n              ) :(\r\n                <Button  className = \"normalBtn\" onClick = {()=>{\r\n                _vibModelValuate(record.id)\r\n              }}  disabled>开始评估</Button>\r\n              ) \r\n            }\r\n        \r\n          {\r\n            record.status === '未开始' ? null:<Button  className = \"normalBtn\" onClick = {()=>{\r\n              _vibStateValuateResult(record)              \r\n            }} >查看结果</Button>\r\n          }\r\n         \r\n           <Button  className = \"deleteBtn\" type = {\"danger\"} onClick = {()=>{\r\n            _vibdeleteStateValuate(record.id)\r\n          }} >删除</Button>\r\n        </Space>\r\n        )\r\n       \r\n      }\r\n    }\r\n  ];\r\nexport default tableColumns;\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\CreateLine.jsx",["2065"],"import React,{Component} from 'react'\r\n\r\n// antd\r\nimport {Button,Modal} from 'antd'\r\nimport CreateChart from './CreateChart'\r\nexport default class CreateLine extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            visible:false\r\n        }\r\n\r\n    }\r\n    onOpen=()=>{\r\n        let result = this.props.onClick()\r\n        if(result != undefined){\r\n            this.setState({\r\n                visible:true,\r\n                data:result,\r\n            })\r\n        }\r\n    }\r\n    onClose =()=>{\r\n        this.setState({\r\n            visible:false\r\n        })\r\n    }\r\n \r\n\r\n    render(){\r\n        const {visible,data} = this.state;\r\n        return(\r\n            <div>\r\n                <Button  onClick ={this.onOpen}>查看振动信号图</Button>\r\n                <Modal\r\n                    title=\"查看数据\" \r\n                    visible ={visible}\r\n                    onCancel ={this.onClose}\r\n                    width = {1000}\r\n                    footer={null}\r\n                >\r\n                    <CreateChart result = {data}></CreateChart>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\CreateChart.jsx",["2066","2067","2068"],"D:\\前端学习\\devproject\\demo\\src\\pages\\StateEvaluate\\vibration\\component\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\index.jsx",["2069","2070","2071"],"import {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n// antd\r\nimport {Row, Col,Button,Space,Affix } from 'antd'\r\n// 组件\r\nimport DeviceImg from './component/DeviceImg'\r\nimport DeviceMsg from './component/DeviceMsg'\r\nimport Nav from  './component/Nav'\r\nimport ResultTable from './component/ResultTable'\r\nimport LineCharts from './component/LineCharts'\r\nimport ModelAlgorithm from './component/ModelAlgorithm'\r\nexport default class Visualization extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"visualization-content\">\r\n                <Nav></Nav>\r\n                <Affix style={{ position: 'absolute', top: 600, left: 0 }}>\r\n                    <Link to ='/Devproject'><Button type=\"dashed\" ghost >{\"返回>>\"} </Button></Link>\r\n                </Affix>\r\n                <div className = \"module-box1\">\r\n                    <div className = \"_module\" id=\"left-item\" >\r\n                        <Space>\r\n                        <DeviceImg ></DeviceImg>\r\n                        <DeviceMsg ></DeviceMsg>\r\n                        </Space>\r\n                    </div>\r\n                    <div className = \"_module\" id = \"right-item\" >\r\n                        <LineCharts></LineCharts>\r\n                            {/* <TableList></TableList> */}\r\n                    </div>\r\n                </div>\r\n                <div className = \"module-box2\">\r\n                    <div className = \"_module\" id=\"left-item\" >\r\n                    <ModelAlgorithm></ModelAlgorithm>\r\n                    </div>\r\n                    <div className = \"_module\" id = \"right-item\" >\r\n                    <ResultTable></ResultTable>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\DeviceMsg.jsx",["2072","2073","2074","2075","2076"],"import {Component} from 'react';\r\n\r\n// antd \r\nimport { Drawer, Button ,Descriptions } from 'antd';\r\n\r\n// style\r\nimport './style.scss'\r\n\r\n// 数据\r\nimport {basicMsg , operateMsg} from './dataConfig'\r\nexport default class DeviceMsg  extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n        }\r\n    }\r\n\r\n    onClose =()=>{\r\n        this.setState({\r\n            visible:false,\r\n        })\r\n    }\r\n\r\n    onOpen =()=>{\r\n        this.setState({\r\n            visible:true,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {visible} = this.state;\r\n        return(\r\n            <>\r\n            {/* <Button type=\"normal\" className = \"normalBtn\" onClick={this.onOpen}>\r\n              设备具体信息\r\n            </Button>\r\n            <Drawer\r\n              \r\n              placement=\"left\"\r\n              closable={false}\r\n              onClose={this.onClose}\r\n              visible={visible}\r\n              footer = {\r\n                  (\r\n                    <Button type=\"normal\" className = \"normalBtn\" onClick={this.onClose} style ={{float:\"right\"}}>关闭</Button>\r\n                  )\r\n              }\r\n            > */}\r\n              <Descriptions className = \"dev-des\" title={<span className = \"dev-des-title\">拧紧设备（基本信息） </span> } size = {\"small\"}  column ={1}>\r\n              {\r\n                  basicMsg.map((item,index)=>{\r\n                      return(\r\n                          <Descriptions.item label = { <span style = {{color:\"#fff\",fontWeight:\"bolder\"}}>{item.label}</span>}>\r\n                              <span style = {{color:\"#fff\"}}>{item.value}</span>\r\n                          </Descriptions.item>\r\n                      )\r\n                  })\r\n              }\r\n              </Descriptions>\r\n              {/* <br/> */}\r\n              <Descriptions   className = \"dev-des\" title={<span className = \"dev-des-title\">拧紧设备（运行信息） </span> }  size = {\"small\"}  column ={1}>\r\n              {\r\n                  operateMsg.map((item,index)=>{\r\n                      return(\r\n                          <Descriptions.item label = { <span style = {{color:\"#fff\",fontWeight:\"bolder\"}}>{item.label}</span>}>\r\n                                                            <span style = {{color:\"#fff\"}}>{item.value}</span>\r\n                          </Descriptions.item>\r\n                      )\r\n                  })\r\n              }\r\n              </Descriptions>\r\n            {/* </Drawer> */}\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\dataConfig.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\DeviceImg.jsx",["2077","2078","2079","2080","2081","2082","2083","2084","2085","2086"],"import {Component} from 'react';\r\n\r\n// antd\r\nimport {Card,Space,Descriptions,Table,Image,Button} from 'antd';\r\n\r\n// \r\nimport {Link} from 'react-router-dom'\r\n\r\nimport DeviceMsg from './DeviceMsg'\r\nimport LineCharts from './LineCharts'\r\nimport {errorMsg} from './dataConfig'\r\nimport {detectAnomalies} from './dataConfig'\r\nimport './style.scss'\r\nexport default class DeviceImg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {/* <Space>\r\n                <Space wrap = {true}> */}\r\n                \r\n                <Image src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\"  className =\"_deviceImg\">\r\n                </Image>\r\n\r\n                {/* <Link to ='/Devproject'><Button>返回</Button></Link> */}\r\n\r\n                {/* <Card\r\n                    hoverable\r\n                    style={{ width: 240,height: \"100%\"}}\r\n                    cover={<img alt=\"example\" src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\" />}\r\n                    // actions = {[\r\n                    //     <DeviceMsg></DeviceMsg>\r\n                    // ]}\r\n                >\r\n                    <DeviceMsg></DeviceMsg>\r\n                </Card> */}\r\n                {/* <Card\r\n                    style={{ width: 240,height: \"100%\" }}\r\n                    // cover={<img alt=\"example\" src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\" />}\r\n                \r\n                >\r\n                    <div>\r\n                    <Descriptions size = {\"small\"} bordered column ={1}>\r\n                        {\r\n                            errorMsg.map((item,index)=>{\r\n                                return(\r\n                                    <Descriptions.item label = {item.label}>\r\n                                        {item.value}\r\n                                    </Descriptions.item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Descriptions>\r\n                    </div>\r\n                </Card>\r\n                <Card\r\n                    style={{ height: \"100%\" }}\r\n                    // cover={<img alt=\"example\" src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\" />}\r\n                    title = {\"检测异常信息\"}\r\n                >\r\n                    <Table dataSource={detectAnomalies.data} columns={detectAnomalies.columns}  pagination = {false}/>\r\n                    \r\n                </Card> */}\r\n                {/* </Space>\r\n\r\n            </Space>  */}\r\n           \r\n            </>\r\n        )\r\n    }\r\n\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\LineCharts.jsx",["2087"],"import {Component} from 'react';\r\n\r\n// antd\r\nimport {Space} from 'antd'; \r\nimport CreateChart from './charts/CreateChart'\r\nexport default class LineCharts extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                    <br/>\r\n                    <CreateChart type = \"line\"></CreateChart>\r\n                    {/* <br/>\r\n                    <CreateChart type = \"bar\"></CreateChart> */}\r\n\r\n                    {/* <CreateChart  ></CreateChart> */}\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\CreateChart.jsx",["2088","2089","2090","2091","2092","2093"],"import React, { Component } from 'react'\r\nimport {_createChart} from './chart.config.js'\r\n\r\n/**\r\n * 说明：第一个import echarts是必须的\r\n * 第二个是引入的具体的一个图表类型 （可选）\r\n * 第三个是表的title(可选)\r\n */\r\nimport echarts from 'echarts/lib/echarts' \r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/title'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport data from './chart.data'\r\nimport {_updateData} from './functionList'\r\nexport class CreateChart extends React.Component {\r\n    /**\r\n     * 初始化id id是随机生成的一串唯一的字符串\r\n     */\r\n    constructor(props) {\r\n        super(props)\r\n        // let id = ( '_' + Math.random()).replace('.','_');\r\n        // this.state = {\r\n        //     chartId : 'chart' + id\r\n        // }\r\n        this.state = {\r\n            index:9,\r\n            xArr:[0,1,2,3,4,5,6,7,8,9],\r\n            valueArr:[],\r\n            option:{\r\n                backgroundColor:'rgba(2, 65, 145, 0.3)',\r\n              \r\n                        xAxis: {\r\n                            type: 'category',\r\n                            data:[0,1,2,3,4,5,6,7,8,9],\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value',\r\n                            splitLine:{show: false},//去除网格线\r\n                        },\r\n                        series: [{\r\n                            data:[11,2,3,4,51,8,42,15,1,3],\r\n                            type: 'line',\r\n                            label:{\r\n                                color:\"#FFFFFF\"\r\n                            },\r\n                            // areaStyle:{\r\n                            //     normal:{\r\n                            //        //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n                            //         color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{ \r\n     \r\n                            //             offset: 0,\r\n                            //             color: 'rgba(80,141,255,0.39)'\r\n                            //         }, {\r\n                            //             offset: .34,\r\n                            //             color: 'rgba(56,155,255,0.25)'\r\n                            //         },{\r\n                            //             offset: 1,\r\n                            //             color: 'rgba(38,197,254,0.00)'\r\n                            //         }])\r\n     \r\n                            //     }\r\n                            // },\r\n                        },\r\n                        \r\n                    ],\r\n                       \r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 生成图表，主要做了一个判断，因为如果不去判断dom有没有生成，\r\n     * 在后面如果定期去更新图表，每次生成一个dom节点会导致浏览器\r\n     * 占用的cpu和内存非常高，踩过坑。\r\n     * 这里的config就是引入的配置文件中的config,文件头部会有说明\r\n     */\r\n    // initChart(id) {\r\n    //     var myChart = echarts.init(document.getElementById(id));\r\n    //     myChart.setOption(config)\r\n    // }\r\n    // componentWillMount(){\r\n    //     let {xArr,valueArr,index} = this.state;\r\n    //     for(let i = 0; i<10 ; i++){\r\n    //         xArr.push(i);\r\n    //         valueArr.push(Number(data[i]['第1列']));\r\n    //     }\r\n    //     this.setState({\r\n    //         xArr,valueArr,index:10\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        /**\r\n         * 在这里去调用生成图表的方法是因为，在组件加载后生成\r\n         * dom节点，这个时候canvas才能根据id去绘制图表\r\n         * 在这里去写了一个setTimeout修改了其中的一些数据，来                                         \r\n         * 测试图表的刷新，是否刷新了，后期大家可能是定期去某\r\n         * 接口中获取数据，方法同理\r\n         */                \r\n        // this.updateData()\r\n    }\r\n\r\n    // shouldComponentUpdate(){\r\n\r\n    // }\r\n  \r\n    shouldComponentUpdate(nextProps, nextState){\r\n        if(nextState == this.state.state || nextState.index == 20){\r\n            clearInterval(this.timer)\r\n            return  false;\r\n        }else{\r\n        console.log(nextState.option);\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // componentWillUnmount(){\r\n    //     clearInterval(this.timer)\r\n    // }\r\n    // getOption = () =>{\r\n    //     const {xArr,valueArr} = this.state;\r\n    //     console.log(xArr,valueArr);\r\n    //     let option = {\r\n    //         xAxis: {\r\n    //             type: 'category',\r\n    //             data:xArr\r\n    //         },\r\n    //         yAxis: {\r\n    //             type: 'value'\r\n    //         },\r\n    //         series: [{\r\n    //             data:valueArr,\r\n    //             type: 'line'\r\n    //         }]\r\n    //     };\r\n    //     return option;\r\n    // }\r\n\r\n    updateData = ()=>{\r\n            //    let {xArr,valueArr,index} = this.state;\r\n            //    console.log(xArr,valueArr);\r\n            //    this.timer = setInterval(\r\n            //        ()=>{\r\n            //        index++\r\n            //        valueArr.shift();\r\n            //        valueArr.push(Number(data[index+10]['第1列']));\r\n            //        xArr.shift();\r\n            //        xArr.push(index);\r\n            //        // console.log(xArr,valueArr,index);\r\n            //        this.setState({\r\n            //            xArr,valueArr,index\r\n            //        })\r\n            //    }\r\n            //    ,3000)\r\n            let {index} = this.state;\r\n            let data\r\n            this.timer =setInterval(\r\n                ()=>{\r\n                    index++;\r\n                     data = _updateData()\r\n                     if(data){\r\n                        this.setState({\r\n                            index:index,\r\n                            option:data,\r\n                        })\r\n                     }\r\n                },3000)\r\n  \r\n        \r\n    }\r\n    render() {\r\n        console.log(this.state.option);\r\n        return (\r\n            <div >\r\n                <ReactEcharts style ={{width:\"1200px\"}} option={this.state.option} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CreateChart","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\chart.config.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\TableList.jsx",[],["2094","2095"],"D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\tableConfig.js",["2096","2097","2098"],"import {Space,Tag} from 'antd'\r\nconst columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Tags',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: tags => (\r\n        <>\r\n          {tags.map(tag => {\r\n            let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            if (tag === 'loser') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Invite {record.name}</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  \r\n  const data = [\r\n    {\r\n      key: '1',\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n      tags: ['nice', 'developer'],\r\n    },\r\n    {\r\n      key: '2',\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n      tags: ['loser'],\r\n    },\r\n    {\r\n      key: '3',\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n      tags: ['cool', 'teacher'],\r\n    },\r\n  ];\r\n\r\n  export {columns,data};","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\chart.data.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\charts\\functionList.js",["2099","2100","2101","2102","2103","2104"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message,Image  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\nexport function _updateData(index){\r\n\r\n    let option = {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.1);',\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data:[0,1,2,3,4,5,6,7,8,9],\r\n                },\r\n                yAxis: {\r\n                    type: 'value'\r\n                },\r\n                series: [{\r\n                    data:[11,2,3,4,51,8,42,15,1,3],\r\n                    type: 'line'\r\n        }]\r\n    }\r\n    \r\n\r\n    let random = Math.random()*100\r\n    console.log(  option.series[0].data,  option.xAxis.data);\r\n    option.xAxis.data.shift();\r\n    option.xAxis.data.push(index);\r\n        option.series[0].data.shift();\r\n        option.series[0].data.push(random)\r\n     \r\n        console.log(option);\r\nreturn option;\r\n\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\Nav.jsx",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\ModelAlgorithm.jsx",["2105","2106"],"import {Component} from 'react';\r\n\r\n// antd\r\nimport {Table,Button,Tag,Pagination} from 'antd';\r\n// store\r\nimport store from '@/pages/Store/index'\r\nimport {_vibmodelList} from './functionList'\r\nimport {tableColumns} from './dataConfig'\r\n// style\r\nimport './style.scss'\r\nexport default class ModelAlgorithm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            vibData:store.getState().ModelTrainingreducer.vibModelTraining.modelList,\r\n            vibtotalCount:store.getState().ModelTrainingreducer.vibModelTraining.totalCount,\r\n            selectedRowKeys:\"\",\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    \r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            vibData:store.getState().ModelTrainingreducer.vibModelTraining.modelList,\r\n            vibtotalCount:store.getState().ModelTrainingreducer.vibModelTraining.totalCount,\r\n        })\r\n    }\r\n\r\n      \r\n    componentDidMount(){\r\n        _vibmodelList(1)\r\n    }\r\n    \r\n    vibpageonChange=(page,pageSize)=>{\r\n        _vibmodelList(page)\r\n      }\r\n            \r\n    /**\r\n     * 表格选择\r\n     */\r\n    onSelectChange = selectedRowKeys => {\r\n        // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n\r\n\r\n    render(){\r\n        const {vibData,selectedRowKeys,vibtotalCount} = this.state\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            // renderCell:(checked, record, index, originNode)=>{\r\n            //     return(<input type=\"checkbox\" calss=\"ant-checkbox-input\" value=\"\"/>)\r\n            // },\r\n          };\r\n        return(\r\n            <div>\r\n            <Table  className = \"model-table\" size=\"middle\"  \r\n            rowClassName = {\"model-table-row\"}\r\n            rowSelection={{\r\n                ...rowSelection,\r\n              }}\r\n              rowKey = {\"id\"}\r\n              pagination = {false}\r\n            bordered ={false} columns={tableColumns} dataSource={vibData} />\r\n            <Pagination\r\n            className = 'model-pagination'\r\n            // simple \r\n            onChange = {this.vibpageonChange}\r\n            showSizeChanger\r\n            defaultCurrent={1}\r\n            total={vibtotalCount}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\functionList.js",["2107","2108","2109"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 振动数据\r\n */\r\nexport function _vibmodelTraining(modelID){\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/vibration/trainModel?modelId=\"+modelID,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success : res=>{\r\n      if(res.flag){\r\n        // console.log(res);\r\n        flag = true\r\n        _vibmodelList(1)\r\n        }\r\n    },\r\n    error:function(){\r\n      \r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'模型训练')\r\n}\r\n/**\r\n * 删除模型\r\n */\r\nexport function _vibdeleteModel(id){\r\n  // let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let arr = []\r\n  arr.push(id)\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/vibration/deleteModel\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    data:JSON.stringify(\r\n      arr),\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _vibmodelList(1)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _vibmodelList(page){\r\n  let returnData\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/modelSelectPage\",\r\n    // /POST /equip/vibration/modelSelectPage\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 6,\r\n      // \"queryParameter\": {\r\n      //   \"setId\": trainSetId\r\n      // }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n\r\n       const action ={\r\n        type:'vibModelList',\r\n        returnData,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\ActionChoose\\index.js",[],"D:\\前端学习\\devproject\\demo\\src\\pages\\UserLogin\\index.js",["2110","2111"],"\r\nimport './style.scss'\r\nimport {Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Footer from '../../layoutComponent/contentContainer/Footer'\r\n\r\n// antd\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nexport default class UserIndex extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n      // 提交表单\r\n      onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className = {\"userLogin-container\"}>\r\n                \r\n                {/* <UserLogin className  ={\"userLogin-component\"}></UserLogin> */}\r\n                <div  className  ={\"userLogin-component\"}>\r\n                    <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={this.onFinish}\r\n                    >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入用户名！',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入密码！',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>记住我</Checkbox>\r\n                        </Form.Item>\r\n                \r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                        忘记密码\r\n                        </a>\r\n                    </Form.Item>\r\n                \r\n                    <Form.Item>\r\n                        <Link to = \"/ActionChoose\"><Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        登录\r\n                        </Button></Link>\r\n                        或者 <a href=\"\">立即注册！</a>\r\n                    </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <Footer></Footer>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo\\src\\pages\\Visualization\\component\\ResultTable.jsx",["2112","2113"],"import {Component} from 'react';\r\n\r\n// antd\r\nimport {Table,Button,Tag,Pagination} from 'antd';\r\n// store\r\nimport store from '@/pages/Store/index'\r\nimport {_vibTaskpageonChange} from './functionList'\r\nimport {resultColumns} from './dataConfig'\r\n// style\r\nimport './style.scss'\r\nexport default class ModelAlgorithm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            vibData:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibtotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n            selectedRowKeys:\"\",\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    \r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            vibData:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibtotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n        })\r\n    }\r\n\r\n      \r\n    componentDidMount(){\r\n        _vibTaskpageonChange(1)\r\n    }\r\n    \r\n    vibpageonChange=(page,pageSize)=>{\r\n        _vibTaskpageonChange(page)\r\n      }\r\n            \r\n    /**\r\n     * 表格选择\r\n     */\r\n    onSelectChange = selectedRowKeys => {\r\n        // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n\r\n\r\n    render(){\r\n        const {vibData,selectedRowKeys,vibtotalCount} = this.state\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n          };\r\n        return(\r\n            <div>\r\n            <Table  className = \"model-table\" size=\"middle\"  \r\n            rowClassName = {\"model-table-row\"}\r\n            rowSelection={{\r\n                ...rowSelection,\r\n              }}\r\n              rowKey = {\"id\"}\r\n              pagination = {false}\r\n            bordered ={false} columns={resultColumns} dataSource={vibData} />\r\n            <Pagination\r\n            onChange = {this.vibpageonChange}\r\n            showSizeChanger\r\n            defaultCurrent={1}\r\n            total={vibtotalCount}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\index.js",["2114"],["2115","2116"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\reportWebVitals.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\routerComponent\\routeConfig.js",["2117"],"//布局组件\r\nimport LayoutUI from '../layoutComponent/LayoutUI';\r\n\r\n//引入组件\r\nimport DataStorage from '../pages/DataStorage/index';\r\nimport DataProcessing from '../pages/DataProcessing/index';\r\n// 模型训练\r\nimport TagManagement from '../pages/TagManagement/index';\r\nimport DatasetConstruct from '../pages/DatasetConstruct/index';\r\nimport ModelTraining from '../pages/ModelTtrainning/index';\r\nimport ModelCheck from '../pages/ModelCheck/index';\r\nimport AlgorithmManagement from '../pages/AlgorithmManagement/index';\r\nimport Modelvaluate from '../pages/Modelvaluate/index';\r\n// 模型管理\r\nimport ModelManagement from '../pages/ModelManagement/index'\r\n// 模型应用\r\nimport AbnormalPerception from '../pages/AbnormalPerception/index';\r\nimport StateEvaluate from '../pages/StateEvaluate/index';\r\nimport Troubleshooting from '../pages/Troubleshooting/index';\r\nimport LifePrediction from '../pages/LifePrediction/index';\r\n// 数据挖掘\r\nimport Preprocessing from '../pages/Preprocessing/index'; //数据处理;\r\nimport FeatureExtraction from '../pages/FeatureExtraction/index';\r\nimport FeatureScreening from '../pages/FeatureScreening/index';\r\nimport TableTimeFrequency from '../pages/TableTimeFrequency/index';\r\n\r\n// 可视化\r\nimport Visualization from '../pages/Visualization';\r\n// 登录\r\nimport UserIndex from '../pages/UserLogin/index';\r\n// 操作选择\r\nimport ActionChoose from '../pages/ActionChoose/index';\r\n\r\nimport {Link} from 'react-router-dom';\r\nconst routeConfig =[\r\n  {\r\n    path:'/UserLogin',\r\n    title:\"登录\",\r\n    exact:true,\r\n    component:UserIndex,\r\n    children:[]\r\n  },\r\n  {\r\n    path:'/ActionChoose',\r\n    title:\"操作选择\",\r\n    exact:true,\r\n    component:ActionChoose,\r\n    children:[]\r\n  },\r\n  {\r\n   \r\n    path:\"/Visualization\",\r\n    title:\"可视化系统\",\r\n    component:Visualization,\r\n     exact:true,\r\n     children:[]\r\n  },\r\n    {\r\n        //装备远程运维与健康管理系统\r\n        path:'/Devproject',\r\n        // component:ContentContainer,\r\n        title:\"桨轴传动系统故障诊断软件\",\r\n        component:LayoutUI,\r\n        exact:true,\r\n        children:[\r\n            {\r\n                path:'/Devproject/DataStorage',\r\n                component:DataStorage,\r\n                title:\"数据存储管理\",\r\n                exact:false,\r\n                img:(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-house-door\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z\"/>\r\n                    </svg>\r\n                ),\r\n                \r\n            },\r\n            {\r\n                path:\"/Devproject/DataProcessing\",\r\n                component:DataProcessing,\r\n                title:\"数据处理流程\",\r\n                exact:false,\r\n                img:(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-layout-wtf\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M5 1v8H1V1h4zM1 0a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1H1zm13 2v5H9V2h5zM9 1a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9zM5 13v2H3v-2h2zm-2-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H3zm12-1v2H9v-2h6zm-6-1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H9z\"/>\r\n                  </svg>\r\n                ),\r\n\r\n            },\r\n            {\r\n              path:\"/Devproject/ModelManagement\",\r\n              component:ModelManagement,\r\n              title:\"模型管理\",\r\n              exact:false,\r\n              img:(\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-table\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm15 2h-4v3h4V4zm0 4h-4v3h4V8zm0 4h-4v3h3a1 1 0 0 0 1-1v-2zm-5 3v-3H6v3h4zm-5 0v-3H1v2a1 1 0 0 0 1 1h3zm-4-4h4V8H1v3zm0-4h4V4H1v3zm5-3v3h4V4H6zm4 4H6v3h4V8z\"/>\r\n              </svg>\r\n              ),\r\n\r\n          },\r\n      \r\n            {\r\n                path:\"/Devproject/ModelTtrainning\",\r\n                // component:ModelTtrainning,\r\n                title:\"模型训练\",\r\n                // exact:false,\r\n                img:(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-x-diamond\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M7.987 16a1.526 1.526 0 0 1-1.07-.448L.45 9.082a1.531 1.531 0 0 1 0-2.165L6.917.45a1.531 1.531 0 0 1 2.166 0l6.469 6.468A1.526 1.526 0 0 1 16 8.013a1.526 1.526 0 0 1-.448 1.07l-6.47 6.469A1.526 1.526 0 0 1 7.988 16zM7.639 1.17L4.766 4.044 8 7.278l3.234-3.234L8.361 1.17a.51.51 0 0 0-.722 0zM8.722 8l3.234 3.234 2.873-2.873c.2-.2.2-.523 0-.722l-2.873-2.873L8.722 8zM8 8.722l-3.234 3.234 2.873 2.873c.2.2.523.2.722 0l2.873-2.873L8 8.722zM7.278 8L4.044 4.766 1.17 7.639a.511.511 0 0 0 0 .722l2.874 2.873L7.278 8z\"/>\r\n                </svg>\r\n                ),\r\n                children:[\r\n                    { title: '标签管理',\r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-seam\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d={\"M0 3.5A.5.5 0 0 1 .5 3h15a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-2zm0 5A.5.5 0 0 1 .5 8h15a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-1zm0 4a.5.5 0 0 1 .5-.5h15a.5.5 0 0 1 0 1H.5a.5.5 0 0 1-.5-.5z\"}/>\r\n                    </svg>\r\n                    ),\r\n                     path: '/Devproject/ModelTtrainning/TagManagement' ,component:TagManagement},\r\n                    { title: '数据集构建', \r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-ui-checks\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M5 2V0H0v5h2v6H0v5h5v-2h6v2h5v-5h-2V5h2V0h-5v2H5zm6 1v2h2v6h-2v2H5v-2H3V5h2V3h6zm1-2h3v3h-3V1zm3 11v3h-3v-3h3zM4 15H1v-3h3v3zM1 4V1h3v3H1z\"/>\r\n                        </svg>),\r\n                    path: '/Devproject/ModelTtrainning/DatasetConstruct', component:DatasetConstruct },\r\n                    { title: '模型训练',\r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-diamond\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M7.987 16a1.526 1.526 0 0 1-1.07-.448L.45 9.082a1.531 1.531 0 0 1 0-2.165L6.917.45a1.531 1.531 0 0 1 2.166 0l6.469 6.468A1.526 1.526 0 0 1 16 8.013a1.526 1.526 0 0 1-.448 1.07l-6.47 6.469A1.526 1.526 0 0 1 7.988 16zM7.639 1.17L4.766 4.044 8 7.278l3.234-3.234L8.361 1.17a.51.51 0 0 0-.722 0zM8.722 8l3.234 3.234 2.873-2.873c.2-.2.2-.523 0-.722l-2.873-2.873L8.722 8zM8 8.722l-3.234 3.234 2.873 2.873c.2.2.523.2.722 0l2.873-2.873L8 8.722zM7.278 8L4.044 4.766 1.17 7.639a.511.511 0 0 0 0 .722l2.874 2.873L7.278 8z\"/>\r\n                    </svg>\r\n                    ),\r\n                     path: '/Devproject/ModelTtrainning/ModelTraining',component:ModelTraining },\r\n                    { title: '模型校验',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-symmetry-vertical\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M7 2.5a.5.5 0 0 0-.939-.24l-6 11A.5.5 0 0 0 .5 14h6a.5.5 0 0 0 .5-.5v-11zm2.376-.485a.5.5 0 0 1 .563.246l6 11A.5.5 0 0 1 15.5 14h-6a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .376-.485zM10 4.461V13h4.658L10 4.46z\"/>\r\n                  </svg>),\r\n                     path: '/Devproject/ModelTtrainning/ModelCheck',component: ModelCheck},\r\n                    {title:'算法管理',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-vector-pen\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M10.646.646a.5.5 0 0 1 .708 0l4 4a.5.5 0 0 1 0 .708l-1.902 1.902-.829 3.313a1.5 1.5 0 0 1-1.024 1.073L1.254 14.746 4.358 4.4A1.5 1.5 0 0 1 5.43 3.377l3.313-.828L10.646.646zm-1.8 2.908l-3.173.793a.5.5 0 0 0-.358.342l-2.57 8.565 8.567-2.57a.5.5 0 0 0 .34-.357l.794-3.174-3.6-3.6z\"/>\r\n                    <path fill-rule=\"evenodd\" d=\"M2.832 13.228L8 9a1 1 0 1 0-1-1l-4.228 5.168-.026.086.086-.026z\"/>\r\n                  </svg>),\r\n                    path:'/Devproject/ModelTtrainning/AlgorithmManagement',component:AlgorithmManagement},\r\n                    {title:'模型评估',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-ui-checks\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-1zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2H2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708l-2 2zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708l-2 2zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-1zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\r\n                  </svg>),\r\n                    path:'/Devproject/ModelTtrainning/Modelvaluate',component:Modelvaluate},\r\n                  ],\r\n            },\r\n         \r\n\r\n            {\r\n                path:\"/Devproject/ModelTapplication\",\r\n                // component:ModelManagement,\r\n                title:'模型应用',\r\n                img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-slack\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3.362 10.11c0 .926-.756 1.681-1.681 1.681S0 11.036 0 10.111C0 9.186.756 8.43 1.68 8.43h1.682v1.68zm.846 0c0-.924.756-1.68 1.681-1.68s1.681.756 1.681 1.68v4.21c0 .924-.756 1.68-1.68 1.68a1.685 1.685 0 0 1-1.682-1.68v-4.21zM5.89 3.362c-.926 0-1.682-.756-1.682-1.681S4.964 0 5.89 0s1.68.756 1.68 1.68v1.682H5.89zm0 .846c.924 0 1.68.756 1.68 1.681S6.814 7.57 5.89 7.57H1.68C.757 7.57 0 6.814 0 5.89c0-.926.756-1.682 1.68-1.682h4.21zm6.749 1.682c0-.926.755-1.682 1.68-1.682.925 0 1.681.756 1.681 1.681s-.756 1.681-1.68 1.681h-1.681V5.89zm-.848 0c0 .924-.755 1.68-1.68 1.68A1.685 1.685 0 0 1 8.43 5.89V1.68C8.43.757 9.186 0 10.11 0c.926 0 1.681.756 1.681 1.68v4.21zm-1.681 6.748c.926 0 1.682.756 1.682 1.681S11.036 16 10.11 16s-1.681-.756-1.681-1.68v-1.682h1.68zm0-.847c-.924 0-1.68-.755-1.68-1.68 0-.925.756-1.681 1.68-1.681h4.21c.924 0 1.68.756 1.68 1.68 0 .926-.756 1.681-1.68 1.681h-4.21z\"/>\r\n              </svg>),\r\n                exact:false,\r\n                children: [\r\n                    { title: '异常感知',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-shield-exclamation\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M5.338 1.59a61.44 61.44 0 0 0-2.837.856.481.481 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.725 10.725 0 0 0 2.287 2.233c.346.244.652.42.893.533.12.057.218.095.293.118a.55.55 0 0 0 .101.025.615.615 0 0 0 .1-.025c.076-.023.174-.061.294-.118.24-.113.547-.29.893-.533a10.726 10.726 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.775 11.775 0 0 1-2.517 2.453 7.159 7.159 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7.158 7.158 0 0 1-1.048-.625 11.777 11.777 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 62.456 62.456 0 0 1 5.072.56z\"/>\r\n                    <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\r\n                  </svg>),\r\n                   path: '/Devproject/ModelTapplication/AbnormalPerception' ,component:AbnormalPerception},\r\n                    { title: '状态评估',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-thermometer-half\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 1.75a.25.25 0 0 1 .25.25v9.02a1.5 1.5 0 1 1-.5 0V2A.25.25 0 0 1 8 1.75z\"/>\r\n                    <path d=\"M6 2a2 2 0 1 1 4 0v7.627a3.5 3.5 0 1 1-4 0V2zm2-1a1 1 0 0 0-1 1v7.901a.5.5 0 0 1-.25.433A2.499 2.499 0 0 0 8 15a2.5 2.5 0 0 0 1.25-4.666.5.5 0 0 1-.25-.433V2a1 1 0 0 0-1-1z\"/>\r\n                  </svg>) ,\r\n                  path: '/Devproject/ModelTapplication/StateEvaluate',component:StateEvaluate },\r\n                    { title: '故障诊断',\r\n                    img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-tools\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M1 0L0 1l2.2 3.081a1 1 0 0 0 .815.419h.07a1 1 0 0 1 .708.293l2.675 2.675-2.617 2.654A3.003 3.003 0 0 0 0 13a3 3 0 1 0 5.878-.851l2.654-2.617.968.968-.305.914a1 1 0 0 0 .242 1.023l3.356 3.356a1 1 0 0 0 1.414 0l1.586-1.586a1 1 0 0 0 0-1.414l-3.356-3.356a1 1 0 0 0-1.023-.242L10.5 9.5l-.96-.96 2.68-2.643A3.005 3.005 0 0 0 16 3c0-.269-.035-.53-.102-.777l-2.14 2.141L12 4l-.364-1.757L13.777.102a3 3 0 0 0-3.675 3.68L7.462 6.46 4.793 3.793a1 1 0 0 1-.293-.707v-.071a1 1 0 0 0-.419-.814L1 0zm9.646 10.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708zM3 11l.471.242.529.026.287.445.445.287.026.529L5 13l-.242.471-.026.529-.445.287-.287.445-.529.026L3 15l-.471-.242L2 14.732l-.287-.445L1.268 14l-.026-.529L1 13l.242-.471.026-.529.445-.287.287-.445.529-.026L3 11z\"/>\r\n                  </svg>),\r\n                   path: '/Devproject/ModelTapplication/Troubleshooting' ,component:Troubleshooting},\r\n                    { title: '寿命预测',\r\n                    img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"/>\r\n                        </svg>\r\n                    ),\r\n                    path: '/Devproject/ModelTapplication/LifePrediction', component:LifePrediction},\r\n                  ],\r\n            },\r\n            {\r\n                path:\"/Devproject/DataMining\",\r\n                // component:DataMining,\r\n                title:\"数据挖掘\",\r\n                exact:false,\r\n                img:(\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-geo\" viewBox=\"0 0 16 16\">\r\n                  <path fill-rule=\"evenodd\" d=\"M8 1a3 3 0 1 0 0 6 3 3 0 0 0 0-6zM4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999zm2.493 8.574a.5.5 0 0 1-.411.575c-.712.118-1.28.295-1.655.493a1.319 1.319 0 0 0-.37.265.301.301 0 0 0-.057.09V14l.002.008a.147.147 0 0 0 .016.033.617.617 0 0 0 .145.15c.165.13.435.27.813.395.751.25 1.82.414 3.024.414s2.273-.163 3.024-.414c.378-.126.648-.265.813-.395a.619.619 0 0 0 .146-.15.148.148 0 0 0 .015-.033L12 14v-.004a.301.301 0 0 0-.057-.09 1.318 1.318 0 0 0-.37-.264c-.376-.198-.943-.375-1.655-.493a.5.5 0 1 1 .164-.986c.77.127 1.452.328 1.957.594C12.5 13 13 13.4 13 14c0 .426-.26.752-.544.977-.29.228-.68.413-1.116.558-.878.293-2.059.465-3.34.465-1.281 0-2.462-.172-3.34-.465-.436-.145-.826-.33-1.116-.558C3.26 14.752 3 14.426 3 14c0-.599.5-1 .961-1.243.505-.266 1.187-.467 1.957-.594a.5.5 0 0 1 .575.411z\"/>\r\n                </svg>\r\n                ),\r\n                children: [\r\n                      { title: '数据预处理', path: '/Devproject/DataMining/Preprocessing' ,\r\n                      component:Preprocessing,\r\n                        exact:false,\r\n                        img:(\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-file-spreadsheet\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm2-1a1 1 0 0 0-1 1v4h10V2a1 1 0 0 0-1-1H4zm9 6h-3v2h3V7zm0 3h-3v2h3v-2zm0 3h-3v2h2a1 1 0 0 0 1-1v-1zm-4 2v-2H6v2h3zm-4 0v-2H3v1a1 1 0 0 0 1 1h1zm-2-3h2v-2H3v2zm0-3h2V7H3v2zm3-2v2h3V7H6zm3 3H6v2h3v-2z\"/>\r\n                        </svg>\r\n                        ),\r\n\r\n                    },\r\n                      { title: '特征提取', \r\n                      img:(\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-intersect\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M0 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-2H2a2 2 0 0 1-2-2V2zm5 10v2a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2v5a2 2 0 0 1-2 2H5zm6-8V2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h2V6a2 2 0 0 1 2-2h5z\"/>\r\n                      </svg>\r\n                      ),\r\n                      path: '/Devproject/DataMining/FeatureExtraction' ,component:FeatureExtraction},\r\n                      { title: '特征筛选', \r\n                      img:(\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-inboxes\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M4.98 1a.5.5 0 0 0-.39.188L1.54 5H6a.5.5 0 0 1 .5.5 1.5 1.5 0 0 0 3 0A.5.5 0 0 1 10 5h4.46l-3.05-3.812A.5.5 0 0 0 11.02 1H4.98zm9.954 5H10.45a2.5 2.5 0 0 1-4.9 0H1.066l.32 2.562A.5.5 0 0 0 1.884 9h12.234a.5.5 0 0 0 .496-.438L14.933 6zM3.809.563A1.5 1.5 0 0 1 4.981 0h6.038a1.5 1.5 0 0 1 1.172.563l3.7 4.625a.5.5 0 0 1 .105.374l-.39 3.124A1.5 1.5 0 0 1 14.117 10H1.883A1.5 1.5 0 0 1 .394 8.686l-.39-3.124a.5.5 0 0 1 .106-.374L3.81.563zM.125 11.17A.5.5 0 0 1 .5 11H6a.5.5 0 0 1 .5.5 1.5 1.5 0 0 0 3 0 .5.5 0 0 1 .5-.5h5.5a.5.5 0 0 1 .496.562l-.39 3.124A1.5 1.5 0 0 1 14.117 16H1.883a1.5 1.5 0 0 1-1.489-1.314l-.39-3.124a.5.5 0 0 1 .121-.393zm.941.83l.32 2.562a.5.5 0 0 0 .497.438h12.234a.5.5 0 0 0 .496-.438l.32-2.562H10.45a2.5 2.5 0 0 1-4.9 0H1.066z\"/>\r\n                    </svg>),\r\n                    path: '/Devproject/DataMining/FeatureScreening',component:FeatureScreening },\r\n                      { title: '时频图像转换',\r\n                      img:(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-shuffle\" viewBox=\"0 0 16 16\">\r\n                      <path fill-rule=\"evenodd\" d=\"M0 3.5A.5.5 0 0 1 .5 3H1c2.202 0 3.827 1.24 4.874 2.418.49.552.865 1.102 1.126 1.532.26-.43.636-.98 1.126-1.532C9.173 4.24 10.798 3 13 3v1c-1.798 0-3.173 1.01-4.126 2.082A9.624 9.624 0 0 0 7.556 8a9.624 9.624 0 0 0 1.317 1.918C9.828 10.99 11.204 12 13 12v1c-2.202 0-3.827-1.24-4.874-2.418A10.595 10.595 0 0 1 7 9.05c-.26.43-.636.98-1.126 1.532C4.827 11.76 3.202 13 1 13H.5a.5.5 0 0 1 0-1H1c1.798 0 3.173-1.01 4.126-2.082A9.624 9.624 0 0 0 6.444 8a9.624 9.624 0 0 0-1.317-1.918C4.172 5.01 2.796 4 1 4H.5a.5.5 0 0 1-.5-.5z\"/>\r\n                      <path d=\"M13 5.466V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192zm0 9v-3.932a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192z\"/>\r\n                    </svg>),\r\n                     path: '/Devproject/DataMining/TableTimeFrequency',component:TableTimeFrequency },\r\n                    ]\r\n                 \r\n\r\n            },\r\n            // {\r\n            //   path:\"/Visualization\",\r\n            //   title:\"可视化窗口\",\r\n            //   component:Visualization,\r\n            //   exact:false,\r\n            //   img:(\r\n            //     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-cast\" viewBox=\"0 0 16 16\">\r\n            //   <path d=\"m7.646 9.354-3.792 3.792a.5.5 0 0 0 .353.854h7.586a.5.5 0 0 0 .354-.854L8.354 9.354a.5.5 0 0 0-.708 0z\"/>\r\n            //   <path d=\"M11.414 11H14.5a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h3.086l-1 1H1.5A1.5 1.5 0 0 1 0 10.5v-7A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v7a1.5 1.5 0 0 1-1.5 1.5h-2.086l-1-1z\"/>\r\n            // </svg>\r\n            //   ),\r\n            // }\r\n          \r\n        ]\r\n    },\r\n   \r\n];\r\n\r\n\r\nexport default routeConfig;","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\index.js",["2118","2119"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\index.js",["2120","2121","2122"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\index.js",["2123"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AbnormalPerception\\index.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\index.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Troubleshooting\\index.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\index.js",["2124","2125"],"import React,{Component} from 'react';\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport './style.scss'\r\n// antd\r\nimport { Table ,Pagination} from 'antd';\r\n\r\n// 组件\r\nimport ChooseModel from './vibration/component/ChooseModel'\r\nimport ImportZip from './component/ImportZip'\r\n// table\r\nimport tableColumns01 from './Table1/tableConfig'\r\nimport tableColumns02 from './Table2/tableConfig'\r\nimport vibtableColumns01 from './vibration/Table1/tableConfig'\r\nimport vibtableColumns02 from './vibration/Table2/tableConfig'\r\n\r\n// 方法\r\nimport {_vibTaskpageonChange} from './vibration/component/functionList' \r\nimport {_imgStateEvaluateResult} from './component/functionList'\r\nexport default class StateEvaluate extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n            task:store.getState().StateEvaluatereducer.imageStateValuate.task,\r\n            imgResultTotal:store.getState().StateEvaluatereducer.imageStateValuate.totalCount,\r\n            resultList:store.getState().StateEvaluatereducer.imageStateValuate.resultList,\r\n            vibtaskList:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibresultList:store.getState().StateEvaluatereducer.vibStateValuate.resultList,\r\n            taskTotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n            \r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            imgResultTotal:store.getState().StateEvaluatereducer.imageStateValuate.totalCount,\r\n            resultList:store.getState().StateEvaluatereducer.imageStateValuate.resultList,\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n            task:store.getState().StateEvaluatereducer.imageStateValuate.task,\r\n            vibtaskList:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibresultList:store.getState().StateEvaluatereducer.vibStateValuate.resultList,\r\n            taskTotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        _vibTaskpageonChange(1)\r\n    }\r\n      \r\n    pageonChange=(page, pageSize)=>{\r\n        // 结果列表的页数改变\r\n        _imgStateEvaluateResult(page)\r\n    }\r\n\r\n    vibTaskpageonChange=page=>{\r\n        _vibTaskpageonChange(page)\r\n    }\r\n\r\n\r\n    render(){\r\n        const {resultList,dataType,task,vibtaskList,vibresultList,taskTotalCount,imgResultTotal} = this.state\r\n        // console.log(resultList,'resultList','task',task);\r\n        // console.log(vibtaskList,vibresultList);\r\n        return(\r\n            <div>\r\n                {\r\n                    dataType == 1 ? <div> \r\n                        {/* 图像数据 */}\r\n                    <ImportZip ></ImportZip>\r\n                    <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={tableColumns01} dataSource={task} \r\n                    pagination = {false}\r\n                    />\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableColumns02} dataSource={resultList} \r\n                      pagination = {false}\r\n                    />\r\n                     <Pagination\r\n                        style = {{marginTop:\"10px\"}}\r\n                        onChange = {this.pageonChange}\r\n                        showSizeChanger\r\n                        defaultCurrent={1}\r\n                        total={10}\r\n                        defaultPageSize = {3}\r\n                        />\r\n                    </div>:<div>\r\n                        {/* 振动数据 */}\r\n                    <ChooseModel ></ChooseModel>\r\n                    \r\n                    <Table  className = \"table2\" size=\"middle\"  \r\n                    bordered ={true} columns={vibtableColumns01} dataSource={vibtaskList} pagination ={false} />\r\n                    <Pagination\r\n                        style = {{marginTop:\"10px\"}}\r\n                        onChange = {this.vibTaskpageonChange}\r\n                        showSizeChanger\r\n                        defaultCurrent={1}\r\n                        total={taskTotalCount}\r\n                        />\r\n                     <Table  className = \"table2\" size=\"middle\"  \r\n                    bordered ={true} columns={vibtableColumns02} dataSource={vibresultList} pagination ={false} />\r\n                   \r\n                    </div>\r\n                }\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\index.js",["2126"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\index.js",["2127","2128"],"\r\nimport React,{Component} from 'react'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// antd\r\nimport { Table } from 'antd';\r\n// table\r\n import tableConfig from './component/tableConfig'\r\n\r\n// style\r\nimport './style.scss'\r\nimport {_modelList} from './component/functionList'\r\nexport default class LifePrediction extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            dataSource:store.getState().LifePredictionreducer.tableData,\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n\r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            dataSource:store.getState().LifePredictionreducer.tableData,\r\n            dataType:store.getState().ModelTrainingreducer.dataType,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {dataSource} = this.state\r\n        const  data  =[\r\n            {\r\n                fileID:\"1390281874382786562\",//上传的文件id\r\n                datasetName:\"数据.csv\", //文件名\r\n                name:\"test\", //模型名称\r\n                step:\"2\",\r\n                id:\"1390282229141213186\" , //结果文件id\r\n            }\r\n        ]\r\n        return(\r\n            <div>\r\n                    <Table  className = \"table1\" size=\"small\"  bordered ={true} columns={tableConfig} dataSource={data} \r\n                    pagination = {false}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\FeatureExtraction\\index.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\index.js",["2129"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\UserLogin\\index.js",["2130","2131"],"\r\nimport './style.scss'\r\nimport {Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Footer from '../../layoutComponent/contentContainer/Footer'\r\n\r\n// antd\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nexport default class UserIndex extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n      // 提交表单\r\n      onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className = {\"userLogin-container\"}>\r\n                \r\n                {/* <UserLogin className  ={\"userLogin-component\"}></UserLogin> */}\r\n                <div  className  ={\"userLogin-component\"}>\r\n                    <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={this.onFinish}\r\n                    >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入用户名！',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入密码！',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>记住我</Checkbox>\r\n                        </Form.Item>\r\n                \r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                        忘记密码\r\n                        </a>\r\n                    </Form.Item>\r\n                \r\n                    <Form.Item>\r\n                        <Link to = \"/ActionChoose\">\r\n                            {/* <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"> */}\r\n                        \r\n                        <div className=\"button\">\r\n                        登录\r\n                        </div>\r\n                        {/* </Button> */}\r\n                        </Link>\r\n                        {/* 或者 <a href=\"\">立即注册！</a> */}\r\n                    </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <Footer></Footer>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\FeatureScreening\\index.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ActionChoose\\index.js",["2132","2133","2134","2135"],"import {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Footer from '../../layoutComponent/contentContainer/Footer'\r\n\r\n// antd\r\nimport {Space,Image,Tooltip} from 'antd'\r\nimport './style.scss'\r\nexport default class ActionIndex extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            src:[\"images/item01.jpg\",\"images/item02.jpg\"],\r\n            width:[400,200]\r\n        }\r\n    }\r\n\r\n    widthChange =(value)=>{\r\n        if(value == 0){\r\n            this.setState({\r\n                width:[400,200]\r\n            })\r\n        }else{\r\n            this.setState({\r\n                width:[200,400]\r\n            })\r\n        }\r\n     \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"actionChoose-container\">\r\n                <div className = \"action-container\">\r\n            <ul>\r\n                 <li className = \"systemImg\" id = \"systemImg01\"><Link  to = \"/Devproject\"><div style ={{width:\"100%\",height:\"100%\"}}>\r\n                     </div></Link></li>\r\n                     <li className = \"systemImg\" id = \"systemImg02\"><Link  to = \"/Visualization\"><div style ={{width:\"100%\",height:\"100%\"}}>\r\n                     </div></Link></li>\r\n            </ul>\r\n                        \r\n              \r\n                </div>\r\n                \r\n                {/* <br/> */}\r\n\r\n                <Footer></Footer>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\LayoutUI.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\index.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\index.jsx",["2136","2137","2138","2139"],"\r\n\r\nimport React,{Component} from 'react'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// antd\r\nimport { Table ,Pagination,Space,Button} from 'antd';\r\n// table\r\n import tableConfig from './Table1/tableConfig'\r\n import vibtableConfig01 from './vibration/Table1/tableConfig'\r\n import vibtableConfig02 from './vibration/Table2/tableConfig'\r\n// style\r\nimport './style.scss'\r\n// 方法\r\nimport {_checkZip} from './component/functionList'\r\nimport { _vibPngSelectPage } from './vibration/component/functionList';\r\n\r\n// 组件\r\nimport AutoDivide from './component/AutoDivide'\r\nimport BatchOperation from './component/BatchOperation'\r\nimport VibAutoDivide from './vibration/component/AutoDivide'\r\nimport VibBatchOperation from './vibration/component/BatchOperation'\r\nexport default class DatasetConstruct extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            selectedRowKeys: [], // 选中的id\r\n            zipMsg:store.getState().DatasetConstructReducer.zipMsg,\r\n            zipTable :store.getState().DatasetConstructReducer.imagedata.zipTable,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n            vibFileList:store.getState().DatasetConstructReducer.vibTable.imageTable,\r\n            vibTask :store.getState().TagManagementreducer.vibTable.taskTable, //振动数据任务\r\n            vibtotalCount:store.getState().TagManagementreducer.vibTable.totalCount,\r\n            selectedvalue:[], //选中的内容\r\n\r\n        }\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n  \r\n    handleStoreChange = ()=>{\r\n        this.setState({\r\n            zipMsg:store.getState().DatasetConstructReducer.zipMsg,\r\n            dataType:store.getState().Preprocessingreducer.dataType,\r\n            zipTable :store.getState().DatasetConstructReducer.imagedata.zipTable,\r\n            vibFileList:store.getState().DatasetConstructReducer.vibTable.imageTable,\r\n            vibTask :store.getState().TagManagementreducer.vibTable.taskTable, //振动数据任务\r\n            vibtotalCount:store.getState().TagManagementreducer.vibTable.totalCount,\r\n\r\n        })\r\n    }\r\n \r\n      pageonChange=(page, pageSize)=>{\r\n        \r\n        if(this.state.dataType == 1){\r\n          const {zipMsg} = this.state;\r\n          _checkZip(page,zipMsg.id,zipMsg.name)\r\n        }else{\r\n          _vibPngSelectPage(page)\r\n        }\r\n  \r\n      }\r\n    //   刷新\r\n      refresh=()=>{\r\n        if(this.state.dataType  == 1){\r\n          const {zipMsg} = this.state;\r\n          _checkZip(1,zipMsg.id,zipMsg.name)\r\n        }else{\r\n          _vibPngSelectPage(1)\r\n        }\r\n     \r\n      }\r\n      \r\n        /**\r\n   * 表格选择\r\n   */\r\n  onSelectChange = (selectedRowKeys,selectedvalue) => {\r\n    // console.log('selectedRowKeys changed: ', selectedvalue);\r\n    this.setState({ selectedRowKeys,selectedvalue });\r\n  };\r\n    render(){\r\n        const {zipTable,selectedRowKeys,dataType,vibFileList,vibTask,vibtotalCount} = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n          };\r\n        return(\r\n            <div>\r\n                    <Space style ={{float:\"left\",padding:\"10px 0 10px 0\"}}>\r\n                    <Button size = \"large\" onClick ={this.refresh}>刷新</Button>\r\n                    {dataType == 1 ? <Space>\r\n                      <BatchOperation  getRecords = {()=>{\r\n                        // console.log(this.state.selectedvalue);\r\n                        return this.state.selectedvalue\r\n                    }}></BatchOperation>\r\n                    <AutoDivide></AutoDivide>\r\n                    </Space>: <Space>\r\n                    <VibBatchOperation  getRecords = {()=>{\r\n                        // console.log(this.state.selectedRowKeys)\r\n                        // console.log(this.state.selectedRowKeys);\r\n                        return this.state.selectedRowKeys\r\n                    }}></VibBatchOperation>\r\n                    <VibAutoDivide></VibAutoDivide>\r\n                      </Space>}\r\n                   \r\n                   \r\n                  </Space>\r\n              {\r\n\r\n                dataType == 1 ?<Table \r\n                      rowSelection={{\r\n                        ...rowSelection,\r\n                      }}\r\n                      rowKey = {\"id\"}\r\n                      pagination ={false}\r\n                    className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={zipTable} />\r\n                    : <div>\r\n                    <Table  className = \"table1\" size=\"middle\"  bordered ={true} columns={vibtableConfig01}\r\n                      pagination = {false}\r\n                    dataSource={vibTask} />\r\n                    <Table \r\n                      rowSelection={{\r\n                        ...rowSelection,\r\n                      }}\r\n                      rowKey = {\"id\"}\r\n                      pagination ={false}\r\n                    className = \"table2\" size=\"middle\"  bordered ={true} columns={vibtableConfig02} dataSource={vibFileList} />\r\n                    </div>\r\n                   \r\n             \r\n              }\r\n                <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={vibtotalCount}\r\n                    />\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\index.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\index.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\index.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\index.jsx",["2140","2141","2142","2143"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\Table1\\tableConfig.js",["2144","2145"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Store\\index.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\Table1\\tableConfig.js",["2146","2147"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\Table1\\tableConfig.js",["2148","2149"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\Table1\\tableConfig.js",["2150","2151"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\Table2\\tableConfig.js",["2152","2153","2154"],"import {Component} from 'react'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport {Button,Tags,Space,Image,Modal} from 'antd'\r\n\r\nconst str = `${hostPort}equip/image/view?imageId=`\r\n const tableColumns = [\r\n    {\r\n      title: '文件名',\r\n      dataIndex: 'imageName',\r\n      key: 'imageName',\r\n    //   render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: '原始图片',\r\n      dataIndex: 'preImg',\r\n      key: 'preImg',\r\n      render: (text,record) => {\r\n      \r\n        return (\r\n          <Image src = {`${str}${record.id}&type=in`} width = {200} height= {200}></Image>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: '处理后的图片',\r\n      dataIndex: 'resultImg',\r\n      key: 'resultImg',\r\n      render: (text,record) => {\r\n        return (\r\n          <Image src = {`${str}${record.id}&type=out`} width = {200} height= {200}></Image>\r\n        )\r\n      },\r\n    },   \r\n    {\r\n      title: '腐蚀占比',\r\n      dataIndex: 'corrosionRate',\r\n      key: 'corrosionRate',\r\n    },\r\n\r\n    {\r\n      title: '操作',\r\n      // key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n\r\n         <Button \r\n         size=\"small\"\r\n          onClick={()=>{\r\n          }}\r\n        >详细信息</Button>\r\n \r\n        <Button \r\n         size=\"small\"\r\n\r\n          type =\"danger\"\r\n          onClick={()=>{\r\n        }}\r\n        className = 'deleteBtn'\r\n        >删除</Button>\r\n</Space>\r\n      ),\r\n    },\r\n  ];\r\nexport default tableColumns;\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\Table1\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\Table2\\tableConfig.js",["2155"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\Table2\\tableConfig.js",["2156"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\Table2\\tableConfig.js",["2157","2158"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\Table1\\tableConfig.js",["2159"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\vibration\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\component\\vibration\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\VibrationIndex.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\functionList.jsx",["2160"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\nexport function _modelCheck(modelID,modelName){\r\n  // console.log(modelName);\r\n  let returnData\r\n  let flag = false\r\n  var fd = new FormData();\r\n  fd.append(\"algorithmId\",3);\r\n  fd.append(\"modalId\",modelID);\r\n  $.ajax({\r\n    type:\"POST\",\r\n    ///equip/modal/sequenceTest\r\n    url:hostPort+\"equip/modal/sequenceTest\",\r\n    contentType: false,\r\n    processData: false,\r\n    dataType:'JSON',\r\n    async:false,\r\n    data: fd,\r\n    success:res=>{\r\n      if(res.flag){\r\n        flag = true\r\n        returnData=res.data\r\n        // console.log(flag,'flag')\r\n        const action = {\r\n          type:\"modelCheck\",\r\n          modelName,\r\n          modelID,\r\n          returnData,\r\n        }\r\n        store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  }) \r\n  _message(flag,'模型校验')\r\n}\r\n\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _modelList(page){\r\n  let returnData\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/modal/selectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"method\": 2\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n       const action ={\r\n        type:'sequenceModelList',\r\n        returnData,\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\Table1\\tableConfig.js",["2161","2162"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\functionList.jsx",["2163","2164","2165","2166"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\nexport function _lifePrediction(fileID,modelID,step,datasetName,modelName){\r\n  let returnData\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/modal/sequencePredict\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:\"JSON\",\r\n    async:false,\r\n    data:JSON.stringify({\r\n      modalId:modelID,\r\n      sourceFileId:fileID,\r\n      step:step,\r\n    }),\r\n    success:res =>{\r\n      if(res.flag){\r\n      // console.log('res',res)\r\n      }\r\n      const action0 ={\r\n        type:'lifePrediction',\r\n        step,\r\n        fileID,\r\n        modelID,\r\n        datasetName,\r\n        modelName\r\n      }\r\n    store.dispatch(action0)\r\n    },\r\n    error:function(){\r\n    \r\n\r\n    }\r\n  })\r\n  _message(flag,'寿命预测')\r\n}\r\n\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _modelList(page,id){\r\n  let returnData\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/modal/selectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"method\": 2\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n       const action ={\r\n        type:'sequenceModelList',\r\n        returnData,\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 查看数据\r\n */\r\nexport function _checkDialog(id){\r\n  let dataTable ={\r\n    length:\"\",\r\n    data:[],\r\n    column:[\r\n      {\r\n        title: '采样时间',\r\n        dataIndex: '第1列',\r\n        key: '第1列',\r\n        width:100,\r\n\r\n      },\r\n    ],\r\n  }\r\n  let data=[]\r\n  $.ajax({\r\n    type:\"get\",\r\n   url:hostPort+\"equip/file/read/\"+id,\r\n    // url:hostPort+\"equip/sequence/read/1279625219525873665\",\r\n    dataType:'JSON',\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        dataTable.length = res.data.length-1\r\n        // 第0列是乱码\r\n        data = res.data.splice(1) \r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  // 处理数据\r\n   let index //传感器个数\r\n  data.map((item,j)=>{\r\n     index = 0\r\n    for(var prop in item){\r\n      if(prop=='第1列'){\r\n        // 第一列 修改为\r\n        item[\"第1列\"] = j;\r\n      }else{\r\n        index++;\r\n      }\r\n    } \r\n  })\r\n  dataTable.data = data\r\n  // 生成列\r\n  for(var i=1;i<=index;i++){\r\n    dataTable.column.push({\r\n      title:`传感器${i}`,\r\n      dataIndex:`第${i+1}列`,\r\n      key:`第${i+1}列`,\r\n      width:100,\r\n    })\r\n  }\r\n  return dataTable;\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\component\\functionList.jsx",["2167","2168"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\Table3\\tableConfig.js",["2169","2170"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\Table2\\tableConfig.js",["2171","2172"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\functionList.jsx",["2173","2174","2175"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\Table1\\tableConfig.js",["2176","2177"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\component\\functionList.jsx",["2178"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\contentContainer\\Footer.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\Table2\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\Table1\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\component\\functionList.jsx",["2179","2180","2181"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\component\\ChooseModel.jsx",["2182"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\ChooseModel.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\functionList.jsx",["2183","2184","2185","2186","2187"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\vibration\\Table2\\tableConfig.js",["2188"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\contentContainer\\ContentContainer.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\NavUI.jsx",["2189","2190","2191"],"import React,{Component} from 'react';\r\nimport style from './style.scss'\r\nimport ClockUI from '../component/clock/ClockUI'\r\n\r\n\r\n//导入Logo\r\nimport Logo from './Logo'\r\nimport Title from './Title'\r\n//导入UserNav\r\nimport UserNav from './UserNav'\r\nconst NavUI = (props) =>{\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light nav-self \">\r\n            <div className=\"collapse navbar-collapse  \" id=\"navbarNavDropdown\">\r\n                    <div className = \"col-1\">\r\n                    <Logo></Logo>\r\n                    </div>\r\n                    <div className = \"col-8\">\r\n                    <Title></Title>\r\n                    </div>\r\n                    \r\n                    <div className = \"col-3\">\r\n                    <UserNav></UserNav>\r\n\r\n                    </div>\r\n            \r\n            </div>\r\n            </nav>\r\n       \r\n);\r\n}\r\nexport default NavUI;","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\component\\CreateCard.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\component\\ListCard.jsx",["2192","2193"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\component\\functionList.jsx",["2194","2195"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\functionList.jsx",["2196","2197","2198"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\AutoDivide.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\BatchOperation.jsx",["2199","2200","2201","2202","2203"],"\r\nimport React,{Component} from 'react'\r\n// antd\r\nimport { Modal,Button,Cascader,Space,message} from 'antd';\r\n// 方法\r\nimport {_batchDivide} from './functionList'\r\nconst options = [\r\n    {\r\n      value: '训练集',\r\n      label: '训练集',\r\n    },\r\n    {\r\n      value: '测试集',\r\n      label: '测试集',\r\n    },\r\n  ];\r\nexport default class BatchOperation extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            visible:false,\r\n            value:'',//训练集或者 测试集\r\n        }\r\n\r\n    }\r\n\r\nonOpen=()=>{\r\n        this.setState({\r\n            visible:true\r\n        })\r\n}\r\n\r\n/**\r\n * 提交批量划分\r\n */\r\nonOk = ()=>{\r\n    let records = this.props.getRecords()\r\n    // console.log(records);\r\n    if(records.length ==0){\r\n       message.error('未选中图片！')\r\n    }else{\r\n        let data = [] ,a =0,b=0;\r\n        for(let i = 0; i<records.length ;i++){\r\n            if(records[i].setType == '训练集'){\r\n                a++;\r\n            }else{\r\n                b++;\r\n            }\r\n            if(a!==0 && b!==0) break;\r\n        }\r\n        if(a == 0|| b ==0){\r\n            records.map((item,index)=>{\r\n                data.push({\r\n                    'id':item,\r\n                    'setType':this.state.value,\r\n                })\r\n            })\r\n            _batchDivide(data)\r\n\r\n        }else{\r\n        message.error('请勿同时选中来自不同数据集的文件！')\r\n            \r\n        }\r\n\r\n    }\r\n   \r\n    this.setState(\r\n        {\r\n            visible:false,\r\n        }\r\n    )\r\n    \r\n}\r\n\r\n/**\r\n * 关闭窗口\r\n */\r\n    onClose = ()=>{\r\n        this.setState(\r\n            {\r\n                visible:false,\r\n            }\r\n        )\r\n    }\r\n\r\n/**\r\n * 表格改变\r\n */\r\n  \r\nonChange = (value)=>{\r\n   this.setState(\r\n       {\r\n        value:value[0] \r\n       }\r\n   )\r\n  } \r\n\r\n\r\n    render(){\r\n    const { visible } = this.state;\r\n        return(\r\n            <div >\r\n            <Button   className =\"normalBtn\"  size ='large' onClick ={this.onOpen}>批量操作</Button>\r\n            <Modal\r\n                title=\"数据集划分\" \r\n                visible ={visible}\r\n                width = {400}\r\n                footer={null}\r\n                onCancel = {this.onClose}\r\n                >\r\n                <Space>\r\n                   <Cascader options={options} onChange={this.onChange} placeholder=\"请选择要划分的数据集！\" />\r\n                    <Button type =\"normal\"  onClick ={this.onOk}>确认划分</Button>\r\n                </Space>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\functionList.jsx",["2204","2205","2206"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n/**\r\n * 时序数据模型训练\r\n */\r\nexport function _modelTraining(id,values){\r\n  let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let returnData\r\n  let flag = false\r\n  $.ajax({\r\n    type:\"POST\",\r\n    url:hostPort+\"equip/modal/sequenceTrain\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n        sourceFile:id,\r\n        name:values.name,\r\n        method:2,\r\n        neuronsNumber:values.neuronsNumber,\r\n        learningRate:values.learningRate,\r\n        netNum:2,\r\n        dropOut:0.5,\r\n        numEpochs:100,\r\n      }),\r\n    success : res=>{\r\n      if(res.flag){\r\n        flag = true\r\n        _modelList(1,originID)\r\n        }\r\n    },\r\n    error:function(){\r\n      \r\n    }\r\n  })\r\n  // return flag;\r\n  _message(flag,'模型训练')\r\n}\r\n/**\r\n * 删除模型\r\n */\r\nexport function _deleteModel(id,modelID){\r\n  let originID = store.getState().ModelCheckreducer.tableData[0].originID\r\n  let flag\r\n  $.ajax({\r\n    type:\"delete\",\r\n    url:hostPort+\"equip/modal/delete/\"+modelID,\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    success:function(res){\r\n      if(res.flag){\r\n        flag = true\r\n        _modelList(1,originID)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  _message(flag,'删除模型')\r\n\r\n}\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _modelList(page,id){\r\n  let returnData\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/modal/selectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      \"queryParameter\": {\r\n        \"method\": 2\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n       const action ={\r\n        type:'sequenceModelList',\r\n        returnData,\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 图像数据\r\n */\r\n/**\r\n * 模型训练\r\n */\r\nexport function _imgModelTrainning(modelName,setid,numEpochs,epochLength){\r\n  let trainSetId  =store.getState().DatasetConstructReducer.trainSetId\r\n  let flag = false\r\n  if(trainSetId!=''){\r\n    //获取到训练集id\r\n    let str  = `name=${modelName}&setId=${setid}&modelFileId=666&numEpochs=${numEpochs}&epochLength=${epochLength}&rpnLr=0.00001&classifierLr=0.00001&trainSetId=${trainSetId}`\r\n    $.ajax({\r\n      type:\"post\",\r\n      url:hostPort+\"equip/modal/imageTrain?\"+str,\r\n      //equip/modal/imageTrain\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      success:res =>{\r\n        if(res.flag){\r\n          flag = true\r\n        //训练完毕  清除已经训练的任务\r\n          _message(flag,'模型训练')          \r\n          _imgModelList()\r\n          const action = {\r\n            type:\"ImagemodelTrainingSubmit\",\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n  }else{\r\n    _message(false,'获取训练集id')\r\n  }\r\n\r\n  return flag;\r\n  \r\n}\r\n/**\r\n * 模型列表刷新\r\n */\r\nexport function _imgModelList(){\r\n      // console.log('refresh')\r\n     \r\n    let returnDataList = []\r\n    let setid = store.getState().DataStoragereducer.fileName[0].id\r\n    // let datasetName = store.getState().DataStoragereducer.fileName[0].name\r\n\r\n        $.ajax({\r\n            type:\"post\",\r\n            url:hostPort+\"equip/modal/selectPage\",\r\n            contentType:\"application/json;charset=UTF-8\",\r\n            dataType:'JSON',\r\n            async:false, //改成异步  就不会锁住浏览器\r\n            data:JSON.stringify({\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": 1,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n               \"setId\":setid,\r\n               \"method\": 0\r\n              }\r\n            }),\r\n            success:function(res){\r\n              if(res.flag){\r\n                // console.log(\"res\",res)\r\n              returnDataList = res.data.pageList\r\n              const action = {\r\n                type:\"ImagemodelList\",\r\n                returnDataList,\r\n              }\r\n              store.dispatch(action)\r\n              }\r\n            },\r\n            error:function(){\r\n            }\r\n          })\r\n       \r\n    }\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\functionList.jsx",["2207","2208","2209","2210","2211"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\AutoDivide.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\BatchOperation.jsx",["2212","2213"],"\r\nimport React,{Component} from 'react'\r\n// antd\r\nimport { Modal,Button,Cascader,Space,message} from 'antd';\r\n// 方法\r\nimport {_vibbatchDivide} from './functionList'\r\nconst options = [\r\n    {\r\n      value: '训练集',\r\n      label: '训练集',\r\n    },\r\n    {\r\n      value: '测试集',\r\n      label: '测试集',\r\n    },\r\n  ];\r\nexport default class BatchOperation extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            visible:false,\r\n            value:'',//训练集或者 测试集\r\n        }\r\n\r\n    }\r\n\r\nonOpen=()=>{\r\n        this.setState({\r\n            visible:true\r\n        })\r\n}\r\n\r\n/**\r\n * 提交批量划分\r\n */\r\nonOk = ()=>{\r\n    let idArr = this.props.getRecords()\r\n    // console.log(idArr);\r\n    if(idArr.length ==0){\r\n       message.error('未选中图片！')\r\n    }else if(idArr == undefined){\r\n        message.error('请勿同时选择来自训练集和测试集的文件!')\r\n    }else{\r\n        _vibbatchDivide(idArr,this.state.value)\r\n    }\r\n   \r\n    this.setState(\r\n        {\r\n            visible:false,\r\n        }\r\n    )\r\n    \r\n}\r\n\r\n/**\r\n * 关闭窗口\r\n */\r\n    onClose = ()=>{\r\n        this.setState(\r\n            {\r\n                visible:false,\r\n            }\r\n        )\r\n    }\r\n\r\n/**\r\n * 表格改变\r\n */\r\n  \r\nonChange = (value)=>{\r\n   this.setState(\r\n       {\r\n        value:value[0] \r\n       }\r\n   )\r\n  } \r\n\r\n\r\n    render(){\r\n    const { visible } = this.state;\r\n        return(\r\n            <div >\r\n            <Button   className =\"normalBtn\"  size ='large' onClick ={this.onOpen}>批量操作</Button>\r\n            <Modal\r\n                title=\"数据集划分\" \r\n                visible ={visible}\r\n                width = {400}\r\n                footer={null}\r\n                onCancel = {this.onClose}\r\n                >\r\n                <Space>\r\n                   <Cascader options={options} onChange={this.onChange} placeholder=\"请选择要划分的数据集！\" />\r\n                    <Button type =\"normal\"  onClick ={this.onOk}>确认划分</Button>\r\n                </Space>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\index.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\vibration\\component\\functionList.jsx",["2214","2215"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\Common.js",["2216"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Sequence.jsx",["2217"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Store\\reducer.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\DeviceImg.jsx",["2218","2219","2220","2221","2222","2223","2224","2225","2226","2227"],"import {Component} from 'react';\r\n\r\n// antd\r\nimport {Card,Space,Descriptions,Table,Image,Button} from 'antd';\r\n\r\n// \r\nimport {Link} from 'react-router-dom'\r\n\r\nimport DeviceMsg from './DeviceMsg'\r\nimport LineCharts from './LineCharts'\r\nimport {errorMsg} from './dataConfig'\r\nimport {detectAnomalies} from './dataConfig'\r\nimport './style.scss'\r\nexport default class DeviceImg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {/* <Space>\r\n                <Space wrap = {true}> */}\r\n            \r\n                {/* <Link to ='/Devproject'><Button>返回</Button></Link> */}\r\n\r\n                {/* <Card\r\n                    hoverable\r\n                    style={{ width: 240,height: \"100%\"}}\r\n                    cover={<img alt=\"example\" src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\" />}\r\n                    // actions = {[\r\n                    //     <DeviceMsg></DeviceMsg>\r\n                    // ]}\r\n                >\r\n                    <DeviceMsg></DeviceMsg>\r\n                </Card> */}\r\n                {/* <Card\r\n                    style={{ width: 240,height: \"100%\" }}\r\n                    // cover={<img alt=\"example\" src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\" />}\r\n                \r\n                >\r\n                    <div>\r\n                    <Descriptions size = {\"small\"} bordered column ={1}>\r\n                        {\r\n                            errorMsg.map((item,index)=>{\r\n                                return(\r\n                                    <Descriptions.item label = {item.label}>\r\n                                        {item.value}\r\n                                    </Descriptions.item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Descriptions>\r\n                    </div>\r\n                </Card>\r\n                <Card\r\n                    style={{ height: \"100%\" }}\r\n                    // cover={<img alt=\"example\" src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2027367522,1910292912&fm=26&gp=0.jpg\" />}\r\n                    title = {\"检测异常信息\"}\r\n                >\r\n                    <Table dataSource={detectAnomalies.data} columns={detectAnomalies.columns}  pagination = {false}/>\r\n                    \r\n                </Card> */}\r\n                {/* </Space>\r\n\r\n            </Space>  */}\r\n           \r\n            </>\r\n        )\r\n    }\r\n\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\DeviceMsg.jsx",["2228","2229","2230","2231","2232","2233"],"import {Component} from 'react';\r\n\r\n// antd \r\nimport { Drawer, Button ,Descriptions,Space } from 'antd';\r\n\r\n// style\r\nimport './style.scss'\r\n\r\n// 数据\r\nimport {basicMsg , basicParameter,errorMsg} from './dataConfig'\r\n\r\nexport default class DeviceMsg  extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n        }\r\n    }\r\n\r\n    onClose =()=>{\r\n        this.setState({\r\n            visible:false,\r\n        })\r\n    }\r\n\r\n    onOpen =()=>{\r\n        this.setState({\r\n            visible:true,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {visible} = this.state;\r\n        return(\r\n            <>\r\n            <Space>\r\n            <Descriptions className = \"dev-des\" title={<span className = \"dev-des-title\">{basicMsg.title} </span> } size = {\"small\"}  column ={1}>\r\n              {\r\n                  basicMsg.data.map((item,index)=>{\r\n                      return(\r\n                          <Descriptions.item label = { <span style = {{color:\"#fff\",fontWeight:\"bolder\"}}>{item[0]}</span>}>\r\n                              <span style = {{color:\"#fff\"}}>{item[1]}</span>\r\n                          </Descriptions.item>\r\n                      )\r\n                  })\r\n              }\r\n              </Descriptions>\r\n              {/* <br/> */}\r\n              <Descriptions   className = \"dev-des\" title={<span className = \"dev-des-title\">{basicParameter.title} </span> }  size = {\"small\"}  column ={1}>\r\n              {\r\n                  basicParameter.data.map((item,index)=>{\r\n                      return(\r\n                          <Descriptions.item label = { <span style = {{color:\"#fff\",fontWeight:\"bolder\"}}>{item[0]}</span>}>\r\n                                                            <span style = {{color:\"#fff\"}}>{item[1]}</span>\r\n                          </Descriptions.item>\r\n                      )\r\n                  })\r\n              }\r\n              </Descriptions>\r\n              <Descriptions   className = \"dev-des\" title={<span className = \"dev-des-title\">{errorMsg.title} </span> }  size = {\"small\"}  column ={1}>\r\n              {\r\n                  errorMsg.data.map((item,index)=>{\r\n                      return(\r\n                          <Descriptions.item label = { <span style = {{color:\"#fff\",fontWeight:\"bolder\"}}>{item[0]}</span>}>\r\n                                                            <span style = {{color:\"#fff\"}}>{item[1]}</span>\r\n                          </Descriptions.item>\r\n                      )\r\n                  })\r\n              }\r\n              </Descriptions>\r\n            </Space>\r\n      \r\n            {/* </Drawer> */}\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ModelAlgorithm.jsx",["2234","2235","2236","2237","2238","2239","2240","2241"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\LineCharts.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ResultTable.jsx",["2242","2243","2244","2245","2246","2247","2248","2249"],"import {Component} from 'react';\r\n\r\n// antd\r\nimport {Table,Button,Tag,Pagination,Alert,PageHeader} from 'antd';\r\n// store\r\nimport store from '@/pages/Store/index'\r\nimport {_vibTaskpageonChange} from './functionList'\r\nimport {resultColumns,resultArr,} from './dataConfig'\r\n// style\r\nimport './style.scss'\r\n// 消息轮播\r\nimport TextLoop from 'react-text-loop';\r\nexport default class ModelAlgorithm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            vibData:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n            vibtotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n            selectedRowKeys:\"\",\r\n            resultData:resultArr[0],\r\n            currentIndex:0\r\n        }\r\n        // store.subscribe(this.handleStoreChange)\r\n    }\r\n    \r\n    // handleStoreChange = ()=>{\r\n    //     this.setState({\r\n    //         vibData:store.getState().StateEvaluatereducer.vibStateValuate.taskList,\r\n    //         vibtotalCount:store.getState().StateEvaluatereducer.vibStateValuate.taskTotalCount,\r\n    //     })\r\n    // }\r\n\r\n      \r\n    // componentDidMount(){\r\n    //     // _vibTaskpageonChange(1)\r\n    //     this.timer = setInterval(()=>{\r\n    //         if(this.state.currentIndex == resultArr.length-1){\r\n    //             this.setState({\r\n    //                 currentIndex :0,\r\n    //                 resultData:resultArr[0],\r\n    //             })\r\n    //         }else{\r\n                \r\n    //             this.setState((preState)=>({\r\n    //                 currentIndex:++preState.currentIndex,\r\n    //                 resultData:resultArr[this.state.currentIndex]\r\n    //             }),()=>{\r\n    //                 this.createMesg(this.state.resultData)\r\n    //             })\r\n    //         }\r\n    //     },3000)\r\n    // }\r\n    \r\n    // vibpageonChange=(page,pageSize)=>{\r\n    //     _vibTaskpageonChange(page)\r\n    //   }\r\n            \r\n    // /**\r\n    //  * 表格选择\r\n    //  */\r\n    // onSelectChange = selectedRowKeys => {\r\n    //     // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    //     this.setState({ selectedRowKeys });\r\n    // };\r\n    // componentWillUnmount(){\r\n    //     clearInterval(this.timer);\r\n    // }\r\n\r\n    createMesg =()=>{\r\n        let content =resultArr.map((item,index)=>{\r\n            if(item*100<=30){\r\n                return((<div className  =\"result-content\" key = {index}><Tag color=\"success\" >正常</Tag><Tag color=\"success\">{item*100}%</Tag></div>))\r\n            }else if(item*100 <=60 && item*100>30){\r\n                return((<div className  =\"result-content\" key = {index}><Tag color=\"warning\" style = {{marginRight:\"10px\"}}>警告</Tag><Tag color=\"warning\">{item*100}%</Tag></div>))\r\n            }else if(item*100 >60 && item*100<100){\r\n                return((<div className  =\"result-content\" key = {index}><Tag color=\"error\" style = {{marginRight:\"10px\"}}>故障</Tag><Tag color=\"error\">{item*100}%</Tag></div>))\r\n            }\r\n        })\r\n        return content;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className =\"result-container\">\r\n                <PageHeader \r\n                className=\"site-page-header-responsive\"\r\n                title={<span className = \"PageHeader-dev-des-title\">诊断结果</span>}\r\n                ghost\r\n                >\r\n                    <div className = \"zmd\">\r\n                        <div className  =\"result-mesg\">\r\n                            {this.createMesg()}\r\n\r\n                        </div>\r\n                    </div>\r\n                {/* <TextLoop springConfig={{stiffness:340,damping:30}}\r\n                //  mask={true} fade={true}\r\n                adjustingSpeed={150} delay={2000} interval={5000}>\r\n                    {this.createMesg()}\r\n                </TextLoop> */}\r\n                </PageHeader>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\Nav.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\LifePrediction.jsx",["2250"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Table ,Upload ,Modal,Pagination,Space,Input} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../style.scss'\r\nimport tableConfig from './ChooseModel/tableConfig'\r\n// 方法\r\nimport {_modelList,_message,_lifePrediction} from './functionList'\r\nimport {hostPort} from '@/Common'\r\n\r\nclass LifePrediction extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n            id :store.getState().ModelTrainingreducer.tableData[0].originID,\r\n            modelID:\"\",\r\n            modelName:\"\",\r\n            step:\"\",\r\n            disabled:false,\r\n            datasetName:\"\",//上传的文件名\r\n\r\n        }\r\n    store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    componentDidMount(){\r\n      _modelList(1,this.state.id)\r\n    }\r\n\r\n\r\n    handleStoreChange = ()=>{\r\n      this.setState({\r\n          dataType:store.getState().ModelTrainingreducer.dataType,\r\n          modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n      })\r\n  }\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  pageonChange=(page, pageSize)=>{\r\n    // console.log(page, pageSize,'page, pageSize')\r\n    _modelList(page)\r\n  }\r\n\r\n  // 选择模型\r\n  selectChange =(selectedRowKeys, selectedRows)=>{\r\n    this.setState({\r\n      modelID:selectedRowKeys[0],\r\n      modelName:selectedRows.name\r\n    })\r\n  }\r\n\r\n    /**\r\n   * 输入框\r\n   * @param {*} e \r\n   */\r\n  onChange =(e)=>{\r\n    let inputValue = e.target.value\r\n    // console.log(inputValue)\r\n    this.setState({\r\n      step:inputValue\r\n    })\r\n  }\r\n\r\n    // 上传文件\r\n    upload=(info)=> {\r\n      let flag = false\r\n      if (info.file.response) {\r\n          let response = info.file.response\r\n          if(response.flag){\r\n            this.setState({\r\n              fileID:response.data.id,\r\n              datasetName:response.data.name,\r\n            })\r\n          flag = true\r\n          }\r\n      _message(flag,'上传文件')\r\n      }\r\n    } \r\n    // 寿命预测\r\n    lifePrediction =()=>{\r\n      const {fileID,modelID,step,datasetName,modelName}  = this.state;\r\n      _lifePrediction(fileID,modelID,step,datasetName,modelName);\r\n      this.onClose();\r\n    }\r\n    inputSubmit=()=>{\r\n      this.setState({\r\n        disabled:true\r\n      })\r\n    }\r\n    \r\n    render(){\r\n        const{visible,loading} = this.state;\r\n        const {modelList} = this.state\r\n        const rowSelection = {\r\n          onChange: this.selectChange,\r\n          type:\"radio\"\r\n        };\r\n        return(\r\n            <div>\r\n                  {/* <Spin  spinning = {loading} tip=\"模型训练中...\">\r\n                </Spin> */}\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                >\r\n                寿命预测\r\n                </Button>\r\n                <Modal\r\n                    title=\"模型列表\" \r\n                    visible ={visible}\r\n                    width = {800}\r\n                    onCancel = {this.onClose}\r\n                    destroyOnClose  = {true}\r\n                    footer={[\r\n                      <Button key=\"submit\" type=\"primary\" onClick={this.lifePrediction}>寿命预测</Button>\r\n                    ]}\r\n                >\r\n                    <Space >\r\n                      <Input disabled ={this.state.disabled} placeholder =\"请输入步长\" onChange = {this.onChange}/> \r\n                      <Button    className = {\"ModelBtn\"}  onClick = {this.inputSubmit}>确认步长</Button>\r\n                    </Space>\r\n                    <Space >\r\n\r\n                      <Upload \r\n                        showUploadList ={false}\r\n                        name = 'file'\r\n                        onChange = {this.upload}\r\n                        action={hostPort+\"equip/file/upload\"}\r\n                        data={{\r\n                          dataType:2\r\n                        }}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}      type=\"normal\"\r\n                      className = \"normalBtn\">上传文件</Button>\r\n                      </Upload>\r\n                    </Space>\r\n\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={modelList} \r\n                       pagination = {false}\r\n                       rowKey = {\"id\"}\r\n                       rowSelection={{\r\n                        type:'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                    />\r\n                      <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n              \r\n                    \r\n                </Modal>\r\n        \r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default LifePrediction;\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\CheckDialog.jsx",["2251"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\index.js",["2252","2253","2254","2255","2256","2257"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\index.js",["2258","2259"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\DeleteModel.jsx",["2260"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\DetailMsg.jsx",["2261","2262"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\vibration\\PreProcessing.jsx",["2263","2264","2265","2266","2267"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\component\\vibration\\Exchange.jsx",["2268"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\GetResult.jsx",["2269","2270","2271","2272"],"import React,{Component} from 'react';\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\nimport '../style.scss' \r\nimport {_imgStateEvaluateResult} from './functionList'\r\nexport default class GetResult extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    onClick = ()=>{\r\n        let record = this.props.onClick();\r\n        if(record.setId){\r\n            _imgStateEvaluateResult(1);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Button\r\n            type=\"normal\"\r\n            className = \"normalBtn\"\r\n            onClick={this.onClick}\r\n            size = \"middle\"\r\n            >\r\n            查看结果\r\n            </Button>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\ImportZip.jsx",["2273","2274","2275"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\CheckDialog.jsx",["2276"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\PreProcessing.jsx",["2277","2278","2279","2280"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\CreateLine.jsx",["2281"],"import React,{Component} from 'react'\r\n\r\n// antd\r\nimport {Button,Modal} from 'antd'\r\nimport CreateChart from './CreateChart'\r\nexport default class CreateLine extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            visible:false\r\n        }\r\n\r\n    }\r\n    onOpen=()=>{\r\n        let result = this.props.onClick()\r\n        if(result != undefined){\r\n            this.setState({\r\n                visible:true,\r\n                data:result,\r\n            })\r\n        }\r\n    }\r\n    onClose =()=>{\r\n        this.setState({\r\n            visible:false\r\n        })\r\n    }\r\n \r\n\r\n    render(){\r\n        const {visible,data} = this.state;\r\n        return(\r\n            <div>\r\n                <Button  onClick ={this.onOpen}>查看振动信号图</Button>\r\n                <Modal\r\n                    title=\"查看数据\" \r\n                    visible ={visible}\r\n                    onCancel ={this.onClose}\r\n                    width = {1000}\r\n                    height = {1000}\r\n                    footer={null}\r\n                >\r\n                    <CreateChart result = {data}></CreateChart>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\vibration\\component\\DetailMsg.jsx",["2282","2283","2284"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\component\\ViewImg.jsx",["2285"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\vibration\\component\\AddLabel.jsx",["2286","2287","2288","2289"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\component\\ImgValuate.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\ModelCheck.jsx",["2290"],"import React,{Component} from 'react'\r\n// antd\r\nimport {Button,Table  ,Modal,Pagination} from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// style\r\nimport '../style.scss'\r\nimport tableConfig from './ChooseModel/tableConfig'\r\n// 方法\r\nimport {_modelList,_modelCheck} from './functionList'\r\n\r\nclass ModelCheck extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            visible:false,\r\n            modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n            id :store.getState().ModelTrainingreducer.tableData[0].originID,\r\n            modelID:\"\",\r\n            modelName:\"\",\r\n\r\n        }\r\n    store.subscribe(this.handleStoreChange)\r\n    }\r\n\r\n    componentDidMount(){\r\n      _modelList(1,this.state.id)\r\n    }\r\n\r\n\r\n    handleStoreChange = ()=>{\r\n      this.setState({\r\n          dataType:store.getState().ModelTrainingreducer.dataType,\r\n          modelList :store.getState().ModelCheckreducer.modelTrainingTable,\r\n      })\r\n  }\r\n\r\n\r\n  // 打开编辑弹窗\r\n  onOpen = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  // 关闭弹窗\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  pageonChange=(page, pageSize)=>{\r\n    // console.log(page, pageSize,'page, pageSize')\r\n    _modelList(page,this.state.id)\r\n  }\r\n\r\n  // 选择模型\r\n  selectChange =(selectedRowKeys, selectedRows)=>{\r\n    this.setState({\r\n      modelID:selectedRowKeys,\r\n      modelName:selectedRows[0].name\r\n    })\r\n  }\r\n  // 确认模型校验\r\n  modelCheck =()=>{\r\n    _modelCheck(this.state.modelID,this.state.modelName);\r\n    this.onClose();\r\n  }\r\n    render(){\r\n        const{visible,loading} = this.state;\r\n        const {modelList} = this.state\r\n        const rowSelection = {\r\n          onChange: this.selectChange\r\n        };\r\n      \r\n        return(\r\n            <div>\r\n                  {/* <Spin  spinning = {loading} tip=\"模型训练中...\">\r\n                </Spin> */}\r\n                <Button\r\n                // size=\"small\"\r\n                type=\"normal\"\r\n                className = \"normalBtn\"\r\n                onClick={this.onOpen}\r\n                >\r\n                选择模型\r\n                </Button>\r\n                <Modal\r\n                    title=\"模型列表\" \r\n                    visible ={visible}\r\n                    width = {800}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                     <Button\r\n                    // size=\"small\"\r\n                    type=\"normal\"\r\n                    className = \"normalBtn\"\r\n                    onClick={this.modelCheck}\r\n                    >\r\n                    确认选择\r\n                    </Button>\r\n                    <Table  className = \"table2\" size=\"middle\"  bordered ={true} columns={tableConfig} dataSource={modelList} \r\n                       pagination = {false}\r\n                       rowKey = {\"id\"}\r\n                       rowSelection={{\r\n                        type:'radio',\r\n                        ...rowSelection,\r\n                      }}\r\n                    />\r\n                      <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={100}\r\n                    />\r\n                </Modal>\r\n        \r\n            </div>\r\n          \r\n        )\r\n    }\r\n\r\n \r\n}\r\n\r\nexport default ModelCheck;\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\component\\ViewImg.jsx",["2291"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\component\\UploadLabel.jsx",["2292","2293"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\ModelTraining.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\functionList.jsx",["2294","2295","2296"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\TreeIndex\\index.jsx",["2297","2298","2299","2300","2301","2302"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\component\\CreateModels.jsx",["2303","2304","2305","2306","2307"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\vibration\\component\\DetailMsg.jsx",["2308","2309","2310"],"import React,{Component} from 'react'\r\nimport {Button ,Space ,Modal,Form, Input} from 'antd';\r\n\r\n// style\r\nimport '../../style.scss'\r\nimport store from '@/pages/Store/index'\r\n\r\nexport default class DetailMsg extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            records:\"\",\r\n            name:\"\",\r\n            iterNum:\"\",\r\n            lr:\"\",\r\n            minNum:\"\",\r\n            task:\"\"\r\n        }\r\n        \r\n\r\n    }\r\n    componentDidMount(){\r\n        let record = this.props.onClick()\r\n        this.setState({\r\n            ...record\r\n        })\r\n    }\r\n   \r\n\r\n      // 打开编辑弹窗\r\n    onOpen = () => {  \r\n      \r\n        this.setState({\r\n        visible: true,\r\n        }\r\n        );\r\n   \r\n    };\r\n\r\n    // 关闭弹窗\r\n    onClose = () => {\r\n        this.setState({\r\n        visible: false,\r\n        });\r\n    };\r\n\r\n    formArr =()=>{\r\n        const {name,iterNum,lr,minNum} = this.state;\r\n        const  formItemArr = [\r\n    \r\n            {\r\n                label:\"模型名称\",\r\n                name:\"name\",\r\n                content:<Input disabled  defaultValue = {name}></Input>\r\n            },  {\r\n                name:\"iterNum\",\r\n                label:\"迭代次数\",\r\n                content:   <Input  disabled   defaultValue = {iterNum} />\r\n            }, {\r\n                name:\"lr\",\r\n                label:\"学习率\",\r\n                content:   <Input  disabled defaultValue = {lr} />\r\n            },{\r\n                name:\"minNum\",\r\n                label:\"训练批次\",\r\n                content:   <Input  disabled defaultValue = {minNum} />\r\n            },\r\n        ]\r\n        return formItemArr\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        const {visible,records} = this.state;\r\n        return(\r\n            <div>\r\n                \r\n                <Button\r\n                type={this.props.buttonType}\r\n                ghost = {this.props.buttonGhost}\r\n                onClick={this.onOpen}\r\n                size =\"small\"\r\n                >\r\n                详细信息\r\n                </Button>\r\n                <Modal\r\n                    title=\"详细信息\" \r\n                    visible ={visible}\r\n                    // width = {320}\r\n                    destroyOnClose= {true}\r\n                    onCancel = {this.onClose}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        ref={this.formRef}\r\n                        name=\"basic\"\r\n                        >\r\n                            {\r\n                              this.formArr().map((item,index)=>{\r\n                                    return(\r\n                                        <Form.Item\r\n                                        label={item.label}\r\n                                        name={item.name}\r\n                                        \r\n                                        rules={ item.rule?\r\n                                            [\r\n                                        {\r\n                                            required: true,\r\n                                            message: `输入${item.label}`,\r\n                                        },\r\n                                        ]:null\r\n                                    }\r\n                                    >\r\n                                       {item.content}\r\n                                    </Form.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Form>\r\n                     \r\n                    \r\n                </Modal>\r\n          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\vibration\\component\\ViewImg.jsx",["2311"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\DeleteModel.jsx",["2312"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\DetailMsg.jsx",["2313","2314"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\component\\ImgTrainning.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\component\\ViewImg.jsx",["2315"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\contentContainer\\Content.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Aside\\AsideUI.jsx",["2316","2317"],"import React,{Component} from 'react';\r\n//导入路由\r\nimport routeConfig from '@/routerComponent/routeConfig'\r\nimport {NavLink,Link  }  from 'react-router-dom' \r\n\r\n// antd\r\nimport { Collapse } from 'antd';\r\n\r\n//导入css\r\nimport  './style.scss'\r\nconst { Panel } = Collapse;\r\n\r\nexport default class AsideUI extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            routeType:\"\",\r\n            routeMenu:routeConfig[3].children,//当前选择的系统应该渲染的Aside元素\r\n            collapseClass:\"collapse-nav\",\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {routeMenu } = this.state;\r\n        return(\r\n            <div className=\"asideContainer\">\r\n                    <div className=\"nav flex-column nav-pills aside\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                        {\r\n                            routeMenu.map((item,index)=>{\r\n                                if(item.children&&item.children.length>0 ){\r\n                                    return(\r\n                                        <div >\r\n                                             <Collapse\r\n                                                bordered={false}\r\n                                                className={this.state.collapseClass}\r\n                                                ghost\r\n                                            >\r\n                                                <Panel header={(\r\n                                                    <div className =\"nav-link\"> \r\n                                                            {item.img}\r\n                                                            <span style = {{color:\"#ffffff\"}}>\r\n                                                            {item.title}\r\n                                                            </span>\r\n                                                    </div>\r\n                                                )} key={index}  \r\n                                                showArrow={false}\r\n                                                className=\"collapse-panel\">\r\n                                                    <div className = \"active-panel\">\r\n                                                    {\r\n                                                        item.children.map((child,cIndex)=>{\r\n                                                            // console.log(child,'child',child.title)\r\n                                                            return(\r\n                                                                <div>\r\n                                                                <NavLink key ={cIndex} to={child.path} className=\"nav-link\"  exact ={true}\r\n                                                                activeClassName =\"active-navlink\"\r\n                                                                id=\"v-pills-home-tab\" \r\n                                                                role=\"tab\" \r\n                                                                >\r\n                                                                    {child.img}\r\n                                                                    <span >\r\n                                                                    {child.title}\r\n                                                                    </span>\r\n                                                                </NavLink>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    </div>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        </div>)\r\n                                }else if(item.title !=='可视化系统'){\r\n                                    return(\r\n                                        <Collapse\r\n                                        bordered={false}\r\n                                        className=\"collapse-nav\"\r\n                                        collapsible ={'disabled'}\r\n                                        ghost\r\n                                    >\r\n                                        <Panel header={(\r\n                                            <div>\r\n                                        <NavLink key ={index} to={item.path} className=\"nav-link\"  exact ={true}\r\n                                             activeClassName =\"active-navlink\"\r\n                                             id=\"v-pills-home-tab\" \r\n                                             data-toggle=\"pill\"  \r\n                                             role=\"tab\" \r\n                                             >\r\n                                                      {item.img}\r\n                                                 <span >\r\n                                                 {item.title}\r\n                                                 </span>\r\n                                             </NavLink>\r\n                                            </div>\r\n                                            )}  \r\n                                        showArrow={false}\r\n                                        className=\"collapse-panel\">\r\n                                        </Panel>\r\n                                    </Collapse>\r\n                                    )\r\n                                }\r\n                            })                            \r\n                        }\r\n                          {/* <Collapse\r\n                                        bordered={false}\r\n                                        className=\"collapse-nav\"\r\n                                        collapsible ={'disabled'}\r\n                                        ghost\r\n                                    >\r\n                                        <Panel header={(\r\n                                            <div>\r\n                                            <Link key ={11236} to={\"/Visualization\"} className=\"nav-link\"  exact ={true}\r\n                                             activeClassName =\"active-navlink\"\r\n                                             id=\"v-pills-home-tab\" \r\n                                             data-toggle=\"pill\"  \r\n                                             role=\"tab\" \r\n                                             >\r\n                                                   <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-cast\" viewBox=\"0 0 16 16\">\r\n                                                 <path d=\"m7.646 9.354-3.792 3.792a.5.5 0 0 0 .353.854h7.586a.5.5 0 0 0 .354-.854L8.354 9.354a.5.5 0 0 0-.708 0z\"/>\r\n                                                 <path d=\"M11.414 11H14.5a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h3.086l-1 1H1.5A1.5 1.5 0 0 1 0 10.5v-7A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v7a1.5 1.5 0 0 1-1.5 1.5h-2.086l-1-1z\"/>\r\n                                                </svg>\r\n                                                 <span >\r\n                                                 可视化系统\r\n                                                 </span>\r\n                                             </Link>\r\n                                            </div>\r\n                                            )}  \r\n                                        showArrow={false}\r\n                                        className=\"collapse-panel\">\r\n                                        </Panel>\r\n                                    </Collapse> */}\r\n                    </div>\r\n            </div>\r\n    );\r\n    }\r\n} \r\n\r\n/*\r\n*/\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\UserNav.jsx",["2318","2319","2320","2321","2322","2323"],"import React,{Component } from 'react'\r\nimport style from './style.scss'\r\nimport {Link} from 'react-router-dom'\r\nexport default class UserNav extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ul className=\"navbar-nav narbar-nav-self2\">\r\n                <Link to =\"ActionChoose\">\r\n                <li className = \"nav-item\">\r\n                <a className=\"nav-link link-container\" href=\"#\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-reply\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M6.598 5.013a.144.144 0 0 1 .202.134V6.3a.5.5 0 0 0 .5.5c.667 0 2.013.005 3.3.822.984.624 1.99 1.76 2.595 3.876-1.02-.983-2.185-1.516-3.205-1.799a8.74 8.74 0 0 0-1.921-.306 7.404 7.404 0 0 0-.798.008h-.013l-.005.001h-.001L7.3 9.9l-.05-.498a.5.5 0 0 0-.45.498v1.153c0 .108-.11.176-.202.134L2.614 8.254a.503.503 0 0 0-.042-.028.147.147 0 0 1 0-.252.499.499 0 0 0 .042-.028l3.984-2.933zM7.8 10.386c.068 0 .143.003.223.006.434.02 1.034.086 1.7.271 1.326.368 2.896 1.202 3.94 3.08a.5.5 0 0 0 .933-.305c-.464-3.71-1.886-5.662-3.46-6.66-1.245-.79-2.527-.942-3.336-.971v-.66a1.144 1.144 0 0 0-1.767-.96l-3.994 2.94a1.147 1.147 0 0 0 0 1.946l3.994 2.94a1.144 1.144 0 0 0 1.767-.96v-.667z\"/>\r\n                    </svg>\r\n                    返回</a>\r\n                </li>\r\n                </Link>\r\n               \r\n            <li className=\"nav-item \">\r\n\r\n                <a className=\"nav-link link-container\" href=\"#\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-twitch\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3.857 0L1 2.857v10.286h3.429V16l2.857-2.857H9.57L14.714 8V0H3.857zm9.714 7.429l-2.285 2.285H9l-2 2v-2H4.429V1.143h9.142v6.286z\"/>\r\n                <path d=\"M11.857 3.143h-1.143V6.57h1.143V3.143zm-3.143 0H7.571V6.57h1.143V3.143z\"/>\r\n                </svg>\r\n                  信息</a>\r\n            </li>\r\n            <Link to =\"UserLogin\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link link-container\" href=\"#\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-lines-fill\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm7 1.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm2 9a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5z\"/>\r\n                    </svg>\r\n                    用户  </a>\r\n            </li>\r\n            </Link>\r\n            <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle link-container\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-nut-fill\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M4.58 1a1 1 0 0 0-.868.504l-3.429 6a1 1 0 0 0 0 .992l3.429 6A1 1 0 0 0 4.58 15h6.84a1 1 0 0 0 .868-.504l3.428-6a1 1 0 0 0 0-.992l-3.428-6A1 1 0 0 0 11.42 1H4.58zm5.018 9.696a3 3 0 1 0-3-5.196 3 3 0 0 0 3 5.196z\"/>\r\n                  </svg>\r\n                  设置   </a>\r\n\r\n            </li>\r\n            </ul>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\Title.jsx",["2324"],"import  './style.scss'\r\nconst Title =(props) =>(\r\n        <ul class=\"nav\">\r\n            <li class=\"nav-item title\">\r\n              <a class=\"nav-link active\" href=\"#\">船舶液压设备智能监测系统</a>\r\n            </li>\r\n          </ul>\r\n)\r\nexport default Title;","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\Nav\\Logo.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Image.jsx",["2325","2326"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\layoutComponent\\component\\clock\\ClockUI.jsx",["2327"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\UploadFile.jsx",["2328"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\store\\TableTimeFrequencyreducer.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\tableConfig.js",["2329","2330"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\tableConfig.js",["2331","2332","2333","2334","2335"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\dataConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\ChooseModel\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\functionList.js",["2336","2337","2338","2339"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n\r\n/**\r\n * 获取模型列表\r\n */\r\nexport function _vibmodelList(page){\r\n  let returnData\r\n  let transformedID = store.getState().TagManagementreducer.vibTable.taskTable[0].transformedID \r\n  let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/modelSelectPage\",\r\n    // /POST /equip/vibration/modelSelectPage\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 6,\r\n      // \"queryParameter\": {\r\n      //   \"setId\": trainSetId\r\n      // }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n\r\n       const action ={\r\n        type:'vibModelList',\r\n        returnData,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * message\r\n */\r\nfunction _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n/**\r\n * 获取结果列表\r\n */\r\n export function _vibTaskpageonChange(page){\r\n  let returnDataList\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/sASP\",\r\n    // /POST /equip/vibration/mASP\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n        returnDataList=res.data.pageList\r\n       let totalCount = res.data.totalCount\r\n\r\n       const action ={\r\n        type:'vibStateValuateList',\r\n        returnDataList,\r\n        totalCount\r\n      }\r\n    store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 状态评估结果查看\r\n */\r\n export function _vibStateValuateResult(a){\r\n  console.log(a);\r\n  let record = []\r\n  record.push(a)\r\n  const action ={\r\n    type:\"vibStateValuateResult\",\r\n    record,\r\n  }\r\n\r\n  store.dispatch(action)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Store\\other.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\ChooseModel\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\store\\StateEvaluatereducer.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Modelvaluate\\store\\Modelvaluatereducer.js",["2340","2341","2342"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\store\\LifePredictionreducer.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DatasetConstruct\\store\\DatasetConstructReducer.js",["2343","2344"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TagManagement\\store\\TagManagementreducer.js",["2345","2346"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\store\\ModelCheckreducer.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\functionList.jsx",["2347","2348","2349"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelTtrainning\\store\\ModelTrainingreducer.js",["2350"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\store\\Preprocessingreducer.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\CreateLineChart.jsx",["2351","2352","2353"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\store\\DataProcessingreducer.js",["2354","2355"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\store\\DataStoragereducer.js",["2356","2357","2358","2359","2360","2361","2362"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\index.js",["2363","2364","2365","2366","2367"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelCheck\\component\\ChooseModel\\tableConfig.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\functionList.jsx",["2368","2369","2370","2371"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\TableTimeFrequency\\component\\functionList.jsx",["2372","2373"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\CreateLineChart.jsx",["2374","2375","2376","2377"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\functionList.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\component\\functionList.jsx",["2378","2379"],"import $, { data } from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// antd\r\nimport { message  } from 'antd';\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n\r\n\r\n/**\r\n * message\r\n */\r\nexport function _message(flag,text){\r\n  if(flag){\r\n    message.success(`${text}成功！`)\r\n  }else{\r\n    message.error(`${text}失败！`)\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 图像数据\r\n */\r\n/**\r\n * 模型评估\r\n */\r\nexport function _imgStateEvaluate(setid){\r\n  let testSetId  =store.getState().DatasetConstructReducer.testSetId\r\n  let flag = false\r\n\r\n\r\n  if(testSetId!=''){\r\n    //获取到测试集id\r\n    $.ajax({\r\n      type:\"post\",\r\n      //http://192.168.1.173:9001/equip/modal/imageTest?modelId=1315629167198416898&testSetId=1315628758564155393\r\n      url:hostPort+\"equip/modal/imageTest?modelId=\"+setid+'&testSetId='+testSetId,\r\n      dataType:'JSON',\r\n      contentType:\"application/json\",\r\n      async:false,\r\n      success:res=>{\r\n        if(res.flag){ \r\n          //评估完成刷新表格\r\n          flag = true\r\n          _imgModelList(1)\r\n          _message(flag,'模型评估')\r\n          const action = {\r\n            type:\"ImageModelValuateSubmit\",\r\n          }\r\n          store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n  })\r\n  }else{\r\n    _message(false,'获取训练集id')\r\n  }\r\n}\r\n/**\r\n * 模型列表刷新\r\n */\r\nexport function _imgModelList(page){\r\n      // console.log('refresh')\r\n    \r\n    let returnDataList = []\r\n    let setid = store.getState().DataStoragereducer.fileName[0].id\r\n\r\n        $.ajax({\r\n            type:\"post\",\r\n            url:hostPort+\"equip/modal/selectPage\",\r\n            contentType:\"application/json;charset=UTF-8\",\r\n            dataType:'JSON',\r\n            async:false, //改成异步  就不会锁住浏览器\r\n            data:JSON.stringify({\r\n              \"orderBy\": [\r\n                {\r\n                }\r\n              ],\r\n              \"pageNo\": page,\r\n              \"pageSize\": 10,\r\n              \"queryParameter\": {\r\n               \"setId\":setid,\r\n               \"method\": 0\r\n              }\r\n            }),\r\n            success:function(res){\r\n              if(res.flag){\r\n                // console.log(\"res\",res)\r\n              returnDataList = res.data.pageList\r\n              const action = {\r\n                type:\"ImagemodelList\",\r\n                returnDataList,\r\n              }\r\n              store.dispatch(action)\r\n              }\r\n            },\r\n            error:function(){\r\n            }\r\n          })\r\n       \r\n    }\r\n\r\n/**\r\n * 评估结果查询\r\n */\r\nexport function _imgStateEvaluateResult(page){\r\n  let returnDataList,totalCount\r\n  let setid = store.getState().StateEvaluatereducer.resultSetid\r\n  console.log(store.getState().StateEvaluatereducer.zipMsg);\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/image/testResultSelectPage\",\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false, //改成异步  就不会锁住浏览器\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 3,\r\n      \"queryParameter\": {\r\n         \"setId\": setid\r\n      }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n        // console.log(\"res\",res)\r\n        // if(page == 1){\r\n\r\n        // }else{\r\n        //   totalCount = store.getState().StateEvaluatereducer.imageStateValuate.totalCount\r\n        // }\r\n        totalCount = res.data.totalCount\r\n\r\n      returnDataList = res.data.pageList\r\n      const action = {\r\n        type:\"ImgStateValuateResult\",\r\n        returnDataList,\r\n        totalCount\r\n      }\r\n      store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\CreateChart.jsx",["2380","2381","2382"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\TreeIndex\\index.jsx",["2383","2384","2385","2386","2387","2388"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\functionList.jsx",["2389","2390","2391"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\AddCsv.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\AlgorithmManagement\\component\\functionList.jsx",["2392","2393","2394"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\CreateProcess\\CreateProcess.jsx",["2395","2396","2397","2398"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataProcessing\\ProcessingSteps\\index.jsx",["2399","2400"],"import React,{Component} from 'react'\r\n// antd\r\nimport { Steps, Button, message ,Empty} from 'antd';\r\nimport {LeftSquareTwoTone, RightSquareTwoTone,CheckSquareTwoTone } from '@ant-design/icons';\r\n\r\n// style \r\nimport '../component/style.scss'\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\nimport routeConfig from '@/routerComponent/routeConfig.js'\r\n\r\n// 模型训练\r\nimport TagManagement from '@/pages/TagManagement/index'\r\nimport DatasetConstruct from '@/pages/DatasetConstruct/index'\r\nimport ModelTraining from '@/pages/ModelTtrainning/index'\r\nimport ModelCheck from '@/pages/ModelCheck/index'\r\nimport AlgorithmManagement from '@/pages/AlgorithmManagement/index'\r\nimport Modelvaluate from '@/pages/Modelvaluate/index'\r\n// 模型应用\r\nimport AbnormalPerception from '@/pages/AbnormalPerception/index'\r\nimport StateEvaluate from '@/pages/StateEvaluate/index'\r\nimport Troubleshooting from '@/pages/Troubleshooting/index'\r\nimport LifePrediction from '@/pages/LifePrediction/index'\r\n// 数据挖掘\r\nimport Preprocessing from '@/pages/Preprocessing/index' //数据处理\r\nimport FeatureExtraction from '@/pages/FeatureExtraction/index'\r\nimport FeatureScreening from '@/pages/FeatureScreening/index'\r\nimport TableTimeFrequency from '@/pages/TableTimeFrequency/index'\r\nconst { Step } = Steps;\r\n\r\nclass ProcessingSteps extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      current:0,\r\n      cards:store.getState().DataProcessingreducer.cards\r\n    }\r\n    console.log(this.state.card);\r\n\r\n  }\r\n\r\n\r\n\r\n  // 下一步\r\n  next = () => {\r\n    this.setState({\r\n      current:this.state.current+1\r\n    })\r\n  };\r\n// 上一步\r\n  prev = () => {\r\n    this.setState({\r\n      current:this.state.current-1\r\n    })\r\n  };\r\n\r\n  createContent = (title) =>{\r\n    console.log(title);\r\n    let content \r\n    switch (title) {\r\n      case '标签管理':\r\n          content = (\r\n          <div className ='component-content' >\r\n            <TagManagement/>\r\n            </div>);\r\n          break; \r\n      case \"模型训练\":\r\n          content = (\r\n          <div   className ='component-content' >\r\n            <ModelTraining/>\r\n            </div>);\r\n          break; \r\n      case \"数据预处理\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <Preprocessing/>\r\n            </div>);\r\n      break; \r\n      case \"数据集构建\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <DatasetConstruct/>\r\n            </div>);\r\n      break; \r\n      case \"模型校验\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <ModelCheck/>\r\n            </div>);\r\n      break; \r\n      case \"算法管理\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <AlgorithmManagement/>\r\n            </div>);\r\n      break; \r\n      case \"模型评估\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <Modelvaluate/>\r\n            </div>);\r\n      break; \r\n      case \"异常感知\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <AbnormalPerception/>\r\n            </div>);\r\n      break; \r\n      case \"状态评估\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <StateEvaluate/>\r\n            </div>);\r\n      break; \r\n      case \"故障诊断\":\r\n        content = (\r\n          <div className ='component-content'  >\r\n            <Troubleshooting/>\r\n            </div>);\r\n      break; \r\n      case \"寿命预测\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <LifePrediction/>\r\n            </div>);\r\n      break; \r\n      case \"特征提取\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <FeatureExtraction/>\r\n            </div>);\r\n      break; \r\n      case \"特征筛选\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <FeatureScreening/>\r\n            </div>);\r\n      break; \r\n      case \"时频图像转换\":\r\n        content = (\r\n          <div  className ='component-content' >\r\n            <TableTimeFrequency/>\r\n            </div>);\r\n      break; \r\n      default: \r\n          content = (\r\n            <div  className ='component-content'><Empty></Empty></div>\r\n          );\r\n  } \r\n  return content;      \r\n\r\n  }\r\n  render(){\r\n    const {current,cards} = this.state;\r\n    return (\r\n      <>\r\n      <div className = \"steps-container\">\r\n        <Steps current={current} style = {{padding:\"20px 10px 15px 10px\",backgroundColor:\"#fff\"}}   type=\"navigation\"> \r\n          {\r\n          cards.map(item=>(\r\n            <Step key={item.title} title={item.title} />\r\n          ))\r\n          }\r\n        </Steps>\r\n\r\n        <div className=\"steps-action\">\r\n        {current > 0 && (\r\n            <LeftSquareTwoTone twoToneColor=\"#284978\"   style={{fontSize:\"30px\", margin: '0 8px' }} onClick={this.prev}/>\r\n              \r\n            \r\n          )}\r\n          {current < cards.length - 1 && (\r\n            <RightSquareTwoTone  twoToneColor=\"#284978\"  style = {{fontSize:\"30px\"}}  onClick={this.next}/>\r\n           \r\n          )}\r\n          {current === cards.length - 1 && (\r\n            <CheckSquareTwoTone  twoToneColor=\"#52c41a\" style = {{fontSize:\"30px\"}} onClick={() => message.success('流程完成！')}/>\r\n          \r\n          )}\r\n      \r\n        </div>\r\n   \r\n        {/* <div className=\"steps-content\">{resultArr[current].content}</div> */}\r\n      \r\n      </div>\r\n      <div className=\"steps-content\">\r\n            {this.createContent(cards[current].title)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default ProcessingSteps;  ","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\LifePrediction\\component\\chart.config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\TreeIndex\\functionList.jsx",["2401","2402","2403"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\index.js",["2404","2405"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\ChooseFile.jsx",["2406"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\index.js",["2407","2408"],"import React, { Component } from 'react';\r\n\r\n// antd\r\nimport {Button, Table, Tag, Space ,Modal} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n// columns\r\nimport tableColumns from './tableConfig'\r\n// store\r\nimport store from '@/pages/Store/index'\r\n// 组件\r\nimport UploadFile from './TabTable/components/UploadFile.jsx';\r\n// style\r\nimport '../index.scss'\r\n\r\nclass  Table1 extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      //表格勾选的id\r\n      selectedRowKeys: [],\r\n      dataSource: store.getState().DataStoragereducer.imagedata.imageTable,\r\n      visible:false,\r\n    };\r\n    store.subscribe(this.handleStoreChange);\r\n\r\n  }\r\n\r\n  handleStoreChange=()=>{\r\n    this.setState({\r\n      dataSource: store.getState().DataStoragereducer.imagedata.imageTable,\r\n      treeKey: store.getState().DataStoragereducer.treeKey,\r\n    })\r\n  }\r\n    /**\r\n   * 打开输入数据集信息弹窗\r\n   */\r\n   onOpen=()=>{\r\n    this.setState({\r\n      visible:true,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭弹窗\r\n   */\r\n  onClose=()=>{\r\n    this.setState({\r\n      visible:false,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {dataSource,visible,treeKey} = this.state;\r\n    return(\r\n      <div style ={{margin:\"0 5px 0 5px\"}}>\r\n      <Button className = \"normalBtn\" onClick = {this.onOpen}  icon={<UploadOutlined />}> 上传文件</Button>\r\n      <Table columns={tableColumns} dataSource={dataSource} />\r\n      <Modal\r\n      destroyOnClose  = {true}\r\n        title=\"上传文件\" \r\n        visible ={visible}\r\n        width = {320}\r\n        onCancel = {this.onClose}\r\n        footer={null}\r\n      >\r\n        <UploadFile closeModal ={this.onClose} treeKey ={treeKey} disabled={false}></UploadFile>\r\n      </Modal>\r\n  </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default Table1;\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\tableConfig.js",["2409","2410"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\store\\actionType.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\CheckZip.jsx",["2411"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\DeleteBalloon.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateLine.jsx",["2412"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table1\\TabTable\\components\\EditDialog.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\TreeIndex\\index.jsx",["2413","2414","2415","2416","2417","2418"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\functionList.js",["2419","2420","2421","2422","2423","2424"],["2425","2426"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\functionList.jsx",["2427","2428","2429"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\ViewImg.jsx",["2430"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\tableConfig.js",["2431","2432","2433","2434","2435","2436"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\functionList.jsx",["2437"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table2\\TabTable\\components\\AddImage.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CheckDialog.jsx",["2438"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\DeleteBalloon.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\CreateChart.jsx",["2439","2440","2441"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\functionList.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Vibration\\Table2\\TabTable\\components\\chart.config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\CreateLineChart.jsx",["2442","2443","2444","2445"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Sequence\\Table1\\TabTable\\components\\chart.config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\UploadFile.jsx",["2446"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\tableConfig.js",["2447","2448"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\ChooseFile.jsx",["2449"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\CheckZip.jsx",["2450"],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\DeleteBalloon.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\DataStorage\\Image\\Table1\\TabTable\\components\\EditDialog.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\StateEvaluate\\vibration\\component\\chart.config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Preprocessing\\component\\sequence\\chart.config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\CreateChartDemo.jsx",["2451"],"import React, { Component } from 'react';\r\n\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\n// 引入折线图\r\nimport 'echarts/lib/chart/line'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\n\r\nlet  data  = new Array(10).fill(0),  data2  = new Array(10).fill(0), data3 = new Array(10).fill(0),now = 0,oneDay = 1\r\nlet value = Math.random() * 1000;\r\nfunction randomData() {\r\n    now = now + 1;\r\n    value = value + Math.random() * 10 - 10;\r\n    return {\r\n        name: now.toString(),\r\n        value: [\r\n            now,\r\n            Math.random() * 100\r\n        ]\r\n    }\r\n}\r\n \r\nfunction randomData2() {\r\n    value = value + Math.random() * 21 - 10;\r\n    return {\r\n        name: now.toString(),\r\n        value: [\r\n            now,\r\n            Math.random() * 100\r\n        ]\r\n    }\r\n}\r\nfunction randomData3() {\r\n    value = value + Math.random() *15 - 10;\r\n    return {\r\n        name: now.toString(),\r\n        value: [\r\n            now,\r\n            Math.random() * 100\r\n        ]\r\n    }\r\n}\r\n\r\nclass EchartsTest extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state= {\r\n            now:0,\r\n            data :[], \r\n            data2 :[]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('chart-container'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            backgroundColor:'rgba(2, 65, 145, 0)',\r\n            color:[\r\n\r\n            ],\r\n            title: {\r\n                text: '振动信号',\r\n                textStyle:{\r\n                    color:\"#ffffff\",\r\n                    fontWeight:\"bolder\",\r\n                }\r\n            },\r\n            tooltip: { //跟随鼠标显示数值\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['传感器1', '传感器2', '传感器3']\r\n            },\r\n                    xAxis: {\r\n                        type: 'value',\r\n                        nameTextStyle:{\r\n                            color:\"#ffffff\"\r\n                        },\r\n                        axisLine:{\r\n                            lineStyle:{\r\n                                color:\"#ffffff\"\r\n                            }\r\n                        }\r\n                        // data:data\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value',\r\n                        splitLine:{show: false},//去除网格线\r\n                        nameTextStyle:{\r\n                            color:\"#ffffff\"\r\n                        },\r\n                        axisLine:{\r\n                            lineStyle:{\r\n                                color:\"#ffffff\"\r\n                            }\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        name: '传感器1',\r\n                        type: 'line',\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data: data,\r\n                        lineStyle:{\r\n                            width:1,\r\n                            color:\"#71a6e2\"\r\n                        }\r\n                            },\r\n                        {\r\n                        name: '传感器2',\r\n                        type: 'line',\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data: data2,\r\n                        lineStyle:{\r\n                            width:1,\r\n                            color:\"#b5ceea\",\r\n\r\n                        },\r\n                    },\r\n                    \r\n                    {\r\n                        name: '传感器3',\r\n                        type: 'line',\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data: data2,\r\n                        lineStyle:{\r\n                            width:1,\r\n                            color:\"#b36868\",\r\n\r\n                        }\r\n                    },\r\n                        // areaStyle:{\r\n                        //     normal:{\r\n                        //        //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n                        //         color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{ \r\n \r\n                        //             offset: 0,\r\n                        //             color: 'rgba(80,141,255,0.39)'\r\n                        //         }, {\r\n                        //             offset: .34,\r\n                        //             color: 'rgba(56,155,255,0.25)'\r\n                        //         },{\r\n                        //             offset: 1,\r\n                        //             color: 'rgba(38,197,254,0.00)'\r\n                        //         }])\r\n \r\n                        //     }\r\n                        // },\r\n                ],\r\n                   \r\n        });\r\n \r\n\r\n\r\n     this.timer =   setInterval(function () {\r\n            \r\n                for (var i = 0; i < 1; i++) {\r\n                    if(data.length <20){\r\n                        data.push(randomData());\r\n                        data2.push(randomData2());\r\n                        data3.push(randomData3());\r\n                    }else{\r\n                        data.shift();\r\n                        data.push(randomData());\r\n                        data2.shift();\r\n                        data2.push(randomData2());\r\n                        data3.shift();\r\n                        data3.push(randomData3());\r\n                    }\r\n                    // data.shift();\r\n                    // data.push(randomData());\r\n                    // data2.shift();\r\n                    // data2.push(randomData2());\r\n                    // data3.shift();\r\n                    // data3.push(randomData3());\r\n                }\r\n            \r\n                myChart.setOption({\r\n                series: [{\r\n                    name: '传感器1',\r\n                    type: 'line',\r\n                    showSymbol: false,\r\n                    hoverAnimation: false,\r\n                    data: data,\r\n                    lineStyle:{\r\n                        width:1,\r\n                        color:\"#71a6e2\"\r\n                    }\r\n                        },\r\n                    {\r\n                            name: '传感器2',\r\n                            type: 'line',\r\n                            showSymbol: false,\r\n                            hoverAnimation: false,\r\n                            data: data2,\r\n                            lineStyle:{\r\n                                width:1,\r\n                                color:\"#b5ceea\",\r\n    \r\n                            }\r\n                    },\r\n                    {\r\n                        name: '传感器3',\r\n                        type: 'line',\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data: data3,\r\n                        lineStyle:{\r\n                            width:1,\r\n                            color:\"#b36868\",\r\n\r\n                        }\r\n                    }\r\n                    ]\r\n                });\r\n                myChart.setOption({\r\n                    xAxis: [{\r\n                    type: 'value',\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    nameTextStyle:{\r\n                        color:\"#ffffff\"\r\n                    },\r\n                    axisLine:{\r\n                        lineStyle:{\r\n                            color:\"#ffffff\"\r\n                        }\r\n                    },\r\n                    min: +now,\r\n                    max: +10\r\n                }]\r\n                });\r\n            \r\n            }, 3000);\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);   \r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"chart-container\" style={{width:\"350px\", height: 450 }}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EchartsTest;\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\CreateRadar.jsx",["2452","2453"],"import {Component} from 'react';\r\n\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\n// 引入折线图\r\nimport 'echarts/lib/chart/radar'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\n\r\nimport {radarData} from './chart-config'\r\nimport {dataBJ} from './data-config'\r\n\r\n\r\nvar lineStyle = {\r\n    normal: {\r\n        width: 1,\r\n        opacity: 0.5\r\n    }\r\n};\r\n\r\nlet dataConfig = [ [55,9,56,0.46,18,6,1],  \r\n[25,11,21,0.65,34,9,2],\r\n[56,7,63,0.3,14,5,3],\r\n[33,7,29,0.33,16,6,4],\r\n[42,24,44,0.76,40,16,5],];\r\nlet data = dataConfig;\r\nlet now = 4;\r\nfunction randomData() {\r\n    if(now == dataBJ.length-1){\r\n        now = 0;\r\n    }else{\r\n        now = now + 1;\r\n    }\r\n    let arr = dataBJ[now]\r\n    return arr;\r\n}\r\nexport default class CreateRadar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    componentDidMount(){\r\n        var myChart = echarts.init(document.getElementById('radar-container'));\r\n        let series = {\r\n            name: '传感器1',\r\n            type: 'radar',\r\n            lineStyle: lineStyle,\r\n            data: data,\r\n            symbol: 'none',\r\n            itemStyle: {\r\n                color: '#61a2ce'\r\n            },\r\n            areaStyle: {\r\n                opacity: 0.1\r\n            }\r\n        }\r\n        radarData.series = series;\r\n          // 绘制图表\r\n        myChart.setOption(radarData)\r\n\r\n        this.timer = setInterval(function(){\r\n            for (var i = 0; i < 1; i++) {\r\n                data.shift();\r\n                data.push(randomData());\r\n            }\r\n            myChart.setOption({\r\n                series:{\r\n                    name: '传感器1',\r\n                    type: 'radar',\r\n                    lineStyle: lineStyle,\r\n                    data: data,\r\n                    symbol: 'none',\r\n                    itemStyle: {\r\n                        color: '#61a2ce'\r\n                    },\r\n                    areaStyle: {\r\n                        opacity: 0.1\r\n                    }\r\n                }\r\n            })\r\n        },3000)\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);   \r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"radar-container\" style={{width:\"100%\", height: 450 }}></div>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\chart-config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\data-config.js",["2454","2455"],"var dataBJ = [\r\n    [55,9,56,0.46,18,6,1],\r\n    [25,11,21,0.65,34,9,2],\r\n    [56,7,63,0.3,14,5,3],\r\n    [33,7,29,0.33,16,6,4],\r\n    [42,24,44,0.76,40,16,5],\r\n    [82,58,90,1.77,68,33,6],\r\n    [74,49,77,1.46,48,27,7],\r\n    [78,55,80,1.29,59,29,8],\r\n    [267,216,280,4.8,108,64,9],\r\n    [185,127,216,2.52,61,27,10],\r\n    [39,19,38,0.57,31,15,11],\r\n    [41,11,40,0.43,21,7,12],\r\n    [64,38,74,1.04,46,22,13],\r\n    [108,79,120,1.7,75,41,14],\r\n    [108,63,116,1.48,44,26,15],\r\n    [33,6,29,0.34,13,5,16],\r\n    [94,66,110,1.54,62,31,17],\r\n    [186,142,192,3.88,93,79,18],\r\n    [57,31,54,0.96,32,14,19],\r\n    [22,8,17,0.48,23,10,20],\r\n    [39,15,36,0.61,29,13,21],\r\n    [94,69,114,2.08,73,39,22],\r\n    [99,73,110,2.43,76,48,23],\r\n    [31,12,30,0.5,32,16,24],\r\n    [42,27,43,1,53,22,25],\r\n    [154,117,157,3.05,92,58,26],\r\n    [234,185,230,4.09,123,69,27],\r\n    [160,120,186,2.77,91,50,28],\r\n    [134,96,165,2.76,83,41,29],\r\n    [52,24,60,1.03,50,21,30],\r\n    [46,5,49,0.28,10,6,31]\r\n\r\n    [26,37,27,1.163,27,13,1],\r\n    [85,62,71,1.195,60,8,2],\r\n    [78,38,74,1.363,37,7,3],\r\n    [21,21,36,0.634,40,9,4],\r\n    [41,42,46,0.915,81,13,5],\r\n    [56,52,69,1.067,92,16,6],\r\n    [64,30,28,0.924,51,2,7],\r\n    [55,48,74,1.236,75,26,8],\r\n    [76,85,113,1.237,114,27,9],\r\n    [91,81,104,1.041,56,40,10],\r\n    [84,39,60,0.964,25,11,11],\r\n    [64,51,101,0.862,58,23,12],\r\n    [70,69,120,1.198,65,36,13],\r\n    [77,105,178,2.549,64,16,14],\r\n    [109,68,87,0.996,74,29,15],\r\n    [73,68,97,0.905,51,34,16],\r\n    [54,27,47,0.592,53,12,17],\r\n    [51,61,97,0.811,65,19,18],\r\n    [91,71,121,1.374,43,18,19],\r\n    [73,102,182,2.787,44,19,20],\r\n    [73,50,76,0.717,31,20,21],\r\n    [84,94,140,2.238,68,18,22],\r\n    [93,77,104,1.165,53,7,23],\r\n    [99,130,227,3.97,55,15,24],\r\n    [146,84,139,1.094,40,17,25],\r\n    [113,108,137,1.481,48,15,26],\r\n    [81,48,62,1.619,26,3,27],\r\n    [56,48,68,1.336,37,9,28],\r\n    [82,92,174,3.29,0,13,29],\r\n    [106,116,188,3.628,101,16,30],\r\n    [118,50,0,1.383,76,11,31]\r\n\r\n    [91,45,125,0.82,34,23,1],\r\n    [65,27,78,0.86,45,29,2],\r\n    [83,60,84,1.09,73,27,3],\r\n    [109,81,121,1.28,68,51,4],\r\n    [106,77,114,1.07,55,51,5],\r\n    [109,81,121,1.28,68,51,6],\r\n    [106,77,114,1.07,55,51,7],\r\n    [89,65,78,0.86,51,26,8],\r\n    [53,33,47,0.64,50,17,9],\r\n    [80,55,80,1.01,75,24,10],\r\n    [117,81,124,1.03,45,24,11],\r\n    [99,71,142,1.1,62,42,12],\r\n    [95,69,130,1.28,74,50,13],\r\n    [116,87,131,1.47,84,40,14],\r\n    [108,80,121,1.3,85,37,15],\r\n    [134,83,167,1.16,57,43,16],\r\n    [79,43,107,1.05,59,37,17],\r\n    [71,46,89,0.86,64,25,18],\r\n    [97,71,113,1.17,88,31,19],\r\n    [84,57,91,0.85,55,31,20],\r\n    [87,63,101,0.9,56,41,21],\r\n    [104,77,119,1.09,73,48,22],\r\n    [87,62,100,1,72,28,23],\r\n    [168,128,172,1.49,97,56,24],\r\n    [65,45,51,0.74,39,17,25],\r\n    [39,24,38,0.61,47,17,26],\r\n    [39,24,39,0.59,50,19,27],\r\n    [93,68,96,1.05,79,29,28],\r\n    [188,143,197,1.66,99,51,29],\r\n    [174,131,174,1.55,108,50,30],\r\n    [187,143,201,1.39,89,53,31]\r\n];\r\n\r\n\r\nexport {dataBJ};","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\index.jsx",["2456","2457","2458"],"import React,{Component} from 'react';\r\n// antd\r\nimport { Tabs } from 'antd';\r\n\r\n// component\r\nimport ModelTable from './component/ModelTable';\r\n\r\n// style\r\nimport './style.scss'\r\n\r\n// data-config\r\nimport { imgColumns,sequenceColumns,vibColumns } from './component/data.config';\r\n\r\n// function\r\nimport {getModelList,_vibmodelList,_vibModelDelete,_modelDelete,_vibModelReName} from './component/functionList';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class ModelManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            imgModel:[],\r\n            imgTotal:0,\r\n            sequenceTotal:0,\r\n            sequenceModel:[],\r\n            vibModel:[],\r\n            vibTotal:0,\r\n            visible:false,\r\n            totalCount:0,\r\n            selectType:\"1\", //默认振动数据\r\n            dataSource:[],\r\n            // column:vibColumns,\r\n            selectedRowKeys:\"\",//表格选择的id\r\n            selectedRows:\"\",//表格选择的数据\r\n        }\r\n        // this.onSelectModel = this.onSelectModel.bind(this); // 确认模型选择;\r\n        this.onModelDelete = this.onModelDelete.bind(this); //删除模型\r\n        this.onPageChange  = this.onPageChange.bind(this); //表格翻页\r\n        this.onModelRename = this.onModelRename.bind(this); //模型重命名\r\n    }\r\n\r\n    componentDidMount(){\r\n        let imgModel,sequenceModel,vibModel;\r\n        imgModel =  getModelList(1,0); //查询图像数据模型 0\r\n        vibModel = _vibmodelList(1); // 查询振动数据模型  1\r\n        sequenceModel = getModelList(1,2); //查询时序数据模型  2\r\n        this.setState({\r\n           imgModel:imgModel.pageList,\r\n           imgTotal:imgModel.totalCount,\r\n           sequenceModel:sequenceModel.pageList,\r\n           sequenceTotal:sequenceModel.totalCount,\r\n           vibModel:vibModel.pageList,\r\n           vibTotal : vibModel.totalCount,\r\n        })\r\n    }\r\n\r\n/** 表格翻页 */\r\n    onPageChange(page,type){\r\n        // console.log(\"jfoweijfowjeofjowe\");\r\n        let imgModel,sequenceModel,vibModel;\r\n        switch(type){\r\n          \r\n            case 0 :\r\n                imgModel =  getModelList(page,0); //查询图像数据模型 0\r\n                this.setState({\r\n                    imgModel:imgModel.pageList,\r\n                    imgTotal:imgModel.totalCount,\r\n                })\r\n                break;\r\n            case 1:\r\n                vibModel = _vibmodelList(page); // 查询振动数据模型  1\r\n                this.setState({\r\n                    vibModel:vibModel.pageList,\r\n                    vibTotal : vibModel.totalCount,\r\n                })\r\n                break;\r\n            case 2:\r\n                sequenceModel = getModelList(page,2); //查询时序数据模型  2\r\n                this.setState({\r\n                    sequenceModel:sequenceModel.pageList,\r\n                    sequenceTotal:sequenceModel.totalCount,\r\n                })\r\n                break;\r\n            default:\r\n                imgModel =  getModelList(page,0); //查询图像数据模型 0\r\n                this.setState({\r\n                    imgModel:imgModel.pageList,\r\n                    imgTotal:imgModel.totalCount,\r\n                })\r\n        }\r\n    }\r\n\r\n/** 删除模型 */\r\n    onModelDelete(id,name,type){\r\n        let flag = false;\r\n        if(type == 1){\r\n           flag =  _vibModelReName(id,name);\r\n        }else{\r\n           flag =  _modelDelete(id);\r\n        };\r\n        if(flag){\r\n            this.onPageChange(1,type)\r\n        }\r\n        \r\n    }\r\n/** 模型重命名 */\r\n    onModelRename(id,name,type){\r\n        let flag = false;\r\n        if(type == 1){\r\n           flag =  _vibModelReName(id,name);\r\n        }else{\r\n        //    flag =  _modelDelete(id);\r\n        };\r\n        if(flag){\r\n            this.onPageChange(1,type)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // const {...arg} = this.state;\r\n        const arr = [\r\n            {\r\n                title:\"图像模型\" ,\r\n                key:\"0\",\r\n                dataSource : this.state.imgModel,\r\n                totalCount:this.state.imgTotal,\r\n                columns:imgColumns,\r\n                PageChange:(page)=>{\r\n                    this.onPageChange(page,0)\r\n                },\r\n                ModelDelete:(id)=>{\r\n                    this.onModelDelete(id,0)\r\n                },\r\n                ModelRename:(id,name)=>{\r\n                    this.onModelRename(id,name,0)\r\n                },\r\n                \r\n            },\r\n            {\r\n                title:\"振动模型\" ,\r\n                key:\"1\",\r\n                dataSource : this.state.vibModel,\r\n                totalCount:this.state.imgTotal,\r\n                columns:vibColumns,\r\n                PageChange:(page)=>{\r\n                    this.onPageChange(page,1)\r\n                },\r\n                ModelDelete:(id)=>{\r\n                    this.onModelDelete(id,1)\r\n                },\r\n                ModelRename:(id,name)=>{\r\n                    this.onModelRename(id,name,1)\r\n                },\r\n            },\r\n            {\r\n                title:\"时序模型\" ,\r\n                key:\"2\",\r\n                dataSource : this.state.sequenceModel,\r\n                totalCount:this.state.vibTotal,\r\n                columns:sequenceColumns,\r\n                PageChange:(page)=>{\r\n                    this.onPageChange(page,2)\r\n                },\r\n                ModelDelete:(id)=>{\r\n                    this.onModelDelete(id,2)\r\n                },\r\n                ModelRename:(id,name)=>{\r\n                    this.onModelRename(id,name,2)\r\n                },\r\n            }\r\n        ]\r\n        return(\r\n            <div>\r\n            <Tabs defaultActiveKey=\"0\" className = {\"model-management\"}>\r\n                {\r\n                    arr.map((item,index)=>(\r\n                        <TabPane tab={item.title} key={item.key}>\r\n                            <ModelTable {...item}></ModelTable>\r\n                        </TabPane>\r\n                    ))\r\n                }\r\n            </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ModelMsg\\ModelChoose.jsx",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\ModelMsg\\functionList.js",["2459"],"import $ from 'jquery'\r\nimport {hostPort} from '@/Common'\r\n\r\n// store\r\nimport store from '@/pages/Store/index'\r\n\r\n\r\n\r\nexport function getModelList(page,method){\r\n    let returnData\r\n    $.ajax({\r\n      type:\"post\",\r\n      url:hostPort+\"equip/modal/selectPage\",\r\n      contentType:\"application/json;charset=UTF-8\",\r\n      dataType:'JSON',\r\n      async:false,\r\n      data:JSON.stringify({\r\n        \"pageNo\": page,\r\n        \"pageSize\": 10,\r\n        \"queryParameter\": {\r\n          \"method\": method\r\n        }\r\n      }),\r\n      success:function(res){\r\n        if(res.flag){\r\n         returnData=res.data\r\n    //      const action ={\r\n    //       type:'sequenceModelList',\r\n    //       returnData,\r\n    //     }\r\n    //   store.dispatch(action)\r\n        }\r\n      },\r\n      error:function(){\r\n      }\r\n    })\r\n\r\n    return returnData;\r\n}\r\n\r\n/**\r\n * 获取振动模型列表\r\n */\r\n export function _vibmodelList(page){\r\n  let returnData\r\n  // let trainSetId = store.getState().DatasetConstructReducer.trainSetId\r\n  $.ajax({\r\n    type:\"post\",\r\n    url:hostPort+\"equip/vibration/modelSelectPage\",\r\n    // /POST /equip/vibration/modelSelectPage\r\n    contentType:\"application/json;charset=UTF-8\",\r\n    dataType:'JSON',\r\n    async:false,\r\n    data:JSON.stringify({\r\n      \"pageNo\": page,\r\n      \"pageSize\": 10,\r\n      // \"queryParameter\": {\r\n      //   \"setId\": trainSetId\r\n      // }\r\n    }),\r\n    success:function(res){\r\n      if(res.flag){\r\n       returnData=res.data\r\n      //  let totalCount = res.data.totalCount\r\n    //    const action ={\r\n    //     type:'vibModelList',\r\n    //     returnData,\r\n    //     totalCount\r\n    //   }\r\n    // store.dispatch(action)\r\n      }\r\n    },\r\n    error:function(){\r\n    }\r\n  })\r\n  return returnData;\r\n}\r\n\r\nconst  vibColumns = [\r\n  {\r\n    title: '模型',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '训练批次',\r\n    dataIndex: 'minNum',\r\n    key: 'minNum',\r\n  },\r\n  {\r\n    title: '学习率',\r\n    dataIndex: 'lr',\r\n    key: 'lr',\r\n  },\r\n  {\r\n    title: '迭代次数',\r\n    dataIndex: 'iterNum',\r\n    key: 'iterNum',\r\n  },\r\n  {\r\n    title: '训练状态',\r\n    dataIndex: 'state',\r\n    key: 'state',\r\n  }\r\n]\r\n\r\nconst sequenceColumns = [\r\n  {\r\n    title: '模型',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '神经元个数',\r\n    dataIndex: 'neuronsNumber',\r\n    key: 'neuronsNumber',\r\n  },\r\n  {\r\n    title: '网络层数',\r\n    dataIndex: 'netNum',\r\n    key: 'netNum',\r\n  },\r\n  {\r\n    title: 'dropOut',\r\n    dataIndex: 'dropOut',\r\n    key: 'dropOut',\r\n  },\r\n  {\r\n    title: '迭代次数',\r\n    dataIndex: 'numEpochs',\r\n    key: 'numEpochs',\r\n  },\r\n  {\r\n    title: '学习率',\r\n    dataIndex: 'learningRate',\r\n    key: 'learningRate',\r\n  },\r\n];\r\n\r\nconst imgColumns = [\r\n  {\r\n    title: '模型',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: '分类器学习率',\r\n    dataIndex: 'classifierLr',\r\n    key: 'classifierLr',\r\n  },\r\n  {\r\n    title: 'epochLength',\r\n    dataIndex: 'epochLength',\r\n    key: 'epochLength',\r\n  },\r\n  {\r\n    title: '迭代次数',\r\n    dataIndex: 'numEpochs',\r\n    key: 'numEpochs',\r\n  },\r\n  {\r\n    title: 'rpn学习率',\r\n    dataIndex: 'rpnLr',\r\n    key: 'rpnLr',\r\n  }\r\n];\r\n\r\nexport {imgColumns,sequenceColumns,vibColumns };","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\component\\ModelTable.jsx",["2460","2461","2462"],"import React,{Component} from 'react';\r\n\r\n// antd\r\nimport {Table,Pagination,Button,Input,Modal,message} from 'antd';\r\n\r\n// style \r\nimport \"../style.scss\"\r\nconst { Column, ColumnGroup } = Table;\r\nexport default class ModelTable extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state= {\r\n            selectedRowKeys:\"\",//表格选择的id\r\n            selectedRows:\"\",//表格选择的数据\r\n            visible:false,\r\n            inputName:\"\",\r\n        }\r\n        this.onSelectChange = this.onSelectChange.bind(this);  // 表格选择\r\n        this.pageonChange = this.pageonChange.bind(this); // 表格翻页\r\n        this.reName = this.reName.bind(this); //模型重命名\r\n        this.deleteModel = this.deleteModel.bind(this); //删除模型\r\n        this.onOpen = this.onOpen.bind(this); //打开窗口\r\n        this.onClose = this.onClose.bind(this); //关闭窗口\r\n        this.InputChange = this.InputChange.bind(this); //输入改变\r\n    }\r\n\r\n/** 表格选择 */\r\n    onSelectChange(selectedRowKeys,selectedRows){\r\n        this.setState({ selectedRowKeys ,selectedRows});\r\n        // this.props.SelectChange(selectedRows) ; \r\n    }\r\n\r\n/** 表格翻页 */\r\n    pageonChange(page){\r\n        this.props.PageChange(page);\r\n    }\r\n\r\n/** 删除模型 */\r\n    deleteModel(text,record){\r\n        this.props.ModelDelete(record.id);\r\n    }\r\n/** 重命名模型 */\r\n    reName(){\r\n        if(this.state.inputName == \"\"){\r\n            message.error(\"请输入模型名称\");\r\n        }else{\r\n            this.props.ModelRename(this.state.renameModelID,this.state.inputName);\r\n            this.onClose();\r\n        }\r\n    }\r\n\r\n/** 打开窗口 */\r\n    onOpen(text, record){\r\n        console.log(record);\r\n        this.setState({\r\n            visible:true,\r\n            renameModelID:record.id,\r\n        })\r\n    }\r\n\r\n/** 关闭窗口 */\r\n    onClose(){\r\n        // console.log('onclose');\r\n        this.setState({\r\n            visible:false,\r\n        })\r\n    }\r\n/** 输入改变 */\r\n    InputChange(value){\r\n        console.log(value);\r\n        this.setState({\r\n            inputName:value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {selectedRowKeys,visible,inputName} = this.state;\r\n\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n        };\r\n        return(\r\n            <div>\r\n                <Table \r\n                    dataSource = {this.props.dataSource}\r\n                    // columns = {this.props.columns}\r\n                    rowSelection={{\r\n                        ...rowSelection,\r\n                        // type:\"radio\"\r\n                    }}\r\n                    rowKey = {\"id\"}\r\n                    pagination = {false}\r\n                    bordered ={false}\r\n                    >\r\n                    {this.props.columns.map((item,index)=>{\r\n                        return(\r\n                            <Column title={item.title} dataIndex={item.dataIndex} key={item.key} />\r\n                        )\r\n                    })}\r\n                    <Column title=\"操作\" dataIndex=\"action\" key=\"action\"\r\n                         render={(text, record) => (\r\n                            <>\r\n                              <Button size = {\"small\"}   className =\"normalBtn\"  onClick = {()=>{this.onOpen(text, record)} }>重命名</Button>\r\n                              <Button size = {\"small\"}  type=\"danger\" className =\"deleteBtn\"  onClick = {()=>{this.deleteModel(text, record)} }>删除模型</Button>\r\n                            </>\r\n                          )}\r\n                    ></Column>\r\n                    \r\n                </Table>\r\n                <Pagination\r\n                    onChange = {this.pageonChange}\r\n                    showSizeChanger\r\n                    defaultCurrent={1}\r\n                    total={this.props.totalCount}\r\n                ></Pagination>\r\n                <Modal\r\n                    visible ={visible}\r\n                    onCancel = {this.onClose}\r\n                    title= {\"模型重命名\"}\r\n                    footer = {\r\n                        <Button onClick={this.reName}  className =\"normalBtn\" > 重命名</Button>\r\n                    }\r\n                >\r\n                    <Input  onChange = {this.InputChange} width ={200}/> \r\n                            {/* 1241654 */}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\component\\data.config.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\ModelManagement\\component\\functionList.js",[],"D:\\前端学习\\devproject\\demo - 副本 - 副本\\src\\pages\\Visualization\\component\\charts\\ModelBar.jsx",["2463"],{"ruleId":"2464","severity":1,"message":"2465","line":16,"column":65,"nodeType":"2466","messageId":"2467","endLine":16,"endColumn":67},{"ruleId":"2468","replacedBy":"2469"},{"ruleId":"2470","replacedBy":"2471"},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":15,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2477","line":3,"column":8,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":4,"column":5,"nodeType":"2480","messageId":"2481","endLine":6,"endColumn":6},{"ruleId":"2468","replacedBy":"2482"},{"ruleId":"2470","replacedBy":"2483"},{"ruleId":"2478","severity":1,"message":"2479","line":4,"column":5,"nodeType":"2480","messageId":"2481","endLine":6,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2484","line":32,"column":9,"nodeType":"2474","messageId":"2475","endLine":32,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":4,"column":5,"nodeType":"2480","messageId":"2481","endLine":6,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2485","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":9,"column":5,"nodeType":"2480","messageId":"2481","endLine":12,"endColumn":6},{"ruleId":"2464","severity":1,"message":"2465","line":22,"column":45,"nodeType":"2466","messageId":"2467","endLine":22,"endColumn":47},{"ruleId":"2468","replacedBy":"2486"},{"ruleId":"2470","replacedBy":"2487"},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":5,"column":5,"nodeType":"2480","messageId":"2481","endLine":7,"endColumn":6},{"ruleId":"2488","severity":1,"message":"2489","line":14,"column":17,"nodeType":"2490","endLine":14,"endColumn":65},{"ruleId":"2488","severity":1,"message":"2489","line":23,"column":17,"nodeType":"2490","endLine":23,"endColumn":65},{"ruleId":"2488","severity":1,"message":"2489","line":30,"column":17,"nodeType":"2490","endLine":30,"endColumn":189},{"ruleId":"2472","severity":1,"message":"2491","line":1,"column":28,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2492","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2493","line":3,"column":24,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2494","line":13,"column":9,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":24,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":29,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":7,"column":5,"nodeType":"2480","messageId":"2481","endLine":10,"endColumn":6},{"ruleId":"2468","replacedBy":"2496"},{"ruleId":"2470","replacedBy":"2497"},{"ruleId":"2472","severity":1,"message":"2498","line":41,"column":9,"nodeType":"2474","messageId":"2475","endLine":41,"endColumn":10},{"ruleId":"2472","severity":1,"message":"2499","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2500","line":42,"column":9,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":60,"column":47,"nodeType":"2466","messageId":"2502","endLine":60,"endColumn":49},{"ruleId":"2503","severity":1,"message":"2504","line":68,"column":31,"nodeType":"2505","messageId":"2506","endLine":68,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":85,"column":31,"nodeType":"2505","messageId":"2506","endLine":85,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":86,"column":31,"nodeType":"2505","messageId":"2506","endLine":86,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":106,"column":31,"nodeType":"2505","messageId":"2506","endLine":106,"endColumn":33},{"ruleId":"2507","severity":1,"message":"2508","line":159,"column":44,"nodeType":"2509","messageId":"2506","endLine":159,"endColumn":54},{"ruleId":"2507","severity":1,"message":"2508","line":166,"column":45,"nodeType":"2509","messageId":"2506","endLine":166,"endColumn":55},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":20},{"ruleId":"2503","severity":1,"message":"2504","line":32,"column":13,"nodeType":"2505","messageId":"2506","endLine":32,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2511","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":9},{"ruleId":"2472","severity":1,"message":"2512","line":1,"column":8,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2513","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2514","line":2,"column":28,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2515","line":2,"column":42,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":58},{"ruleId":"2464","severity":1,"message":"2501","line":207,"column":39,"nodeType":"2466","messageId":"2502","endLine":207,"endColumn":41},{"ruleId":"2464","severity":1,"message":"2501","line":246,"column":40,"nodeType":"2466","messageId":"2502","endLine":246,"endColumn":42},{"ruleId":"2464","severity":1,"message":"2501","line":297,"column":39,"nodeType":"2466","messageId":"2502","endLine":297,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2510","line":5,"column":16,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":27,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2518","line":5,"column":33,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2492","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":7,"column":5,"nodeType":"2480","messageId":"2481","endLine":10,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2519","line":5,"column":10,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":1,"column":16,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":21},{"ruleId":"2488","severity":1,"message":"2489","line":5,"column":15,"nodeType":"2490","endLine":5,"endColumn":51},{"ruleId":"2503","severity":1,"message":"2520","line":33,"column":21,"nodeType":"2505","messageId":"2506","endLine":33,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":36,"column":21,"nodeType":"2505","messageId":"2506","endLine":36,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":82,"column":26,"nodeType":"2505","messageId":"2506","endLine":82,"endColumn":28},{"ruleId":"2503","severity":1,"message":"2520","line":53,"column":32,"nodeType":"2505","messageId":"2506","endLine":53,"endColumn":34},{"ruleId":"2503","severity":1,"message":"2520","line":63,"column":33,"nodeType":"2505","messageId":"2506","endLine":63,"endColumn":35},{"ruleId":"2503","severity":1,"message":"2520","line":89,"column":31,"nodeType":"2505","messageId":"2506","endLine":89,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2520","line":107,"column":26,"nodeType":"2505","messageId":"2506","endLine":107,"endColumn":28},{"ruleId":"2472","severity":1,"message":"2521","line":34,"column":27,"nodeType":"2474","messageId":"2475","endLine":34,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2522","line":4,"column":17,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":28,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":33},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":34,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":40},{"ruleId":"2472","severity":1,"message":"2524","line":12,"column":9,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":19},{"ruleId":"2503","severity":1,"message":"2520","line":67,"column":30,"nodeType":"2505","messageId":"2506","endLine":67,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2525","line":31,"column":27,"nodeType":"2474","messageId":"2475","endLine":31,"endColumn":35},{"ruleId":"2503","severity":1,"message":"2504","line":67,"column":31,"nodeType":"2505","messageId":"2506","endLine":67,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":84,"column":31,"nodeType":"2505","messageId":"2506","endLine":84,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":85,"column":31,"nodeType":"2505","messageId":"2506","endLine":85,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":105,"column":31,"nodeType":"2505","messageId":"2506","endLine":105,"endColumn":33},{"ruleId":"2507","severity":1,"message":"2508","line":158,"column":44,"nodeType":"2509","messageId":"2506","endLine":158,"endColumn":54},{"ruleId":"2507","severity":1,"message":"2508","line":165,"column":45,"nodeType":"2509","messageId":"2506","endLine":165,"endColumn":55},{"ruleId":"2472","severity":1,"message":"2499","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2500","line":42,"column":9,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":60,"column":47,"nodeType":"2466","messageId":"2502","endLine":60,"endColumn":49},{"ruleId":"2472","severity":1,"message":"2491","line":1,"column":28,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":24,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":29,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2518","line":4,"column":36,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2526","line":75,"column":23,"nodeType":"2474","messageId":"2475","endLine":75,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2527","line":75,"column":31,"nodeType":"2474","messageId":"2475","endLine":75,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":51,"column":22,"nodeType":"2466","messageId":"2502","endLine":51,"endColumn":24},{"ruleId":"2503","severity":1,"message":"2520","line":54,"column":16,"nodeType":"2505","messageId":"2506","endLine":54,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":38,"column":47,"nodeType":"2466","messageId":"2502","endLine":38,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":47,"column":34,"nodeType":"2466","messageId":"2502","endLine":47,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2531","line":86,"column":26,"nodeType":"2474","messageId":"2475","endLine":86,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2532","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2533","line":60,"column":18,"nodeType":"2474","messageId":"2475","endLine":60,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2519","line":5,"column":10,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":125,"column":42,"nodeType":"2466","messageId":"2502","endLine":125,"endColumn":44},{"ruleId":"2464","severity":1,"message":"2501","line":126,"column":36,"nodeType":"2466","messageId":"2502","endLine":126,"endColumn":38},{"ruleId":"2464","severity":1,"message":"2501","line":146,"column":42,"nodeType":"2466","messageId":"2502","endLine":146,"endColumn":44},{"ruleId":"2464","severity":1,"message":"2501","line":147,"column":36,"nodeType":"2466","messageId":"2502","endLine":147,"endColumn":38},{"ruleId":"2464","severity":1,"message":"2501","line":109,"column":29,"nodeType":"2466","messageId":"2502","endLine":109,"endColumn":31},{"ruleId":"2464","severity":1,"message":"2501","line":110,"column":39,"nodeType":"2466","messageId":"2502","endLine":110,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":17,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2534","line":11,"column":8,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":51,"column":22,"nodeType":"2466","messageId":"2502","endLine":51,"endColumn":24},{"ruleId":"2503","severity":1,"message":"2520","line":54,"column":16,"nodeType":"2505","messageId":"2506","endLine":54,"endColumn":18},{"ruleId":"2503","severity":1,"message":"2520","line":127,"column":16,"nodeType":"2505","messageId":"2506","endLine":127,"endColumn":18},{"ruleId":"2464","severity":1,"message":"2501","line":180,"column":37,"nodeType":"2466","messageId":"2502","endLine":180,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2535","line":15,"column":7,"nodeType":"2474","messageId":"2475","endLine":15,"endColumn":17},{"ruleId":"2503","severity":1,"message":"2504","line":126,"column":16,"nodeType":"2505","messageId":"2506","endLine":126,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2492","line":7,"column":8,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2536","line":72,"column":23,"nodeType":"2474","messageId":"2475","endLine":72,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2535","line":12,"column":7,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":132,"column":20,"nodeType":"2466","messageId":"2502","endLine":132,"endColumn":22},{"ruleId":"2503","severity":1,"message":"2520","line":135,"column":14,"nodeType":"2505","messageId":"2506","endLine":135,"endColumn":16},{"ruleId":"2472","severity":1,"message":"2536","line":111,"column":23,"nodeType":"2474","messageId":"2475","endLine":111,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":34,"column":47,"nodeType":"2466","messageId":"2502","endLine":34,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":43,"column":34,"nodeType":"2466","messageId":"2502","endLine":43,"endColumn":36},{"ruleId":"2464","severity":1,"message":"2501","line":80,"column":39,"nodeType":"2466","messageId":"2502","endLine":80,"endColumn":41},{"ruleId":"2464","severity":1,"message":"2501","line":170,"column":39,"nodeType":"2466","messageId":"2502","endLine":170,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2537","line":3,"column":22,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2518","line":3,"column":25,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2526","line":42,"column":15,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2539","line":6,"column":9,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2540","line":102,"column":7,"nodeType":"2474","messageId":"2475","endLine":102,"endColumn":11},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2464","severity":1,"message":"2501","line":84,"column":39,"nodeType":"2466","messageId":"2502","endLine":84,"endColumn":41},{"ruleId":"2464","severity":1,"message":"2501","line":184,"column":27,"nodeType":"2466","messageId":"2502","endLine":184,"endColumn":29},{"ruleId":"2503","severity":1,"message":"2520","line":38,"column":23,"nodeType":"2505","messageId":"2506","endLine":38,"endColumn":25},{"ruleId":"2464","severity":1,"message":"2501","line":42,"column":33,"nodeType":"2466","messageId":"2502","endLine":42,"endColumn":35},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":15,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2495","line":7,"column":9,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2529","line":7,"column":39,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":50},{"ruleId":"2503","severity":1,"message":"2520","line":34,"column":32,"nodeType":"2505","messageId":"2506","endLine":34,"endColumn":34},{"ruleId":"2503","severity":1,"message":"2520","line":74,"column":32,"nodeType":"2505","messageId":"2506","endLine":74,"endColumn":34},{"ruleId":"2503","severity":1,"message":"2520","line":111,"column":39,"nodeType":"2505","messageId":"2506","endLine":111,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2541","line":24,"column":7,"nodeType":"2474","messageId":"2475","endLine":24,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2542","line":93,"column":24,"nodeType":"2474","messageId":"2475","endLine":93,"endColumn":31},{"ruleId":"2507","severity":1,"message":"2543","line":70,"column":3,"nodeType":"2509","messageId":"2506","endLine":70,"endColumn":7},{"ruleId":"2464","severity":1,"message":"2501","line":99,"column":41,"nodeType":"2466","messageId":"2502","endLine":99,"endColumn":43},{"ruleId":"2464","severity":1,"message":"2501","line":134,"column":41,"nodeType":"2466","messageId":"2502","endLine":134,"endColumn":43},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2542","line":75,"column":24,"nodeType":"2474","messageId":"2475","endLine":75,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2544","line":15,"column":7,"nodeType":"2474","messageId":"2475","endLine":15,"endColumn":15},{"ruleId":"2503","severity":1,"message":"2504","line":61,"column":15,"nodeType":"2505","messageId":"2506","endLine":61,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2492","line":7,"column":8,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2510","line":5,"column":16,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":27,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2518","line":5,"column":33,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2518","line":2,"column":24,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":29},{"ruleId":"2472","severity":1,"message":"2545","line":2,"column":30,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2546","line":2,"column":36,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2503","severity":1,"message":"2504","line":36,"column":15,"nodeType":"2505","messageId":"2506","endLine":36,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2495","line":3,"column":48,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":53},{"ruleId":"2472","severity":1,"message":"2546","line":3,"column":54,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":59},{"ruleId":"2472","severity":1,"message":"2536","line":92,"column":23,"nodeType":"2474","messageId":"2475","endLine":92,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":24,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":29,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2493","line":3,"column":24,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2518","line":3,"column":36,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":42,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":49},{"ruleId":"2472","severity":1,"message":"2547","line":11,"column":8,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2494","line":13,"column":9,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2526","line":71,"column":23,"nodeType":"2474","messageId":"2475","endLine":71,"endColumn":30},{"ruleId":"2503","severity":1,"message":"2504","line":69,"column":31,"nodeType":"2505","messageId":"2506","endLine":69,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":86,"column":31,"nodeType":"2505","messageId":"2506","endLine":86,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":87,"column":31,"nodeType":"2505","messageId":"2506","endLine":87,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":107,"column":31,"nodeType":"2505","messageId":"2506","endLine":107,"endColumn":33},{"ruleId":"2507","severity":1,"message":"2508","line":160,"column":44,"nodeType":"2509","messageId":"2506","endLine":160,"endColumn":54},{"ruleId":"2507","severity":1,"message":"2508","line":167,"column":45,"nodeType":"2509","messageId":"2506","endLine":167,"endColumn":55},{"ruleId":"2472","severity":1,"message":"2499","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2500","line":42,"column":9,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":60,"column":47,"nodeType":"2466","messageId":"2502","endLine":60,"endColumn":49},{"ruleId":"2503","severity":1,"message":"2504","line":32,"column":13,"nodeType":"2505","messageId":"2506","endLine":32,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2510","line":5,"column":16,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":27,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2518","line":5,"column":33,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2540","line":29,"column":9,"nodeType":"2474","messageId":"2475","endLine":29,"endColumn":13},{"ruleId":"2464","severity":1,"message":"2501","line":88,"column":23,"nodeType":"2466","messageId":"2502","endLine":88,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2511","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":9},{"ruleId":"2478","severity":1,"message":"2479","line":7,"column":5,"nodeType":"2480","messageId":"2481","endLine":10,"endColumn":6},{"ruleId":"2503","severity":1,"message":"2504","line":17,"column":19,"nodeType":"2505","messageId":"2506","endLine":17,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":17,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2530","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":19,"column":5,"nodeType":"2480","messageId":"2481","endLine":25,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":37,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":44},{"ruleId":"2472","severity":1,"message":"2548","line":94,"column":7,"nodeType":"2474","messageId":"2475","endLine":94,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2549","line":101,"column":9,"nodeType":"2474","messageId":"2475","endLine":101,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2550","line":106,"column":9,"nodeType":"2474","messageId":"2475","endLine":106,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":34,"column":47,"nodeType":"2466","messageId":"2502","endLine":34,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":43,"column":34,"nodeType":"2466","messageId":"2502","endLine":43,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2531","line":81,"column":26,"nodeType":"2474","messageId":"2475","endLine":81,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":37,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":44},{"ruleId":"2472","severity":1,"message":"2548","line":94,"column":7,"nodeType":"2474","messageId":"2475","endLine":94,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2549","line":101,"column":9,"nodeType":"2474","messageId":"2475","endLine":101,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2550","line":106,"column":9,"nodeType":"2474","messageId":"2475","endLine":106,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":34,"column":47,"nodeType":"2466","messageId":"2502","endLine":34,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":43,"column":34,"nodeType":"2466","messageId":"2502","endLine":43,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2531","line":81,"column":26,"nodeType":"2474","messageId":"2475","endLine":81,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2503","severity":1,"message":"2520","line":31,"column":9,"nodeType":"2505","messageId":"2506","endLine":31,"endColumn":11},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":37,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":44},{"ruleId":"2472","severity":1,"message":"2540","line":49,"column":11,"nodeType":"2474","messageId":"2475","endLine":49,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2548","line":120,"column":7,"nodeType":"2474","messageId":"2475","endLine":120,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2549","line":127,"column":9,"nodeType":"2474","messageId":"2475","endLine":127,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2550","line":132,"column":9,"nodeType":"2474","messageId":"2475","endLine":132,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2540","line":50,"column":13,"nodeType":"2474","messageId":"2475","endLine":50,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2537","line":2,"column":22,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2551","line":4,"column":10,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2552","line":11,"column":9,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2553","line":11,"column":18,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":35},{"ruleId":"2472","severity":1,"message":"2554","line":13,"column":9,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":62,"column":21,"nodeType":"2505","messageId":"2506","endLine":62,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2555","line":121,"column":15,"nodeType":"2474","messageId":"2475","endLine":121,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2556","line":123,"column":15,"nodeType":"2474","messageId":"2475","endLine":123,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":38,"column":21,"nodeType":"2505","messageId":"2506","endLine":38,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":69,"column":7,"nodeType":"2474","messageId":"2475","endLine":69,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2492","line":6,"column":8,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2542","line":76,"column":24,"nodeType":"2474","messageId":"2475","endLine":76,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":16,"column":7,"nodeType":"2474","messageId":"2475","endLine":16,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2541","line":143,"column":7,"nodeType":"2474","messageId":"2475","endLine":143,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2545","line":4,"column":30,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2542","line":68,"column":24,"nodeType":"2474","messageId":"2475","endLine":68,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2549","line":104,"column":7,"nodeType":"2474","messageId":"2475","endLine":104,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":16,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":122,"column":7,"nodeType":"2474","messageId":"2475","endLine":122,"endColumn":20},{"ruleId":"2503","severity":1,"message":"2504","line":176,"column":11,"nodeType":"2505","messageId":"2506","endLine":176,"endColumn":13},{"ruleId":"2464","severity":1,"message":"2501","line":205,"column":23,"nodeType":"2466","messageId":"2502","endLine":205,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2540","line":245,"column":6,"nodeType":"2474","messageId":"2475","endLine":245,"endColumn":10},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2557","line":6,"column":9,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2503","severity":1,"message":"2504","line":17,"column":19,"nodeType":"2505","messageId":"2506","endLine":17,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":17,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2530","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":19,"column":5,"nodeType":"2480","messageId":"2481","endLine":25,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2558","line":4,"column":9,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":12},{"ruleId":"2472","severity":1,"message":"2559","line":4,"column":14,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":17},{"ruleId":"2478","severity":1,"message":"2479","line":13,"column":5,"nodeType":"2480","messageId":"2481","endLine":16,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2560","line":4,"column":10,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":16},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":18,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2526","line":33,"column":16,"nodeType":"2474","messageId":"2475","endLine":33,"endColumn":23},{"ruleId":"2561","severity":1,"message":"2562","line":55,"column":27,"nodeType":"2490","endLine":55,"endColumn":128},{"ruleId":"2561","severity":1,"message":"2562","line":67,"column":27,"nodeType":"2490","endLine":67,"endColumn":128},{"ruleId":"2472","severity":1,"message":"2563","line":4,"column":9,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":14,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2564","line":4,"column":20,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2565","line":4,"column":33,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":45,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":51},{"ruleId":"2472","severity":1,"message":"2484","line":7,"column":9,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2566","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2567","line":10,"column":8,"nodeType":"2474","messageId":"2475","endLine":10,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2568","line":11,"column":9,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2569","line":12,"column":9,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":9,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":17,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2570","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2530","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2528","line":15,"column":8,"nodeType":"2474","messageId":"2475","endLine":15,"endColumn":12},{"ruleId":"2503","severity":1,"message":"2520","line":108,"column":22,"nodeType":"2505","messageId":"2506","endLine":108,"endColumn":24},{"ruleId":"2503","severity":1,"message":"2520","line":108,"column":61,"nodeType":"2505","messageId":"2506","endLine":108,"endColumn":63},{"ruleId":"2468","replacedBy":"2571"},{"ruleId":"2470","replacedBy":"2572"},{"ruleId":"2488","severity":1,"message":"2573","line":7,"column":23,"nodeType":"2490","endLine":7,"endColumn":26},{"ruleId":"2488","severity":1,"message":"2573","line":44,"column":11,"nodeType":"2490","endLine":44,"endColumn":14},{"ruleId":"2488","severity":1,"message":"2573","line":45,"column":11,"nodeType":"2490","endLine":45,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2511","line":1,"column":8,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":9},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2519","line":5,"column":10,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2492","line":8,"column":8,"nodeType":"2474","messageId":"2475","endLine":8,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":15,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":22,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":69,"column":7,"nodeType":"2474","messageId":"2475","endLine":69,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2574","line":70,"column":7,"nodeType":"2474","messageId":"2475","endLine":70,"endColumn":17},{"ruleId":"2488","severity":1,"message":"2489","line":70,"column":25,"nodeType":"2490","endLine":70,"endColumn":66},{"ruleId":"2488","severity":1,"message":"2489","line":79,"column":28,"nodeType":"2490","endLine":79,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":15,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":22,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":25},{"ruleId":"2464","severity":1,"message":"2465","line":16,"column":65,"nodeType":"2466","messageId":"2467","endLine":16,"endColumn":67},{"ruleId":"2468","replacedBy":"2575"},{"ruleId":"2470","replacedBy":"2576"},{"ruleId":"2472","severity":1,"message":"2484","line":34,"column":9,"nodeType":"2474","messageId":"2475","endLine":34,"endColumn":13},{"ruleId":"2503","severity":1,"message":"2520","line":36,"column":21,"nodeType":"2505","messageId":"2506","endLine":36,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":82,"column":26,"nodeType":"2505","messageId":"2506","endLine":82,"endColumn":28},{"ruleId":"2472","severity":1,"message":"2522","line":4,"column":17,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":28,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":33},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":34,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":40},{"ruleId":"2472","severity":1,"message":"2521","line":34,"column":27,"nodeType":"2474","messageId":"2475","endLine":34,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2577","line":65,"column":82,"nodeType":"2474","messageId":"2475","endLine":65,"endColumn":96},{"ruleId":"2503","severity":1,"message":"2520","line":71,"column":30,"nodeType":"2505","messageId":"2506","endLine":71,"endColumn":32},{"ruleId":"2503","severity":1,"message":"2520","line":33,"column":21,"nodeType":"2505","messageId":"2506","endLine":33,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2524","line":12,"column":9,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2531","line":31,"column":16,"nodeType":"2474","messageId":"2475","endLine":31,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2525","line":31,"column":27,"nodeType":"2474","messageId":"2475","endLine":31,"endColumn":35},{"ruleId":"2472","severity":1,"message":"2523","line":8,"column":23,"nodeType":"2474","messageId":"2475","endLine":8,"endColumn":29},{"ruleId":"2488","severity":1,"message":"2489","line":70,"column":25,"nodeType":"2490","endLine":70,"endColumn":66},{"ruleId":"2472","severity":1,"message":"2495","line":6,"column":9,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2517","line":6,"column":15,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2578","line":6,"column":21,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":28},{"ruleId":"2503","severity":1,"message":"2520","line":19,"column":18,"nodeType":"2505","messageId":"2506","endLine":19,"endColumn":20},{"ruleId":"2503","severity":1,"message":"2520","line":54,"column":32,"nodeType":"2505","messageId":"2506","endLine":54,"endColumn":34},{"ruleId":"2503","severity":1,"message":"2520","line":64,"column":33,"nodeType":"2505","messageId":"2506","endLine":64,"endColumn":35},{"ruleId":"2503","severity":1,"message":"2520","line":90,"column":31,"nodeType":"2505","messageId":"2506","endLine":90,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2520","line":109,"column":26,"nodeType":"2505","messageId":"2506","endLine":109,"endColumn":28},{"ruleId":"2472","severity":1,"message":"2558","line":4,"column":9,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":12},{"ruleId":"2472","severity":1,"message":"2559","line":4,"column":14,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2579","line":6,"column":8,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":17},{"ruleId":"2478","severity":1,"message":"2479","line":15,"column":5,"nodeType":"2480","messageId":"2481","endLine":18,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2537","line":3,"column":22,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":15,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":5,"column":16,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2518","line":5,"column":33,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2537","line":2,"column":22,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2557","line":6,"column":9,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2539","line":6,"column":9,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2535","line":12,"column":7,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":132,"column":20,"nodeType":"2466","messageId":"2502","endLine":132,"endColumn":22},{"ruleId":"2503","severity":1,"message":"2520","line":135,"column":14,"nodeType":"2505","messageId":"2506","endLine":135,"endColumn":16},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2544","line":15,"column":7,"nodeType":"2474","messageId":"2475","endLine":15,"endColumn":15},{"ruleId":"2503","severity":1,"message":"2504","line":61,"column":15,"nodeType":"2505","messageId":"2506","endLine":61,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":9,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":16,"column":7,"nodeType":"2474","messageId":"2475","endLine":16,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2541","line":143,"column":7,"nodeType":"2474","messageId":"2475","endLine":143,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":16,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":122,"column":7,"nodeType":"2474","messageId":"2475","endLine":122,"endColumn":20},{"ruleId":"2503","severity":1,"message":"2504","line":176,"column":11,"nodeType":"2505","messageId":"2506","endLine":176,"endColumn":13},{"ruleId":"2464","severity":1,"message":"2501","line":205,"column":23,"nodeType":"2466","messageId":"2502","endLine":205,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2540","line":245,"column":6,"nodeType":"2474","messageId":"2475","endLine":245,"endColumn":10},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":15,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2477","line":3,"column":8,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2532","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2533","line":60,"column":18,"nodeType":"2474","messageId":"2475","endLine":60,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2519","line":5,"column":10,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2540","line":102,"column":7,"nodeType":"2474","messageId":"2475","endLine":102,"endColumn":11},{"ruleId":"2503","severity":1,"message":"2520","line":39,"column":23,"nodeType":"2505","messageId":"2506","endLine":39,"endColumn":25},{"ruleId":"2503","severity":1,"message":"2520","line":44,"column":35,"nodeType":"2505","messageId":"2506","endLine":44,"endColumn":37},{"ruleId":"2503","severity":1,"message":"2520","line":51,"column":14,"nodeType":"2505","messageId":"2506","endLine":51,"endColumn":16},{"ruleId":"2503","severity":1,"message":"2520","line":51,"column":23,"nodeType":"2505","messageId":"2506","endLine":51,"endColumn":25},{"ruleId":"2464","severity":1,"message":"2501","line":52,"column":37,"nodeType":"2466","messageId":"2502","endLine":52,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2535","line":15,"column":7,"nodeType":"2474","messageId":"2475","endLine":15,"endColumn":17},{"ruleId":"2503","severity":1,"message":"2504","line":126,"column":16,"nodeType":"2505","messageId":"2506","endLine":126,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":62,"column":21,"nodeType":"2505","messageId":"2506","endLine":62,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2555","line":121,"column":15,"nodeType":"2474","messageId":"2475","endLine":121,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2556","line":123,"column":15,"nodeType":"2474","messageId":"2475","endLine":123,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":39,"column":21,"nodeType":"2505","messageId":"2506","endLine":39,"endColumn":23},{"ruleId":"2503","severity":1,"message":"2520","line":41,"column":20,"nodeType":"2505","messageId":"2506","endLine":41,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":69,"column":7,"nodeType":"2474","messageId":"2475","endLine":69,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2498","line":41,"column":9,"nodeType":"2474","messageId":"2475","endLine":41,"endColumn":10},{"ruleId":"2472","severity":1,"message":"2491","line":1,"column":28,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2563","line":4,"column":9,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":14,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2564","line":4,"column":20,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2565","line":4,"column":33,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":45,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":51},{"ruleId":"2472","severity":1,"message":"2484","line":7,"column":9,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2566","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2567","line":10,"column":8,"nodeType":"2474","messageId":"2475","endLine":10,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2568","line":11,"column":9,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2569","line":12,"column":9,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2560","line":4,"column":10,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":16},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":18,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2526","line":34,"column":16,"nodeType":"2474","messageId":"2475","endLine":34,"endColumn":23},{"ruleId":"2561","severity":1,"message":"2562","line":42,"column":27,"nodeType":"2490","endLine":42,"endColumn":125},{"ruleId":"2561","severity":1,"message":"2562","line":54,"column":27,"nodeType":"2490","endLine":54,"endColumn":125},{"ruleId":"2561","severity":1,"message":"2562","line":65,"column":27,"nodeType":"2490","endLine":65,"endColumn":125},{"ruleId":"2472","severity":1,"message":"2580","line":5,"column":22,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2537","line":5,"column":57,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":65},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":72,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":77},{"ruleId":"2472","severity":1,"message":"2581","line":7,"column":9,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2582","line":7,"column":23,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":35},{"ruleId":"2503","severity":1,"message":"2504","line":59,"column":43,"nodeType":"2505","messageId":"2506","endLine":59,"endColumn":45},{"ruleId":"2503","severity":1,"message":"2504","line":59,"column":58,"nodeType":"2505","messageId":"2506","endLine":59,"endColumn":60},{"ruleId":"2561","severity":1,"message":"2562","line":94,"column":25,"nodeType":"2490","endLine":94,"endColumn":130},{"ruleId":"2472","severity":1,"message":"2565","line":4,"column":9,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2523","line":4,"column":15,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2522","line":4,"column":26,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2583","line":4,"column":37,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":42},{"ruleId":"2472","severity":1,"message":"2584","line":7,"column":9,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":29},{"ruleId":"2472","severity":1,"message":"2585","line":8,"column":9,"nodeType":"2474","messageId":"2475","endLine":8,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2586","line":12,"column":8,"nodeType":"2474","messageId":"2475","endLine":12,"endColumn":16},{"ruleId":"2464","severity":1,"message":"2465","line":71,"column":48,"nodeType":"2466","messageId":"2467","endLine":71,"endColumn":50},{"ruleId":"2472","severity":1,"message":"2536","line":111,"column":23,"nodeType":"2474","messageId":"2475","endLine":111,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2493","line":3,"column":24,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2518","line":3,"column":36,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":42,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":49},{"ruleId":"2472","severity":1,"message":"2547","line":11,"column":8,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2494","line":13,"column":9,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2526","line":71,"column":23,"nodeType":"2474","messageId":"2475","endLine":71,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":24,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":29,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2492","line":7,"column":8,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2542","line":75,"column":24,"nodeType":"2474","messageId":"2475","endLine":75,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":37,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":44},{"ruleId":"2472","severity":1,"message":"2540","line":49,"column":11,"nodeType":"2474","messageId":"2475","endLine":49,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2548","line":120,"column":7,"nodeType":"2474","messageId":"2475","endLine":120,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2549","line":127,"column":9,"nodeType":"2474","messageId":"2475","endLine":127,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2550","line":132,"column":9,"nodeType":"2474","messageId":"2475","endLine":132,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2540","line":50,"column":13,"nodeType":"2474","messageId":"2475","endLine":50,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2518","line":2,"column":24,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":29},{"ruleId":"2472","severity":1,"message":"2545","line":2,"column":30,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2546","line":2,"column":36,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2495","line":3,"column":48,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":53},{"ruleId":"2472","severity":1,"message":"2546","line":3,"column":54,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":59},{"ruleId":"2472","severity":1,"message":"2536","line":92,"column":23,"nodeType":"2474","messageId":"2475","endLine":92,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2519","line":3,"column":37,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":44},{"ruleId":"2472","severity":1,"message":"2548","line":94,"column":7,"nodeType":"2474","messageId":"2475","endLine":94,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2549","line":101,"column":9,"nodeType":"2474","messageId":"2475","endLine":101,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2550","line":106,"column":9,"nodeType":"2474","messageId":"2475","endLine":106,"endColumn":19},{"ruleId":"2503","severity":1,"message":"2504","line":17,"column":19,"nodeType":"2505","messageId":"2506","endLine":17,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2545","line":4,"column":30,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2542","line":68,"column":24,"nodeType":"2474","messageId":"2475","endLine":68,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2549","line":104,"column":7,"nodeType":"2474","messageId":"2475","endLine":104,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2551","line":4,"column":10,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":24},{"ruleId":"2472","severity":1,"message":"2552","line":11,"column":9,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2553","line":11,"column":18,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":35},{"ruleId":"2472","severity":1,"message":"2554","line":13,"column":9,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2536","line":73,"column":23,"nodeType":"2474","messageId":"2475","endLine":73,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2518","line":3,"column":25,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2526","line":42,"column":15,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2499","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2500","line":42,"column":9,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":60,"column":47,"nodeType":"2466","messageId":"2502","endLine":60,"endColumn":49},{"ruleId":"2503","severity":1,"message":"2504","line":69,"column":31,"nodeType":"2505","messageId":"2506","endLine":69,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":86,"column":31,"nodeType":"2505","messageId":"2506","endLine":86,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":87,"column":31,"nodeType":"2505","messageId":"2506","endLine":87,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":107,"column":31,"nodeType":"2505","messageId":"2506","endLine":107,"endColumn":33},{"ruleId":"2507","severity":1,"message":"2508","line":160,"column":44,"nodeType":"2509","messageId":"2506","endLine":160,"endColumn":54},{"ruleId":"2507","severity":1,"message":"2508","line":167,"column":45,"nodeType":"2509","messageId":"2506","endLine":167,"endColumn":55},{"ruleId":"2472","severity":1,"message":"2495","line":7,"column":9,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":14},{"ruleId":"2472","severity":1,"message":"2529","line":7,"column":39,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":50},{"ruleId":"2503","severity":1,"message":"2520","line":34,"column":32,"nodeType":"2505","messageId":"2506","endLine":34,"endColumn":34},{"ruleId":"2503","severity":1,"message":"2520","line":74,"column":32,"nodeType":"2505","messageId":"2506","endLine":74,"endColumn":34},{"ruleId":"2503","severity":1,"message":"2520","line":111,"column":39,"nodeType":"2505","messageId":"2506","endLine":111,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2492","line":6,"column":8,"nodeType":"2474","messageId":"2475","endLine":6,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2542","line":76,"column":24,"nodeType":"2474","messageId":"2475","endLine":76,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2492","line":7,"column":8,"nodeType":"2474","messageId":"2475","endLine":7,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2495","line":2,"column":17,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":22},{"ruleId":"2472","severity":1,"message":"2542","line":93,"column":24,"nodeType":"2474","messageId":"2475","endLine":93,"endColumn":31},{"ruleId":"2472","severity":1,"message":"2538","line":5,"column":17,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2484","line":4,"column":17,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":21},{"ruleId":"2464","severity":1,"message":"2465","line":29,"column":55,"nodeType":"2466","messageId":"2467","endLine":29,"endColumn":57},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":5,"column":5,"nodeType":"2480","messageId":"2481","endLine":7,"endColumn":6},{"ruleId":"2488","severity":1,"message":"2489","line":14,"column":17,"nodeType":"2490","endLine":14,"endColumn":65},{"ruleId":"2488","severity":1,"message":"2489","line":24,"column":17,"nodeType":"2490","endLine":24,"endColumn":65},{"ruleId":"2488","severity":1,"message":"2489","line":33,"column":17,"nodeType":"2490","endLine":33,"endColumn":65},{"ruleId":"2488","severity":1,"message":"2489","line":41,"column":17,"nodeType":"2490","endLine":41,"endColumn":189},{"ruleId":"2488","severity":1,"message":"2489","line":5,"column":15,"nodeType":"2490","endLine":5,"endColumn":51},{"ruleId":"2472","severity":1,"message":"2491","line":1,"column":28,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2492","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2476","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":13},{"ruleId":"2503","severity":1,"message":"2504","line":32,"column":13,"nodeType":"2505","messageId":"2506","endLine":32,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2510","line":5,"column":16,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":27,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2518","line":5,"column":33,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2541","line":17,"column":7,"nodeType":"2474","messageId":"2475","endLine":17,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2574","line":18,"column":7,"nodeType":"2474","messageId":"2475","endLine":18,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2552","line":56,"column":10,"nodeType":"2474","messageId":"2475","endLine":56,"endColumn":18},{"ruleId":"2507","severity":1,"message":"2543","line":70,"column":3,"nodeType":"2509","messageId":"2506","endLine":70,"endColumn":7},{"ruleId":"2464","severity":1,"message":"2501","line":99,"column":41,"nodeType":"2466","messageId":"2502","endLine":99,"endColumn":43},{"ruleId":"2464","severity":1,"message":"2501","line":134,"column":41,"nodeType":"2466","messageId":"2502","endLine":134,"endColumn":43},{"ruleId":"2464","severity":1,"message":"2501","line":84,"column":39,"nodeType":"2466","messageId":"2502","endLine":84,"endColumn":41},{"ruleId":"2464","severity":1,"message":"2501","line":184,"column":27,"nodeType":"2466","messageId":"2502","endLine":184,"endColumn":29},{"ruleId":"2464","severity":1,"message":"2501","line":80,"column":39,"nodeType":"2466","messageId":"2502","endLine":80,"endColumn":41},{"ruleId":"2464","severity":1,"message":"2501","line":170,"column":39,"nodeType":"2466","messageId":"2502","endLine":170,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2499","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2500","line":42,"column":9,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":60,"column":47,"nodeType":"2466","messageId":"2502","endLine":60,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":180,"column":37,"nodeType":"2466","messageId":"2502","endLine":180,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":34,"column":47,"nodeType":"2466","messageId":"2502","endLine":34,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":43,"column":34,"nodeType":"2466","messageId":"2502","endLine":43,"endColumn":36},{"ruleId":"2464","severity":1,"message":"2501","line":109,"column":29,"nodeType":"2466","messageId":"2502","endLine":109,"endColumn":31},{"ruleId":"2464","severity":1,"message":"2501","line":110,"column":39,"nodeType":"2466","messageId":"2502","endLine":110,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2512","line":1,"column":8,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2513","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2514","line":2,"column":28,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2515","line":2,"column":42,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":58},{"ruleId":"2464","severity":1,"message":"2501","line":207,"column":39,"nodeType":"2466","messageId":"2502","endLine":207,"endColumn":41},{"ruleId":"2464","severity":1,"message":"2501","line":246,"column":40,"nodeType":"2466","messageId":"2502","endLine":246,"endColumn":42},{"ruleId":"2464","severity":1,"message":"2501","line":297,"column":39,"nodeType":"2466","messageId":"2502","endLine":297,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":24,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":29,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2518","line":4,"column":36,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":41},{"ruleId":"2472","severity":1,"message":"2526","line":75,"column":23,"nodeType":"2474","messageId":"2475","endLine":75,"endColumn":30},{"ruleId":"2472","severity":1,"message":"2527","line":75,"column":31,"nodeType":"2474","messageId":"2475","endLine":75,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":51,"column":22,"nodeType":"2466","messageId":"2502","endLine":51,"endColumn":24},{"ruleId":"2503","severity":1,"message":"2520","line":54,"column":16,"nodeType":"2505","messageId":"2506","endLine":54,"endColumn":18},{"ruleId":"2503","severity":1,"message":"2520","line":127,"column":16,"nodeType":"2505","messageId":"2506","endLine":127,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2503","severity":1,"message":"2520","line":31,"column":9,"nodeType":"2505","messageId":"2506","endLine":31,"endColumn":11},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":34,"column":47,"nodeType":"2466","messageId":"2502","endLine":34,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":43,"column":34,"nodeType":"2466","messageId":"2502","endLine":43,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2531","line":81,"column":26,"nodeType":"2474","messageId":"2475","endLine":81,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2503","severity":1,"message":"2504","line":36,"column":15,"nodeType":"2505","messageId":"2506","endLine":36,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":17,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2530","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":19,"column":5,"nodeType":"2480","messageId":"2481","endLine":25,"endColumn":6},{"ruleId":"2503","severity":1,"message":"2504","line":67,"column":31,"nodeType":"2505","messageId":"2506","endLine":67,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":84,"column":31,"nodeType":"2505","messageId":"2506","endLine":84,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":85,"column":31,"nodeType":"2505","messageId":"2506","endLine":85,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":105,"column":31,"nodeType":"2505","messageId":"2506","endLine":105,"endColumn":33},{"ruleId":"2507","severity":1,"message":"2508","line":158,"column":44,"nodeType":"2509","messageId":"2506","endLine":158,"endColumn":54},{"ruleId":"2507","severity":1,"message":"2508","line":165,"column":45,"nodeType":"2509","messageId":"2506","endLine":165,"endColumn":55},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2540","line":29,"column":9,"nodeType":"2474","messageId":"2475","endLine":29,"endColumn":13},{"ruleId":"2464","severity":1,"message":"2501","line":88,"column":23,"nodeType":"2466","messageId":"2502","endLine":88,"endColumn":25},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2541","line":24,"column":7,"nodeType":"2474","messageId":"2475","endLine":24,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":125,"column":42,"nodeType":"2466","messageId":"2502","endLine":125,"endColumn":44},{"ruleId":"2464","severity":1,"message":"2501","line":126,"column":36,"nodeType":"2466","messageId":"2502","endLine":126,"endColumn":38},{"ruleId":"2464","severity":1,"message":"2501","line":146,"column":42,"nodeType":"2466","messageId":"2502","endLine":146,"endColumn":44},{"ruleId":"2464","severity":1,"message":"2501","line":147,"column":36,"nodeType":"2466","messageId":"2502","endLine":147,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2523","line":3,"column":17,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2534","line":11,"column":8,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2499","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2500","line":42,"column":9,"nodeType":"2474","messageId":"2475","endLine":42,"endColumn":20},{"ruleId":"2464","severity":1,"message":"2501","line":60,"column":47,"nodeType":"2466","messageId":"2502","endLine":60,"endColumn":49},{"ruleId":"2472","severity":1,"message":"2493","line":3,"column":24,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2494","line":13,"column":9,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2511","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":9},{"ruleId":"2472","severity":1,"message":"2493","line":4,"column":24,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":27},{"ruleId":"2472","severity":1,"message":"2495","line":4,"column":29,"nodeType":"2474","messageId":"2475","endLine":4,"endColumn":34},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":20},{"ruleId":"2478","severity":1,"message":"2479","line":7,"column":5,"nodeType":"2480","messageId":"2481","endLine":10,"endColumn":6},{"ruleId":"2503","severity":1,"message":"2504","line":17,"column":19,"nodeType":"2505","messageId":"2506","endLine":17,"endColumn":21},{"ruleId":"2503","severity":1,"message":"2504","line":68,"column":31,"nodeType":"2505","messageId":"2506","endLine":68,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":85,"column":31,"nodeType":"2505","messageId":"2506","endLine":85,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":86,"column":31,"nodeType":"2505","messageId":"2506","endLine":86,"endColumn":33},{"ruleId":"2503","severity":1,"message":"2504","line":106,"column":31,"nodeType":"2505","messageId":"2506","endLine":106,"endColumn":33},{"ruleId":"2507","severity":1,"message":"2508","line":159,"column":44,"nodeType":"2509","messageId":"2506","endLine":159,"endColumn":54},{"ruleId":"2507","severity":1,"message":"2508","line":166,"column":45,"nodeType":"2509","messageId":"2506","endLine":166,"endColumn":55},{"ruleId":"2472","severity":1,"message":"2511","line":1,"column":8,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":9},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2519","line":5,"column":10,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":18,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":23},{"ruleId":"2472","severity":1,"message":"2492","line":8,"column":8,"nodeType":"2474","messageId":"2475","endLine":8,"endColumn":13},{"ruleId":"2468","replacedBy":"2587"},{"ruleId":"2470","replacedBy":"2588"},{"ruleId":"2472","severity":1,"message":"2528","line":1,"column":13,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":17},{"ruleId":"2464","severity":1,"message":"2501","line":51,"column":22,"nodeType":"2466","messageId":"2502","endLine":51,"endColumn":24},{"ruleId":"2503","severity":1,"message":"2520","line":54,"column":16,"nodeType":"2505","messageId":"2506","endLine":54,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2517","line":1,"column":16,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":21},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2516","line":2,"column":9,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2510","line":5,"column":16,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2517","line":5,"column":27,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":32},{"ruleId":"2472","severity":1,"message":"2518","line":5,"column":33,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":38},{"ruleId":"2472","severity":1,"message":"2492","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2519","line":5,"column":10,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":17},{"ruleId":"2472","severity":1,"message":"2529","line":3,"column":28,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":39},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":17,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":26},{"ruleId":"2472","severity":1,"message":"2530","line":9,"column":8,"nodeType":"2474","messageId":"2475","endLine":9,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":19,"column":5,"nodeType":"2480","messageId":"2481","endLine":25,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2530","line":13,"column":8,"nodeType":"2474","messageId":"2475","endLine":13,"endColumn":15},{"ruleId":"2464","severity":1,"message":"2501","line":38,"column":47,"nodeType":"2466","messageId":"2502","endLine":38,"endColumn":49},{"ruleId":"2464","severity":1,"message":"2501","line":47,"column":34,"nodeType":"2466","messageId":"2502","endLine":47,"endColumn":36},{"ruleId":"2472","severity":1,"message":"2531","line":86,"column":26,"nodeType":"2474","messageId":"2475","endLine":86,"endColumn":36},{"ruleId":"2503","severity":1,"message":"2504","line":32,"column":13,"nodeType":"2505","messageId":"2506","endLine":32,"endColumn":15},{"ruleId":"2472","severity":1,"message":"2473","line":1,"column":9,"nodeType":"2474","messageId":"2475","endLine":1,"endColumn":18},{"ruleId":"2472","severity":1,"message":"2510","line":3,"column":16,"nodeType":"2474","messageId":"2475","endLine":3,"endColumn":20},{"ruleId":"2472","severity":1,"message":"2511","line":2,"column":8,"nodeType":"2474","messageId":"2475","endLine":2,"endColumn":9},{"ruleId":"2478","severity":1,"message":"2479","line":7,"column":5,"nodeType":"2480","messageId":"2481","endLine":10,"endColumn":6},{"ruleId":"2472","severity":1,"message":"2589","line":11,"column":108,"nodeType":"2474","messageId":"2475","endLine":11,"endColumn":114},{"ruleId":"2503","severity":1,"message":"2520","line":30,"column":12,"nodeType":"2505","messageId":"2506","endLine":30,"endColumn":14},{"ruleId":"2478","severity":1,"message":"2479","line":39,"column":5,"nodeType":"2480","messageId":"2481","endLine":41,"endColumn":6},{"ruleId":"2590","severity":1,"message":"2591","line":34,"column":8,"nodeType":"2592","messageId":"2593","endLine":34,"endColumn":9},{"ruleId":"2590","severity":1,"message":"2591","line":66,"column":8,"nodeType":"2592","messageId":"2593","endLine":66,"endColumn":9},{"ruleId":"2472","severity":1,"message":"2594","line":15,"column":36,"nodeType":"2474","messageId":"2475","endLine":15,"endColumn":51},{"ruleId":"2503","severity":1,"message":"2520","line":97,"column":17,"nodeType":"2505","messageId":"2506","endLine":97,"endColumn":19},{"ruleId":"2503","severity":1,"message":"2520","line":110,"column":17,"nodeType":"2505","messageId":"2506","endLine":110,"endColumn":19},{"ruleId":"2472","severity":1,"message":"2492","line":5,"column":8,"nodeType":"2474","messageId":"2475","endLine":5,"endColumn":13},{"ruleId":"2472","severity":1,"message":"2595","line":8,"column":17,"nodeType":"2474","messageId":"2475","endLine":8,"endColumn":28},{"ruleId":"2503","severity":1,"message":"2520","line":45,"column":33,"nodeType":"2505","messageId":"2506","endLine":45,"endColumn":35},{"ruleId":"2472","severity":1,"message":"2596","line":78,"column":40,"nodeType":"2474","messageId":"2475","endLine":78,"endColumn":49},{"ruleId":"2478","severity":1,"message":"2479","line":9,"column":5,"nodeType":"2480","messageId":"2481","endLine":11,"endColumn":6},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["2597"],"no-negated-in-lhs",["2598"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'style' is defined but never used.","'ClockUI' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["2597"],["2598"],"'Link' is defined but never used.","'Redirect' is defined but never used.",["2597"],["2598"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PureComponent' is defined but never used.","'store' is defined but never used.","'Tag' is defined but never used.","'_checkZip' is defined but never used.","'Space' is defined but never used.",["2597"],["2598"],"'d' is assigned a value but never used.","'headerToken' is defined but never used.","'receiveData' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'Tags' is defined but never used.","'$' is defined but never used.","'ViewImg' is defined but never used.","'CHANGE_INPUT_VALUE' is defined but never used.","'ADD_TODO_ITEM' is defined but never used.","'DELETE_TODO_ITEM' is defined but never used.","'hostPort' is defined but never used.","'Image' is defined but never used.","'Modal' is defined but never used.","'message' is defined but never used.","Expected '===' and instead saw '=='.","'modelList' is assigned a value but never used.","'Pagination' is defined but never used.","'Button' is defined but never used.","'_modelList' is defined but never used.","'dataType' is assigned a value but never used.","'visible' is assigned a value but never used.","'treeKey' is assigned a value but never used.","'data' is defined but never used.","'InputNumber' is defined but never used.","'echarts' is defined but never used.","'dataSource' is assigned a value but never used.","'Avatar' is defined but never used.","'id' is assigned a value but never used.","'routeConfig' is defined but never used.","'returnData' is defined but never used.","'loading' is assigned a value but never used.","'Cascader' is defined but never used.","'useState' is defined but never used.","'_deleteLabel' is defined but never used.","'flag' is assigned a value but never used.","'transformedID' is assigned a value but never used.","'records' is assigned a value but never used.","Duplicate key 'flag'.","'originID' is assigned a value but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'AddCsv' is defined but never used.","'styles' is assigned a value but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'UploadOutlined' is defined but never used.","'_message' is defined but never used.","'_vibPngSelectPage' is defined but never used.","'Option' is assigned a value but never used.","'testSet' is assigned a value but never used.","'trainSet' is assigned a value but never used.","'_deleteCsv' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Drawer' is defined but never used.","react/jsx-pascal-case","Imported JSX component item must be in PascalCase or SCREAMING_SNAKE_CASE","'Card' is defined but never used.","'Descriptions' is defined but never used.","'Table' is defined but never used.","'DeviceMsg' is defined but never used.","'LineCharts' is defined but never used.","'errorMsg' is defined but never used.","'detectAnomalies' is defined but never used.","'_createChart' is defined but never used.",["2597"],["2598"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'trainSetId' is assigned a value but never used.",["2597"],["2598"],"'imgResultTotal' is assigned a value but never used.","'Tooltip' is defined but never used.","'DeviceImg' is defined but never used.","'Tabs' is defined but never used.","'_vibmodelList' is defined but never used.","'getModelList' is defined but never used.","'Alert' is defined but never used.","'_vibTaskpageonChange' is defined but never used.","'resultColumns' is defined but never used.","'TextLoop' is defined but never used.",["2597"],["2598"],"'oneDay' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'_vibModelDelete' is defined but never used.","'ColumnGroup' is assigned a value but never used.","'inputName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]